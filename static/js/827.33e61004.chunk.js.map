{"version":3,"file":"static/js/827.33e61004.chunk.js","mappings":"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","sources":["components/sections/AboutSection.js","../node_modules/framer-motion/dist/es/animation/hooks/animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/hooks/use-animation.mjs"],"sourcesContent":["// src/components/sections/AboutSection.js\r\nimport React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { motion, useInView, useAnimation, useScroll, useTransform } from 'framer-motion';\r\nimport { LanguageContext } from '../../contexts/LanguageContext';\r\nimport Lottie from 'lottie-react';\r\nimport myAboutAnimation from '../../assets/animations/about.json';\r\n\r\nconst AboutContainer = styled.section`\r\n  padding: 6rem 0;\r\n  width: 90%;\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n  position: relative;\r\n  overflow: hidden;\r\n  \r\n  @media (max-width: 768px) {\r\n    padding: 4rem 0;\r\n  }\r\n`;\r\n\r\nconst BackgroundElements = styled.div`\r\n  position: absolute;\r\n  inset: 0;\r\n  z-index: -1;\r\n  overflow: hidden;\r\n  \r\n  .circle-1, .circle-2, .dots, .squiggly {\r\n    position: absolute;\r\n    opacity: 0.3;\r\n  }\r\n  \r\n  .circle-1 {\r\n    width: 30vw;\r\n    height: 30vw;\r\n    max-width: 500px;\r\n    max-height: 500px;\r\n    border-radius: 50%;\r\n    background: radial-gradient(circle, ${({ theme }) => `${theme.primary}20`} 0%, transparent 70%);\r\n    top: -15%;\r\n    right: -10%;\r\n    filter: blur(80px);\r\n  }\r\n  \r\n  .circle-2 {\r\n    width: 25vw;\r\n    height: 25vw;\r\n    max-width: 400px;\r\n    max-height: 400px;\r\n    border-radius: 50%;\r\n    background: radial-gradient(circle, ${({ theme }) => `${theme.secondary}20`} 0%, transparent 70%);\r\n    bottom: -10%;\r\n    left: -10%;\r\n    filter: blur(60px);\r\n  }\r\n  \r\n  .dots {\r\n    top: 20%;\r\n    right: 5%;\r\n    width: 180px;\r\n    height: 180px;\r\n    background-image: radial-gradient(${({ theme }) => `${theme.textAlt}30`} 2px, transparent 2px);\r\n    background-size: 20px 20px;\r\n    opacity: 0.2;\r\n  }\r\n  \r\n  .squiggly {\r\n    bottom: 15%;\r\n    left: 5%;\r\n    width: 150px;\r\n    height: 80px;\r\n    background-image: url(\"data:image/svg+xml,%3Csvg width='100' height='20' viewBox='0 0 100 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0 10 C 30 20, 70 0, 100 10' stroke='%23888' fill='none' stroke-width='2'/%3E%3C/svg%3E\");\r\n    background-size: 100px 20px;\r\n    background-repeat: repeat-x;\r\n    opacity: 0.15;\r\n  }\r\n`;\r\n\r\nconst AboutGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: clamp(2rem, 5vw, 4rem);\r\n  align-items: center;\r\n  \r\n  @media (max-width: 992px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nconst imageFrameAnimation = keyframes`\r\n  0% { transform: translate(0, 0) rotate(0deg); }\r\n  25% { transform: translate(5px, 0) rotate(0.5deg); }\r\n  50% { transform: translate(5px, 5px) rotate(0deg); }\r\n  75% { transform: translate(0, 5px) rotate(-0.5deg); }\r\n  100% { transform: translate(0, 0) rotate(0deg); }\r\n`;\r\n\r\nconst floatAnimation = keyframes`\r\n  0% { transform: translateY(0px); }\r\n  50% { transform: translateY(-10px); }\r\n  100% { transform: translateY(0px); }\r\n`;\r\n\r\nconst AboutImageContainer = styled(motion.div)`\r\n  position: relative;\r\n  z-index: 1;\r\n  animation: ${floatAnimation} 6s ease-in-out infinite;\r\n  filter: drop-shadow(0 10px 20px rgba(0,0,0,0.15));\r\n  \r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    border: 4px solid ${({ theme }) => theme.primary};\r\n    top: -20px;\r\n    ${props => props.isRTL ? 'right' : 'left'}: -20px;\r\n    z-index: -1;\r\n    border-radius: 20px;\r\n    animation: ${imageFrameAnimation} 8s ease-in-out infinite;\r\n    transition: all 0.5s ease;\r\n  }\r\n  \r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    width: 120px;\r\n    height: 120px;\r\n    border: 3px dashed ${({ theme }) => theme.secondary};\r\n    border-radius: 50%;\r\n    bottom: -40px;\r\n    ${props => props.isRTL ? 'left' : 'right'}: -30px;\r\n    z-index: -1;\r\n    opacity: 0.6;\r\n    animation: spin 20s linear infinite;\r\n  }\r\n  \r\n  @keyframes spin {\r\n    from { transform: rotate(0deg); }\r\n    to { transform: rotate(360deg); }\r\n  }\r\n  \r\n  @media (max-width: 992px) {\r\n    max-width: 500px;\r\n    margin: 0 auto 3rem;\r\n  }\r\n  \r\n  &:hover::before {\r\n    transform: translate(${props => props.isRTL ? '-10px' : '10px'}, 10px);\r\n    border-color: ${({ theme }) => theme.secondary};\r\n  }\r\n`;\r\n\r\nconst LottieWrapper = styled.div`\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  overflow: hidden;\r\n  box-shadow: ${({ theme }) => theme.shadow};\r\n  background: ${({ theme }) => theme.cardBg || 'rgba(255, 255, 255, 0.03)'};\r\n  backdrop-filter: blur(15px);\r\n  transition: all 0.5s ease;\r\n  \r\n  &:hover {\r\n    transform: scale(1.02);\r\n  }\r\n`;\r\n\r\nconst AboutContent = styled.div`\r\n  text-align: ${props => props.isRTL ? 'right' : 'left'};\r\n  position: relative;\r\n  \r\n  @media (max-width: 768px) {\r\n    padding: 0 1rem;\r\n  }\r\n`;\r\n\r\nconst AboutHeading = styled(motion.h2)`\r\n  margin-bottom: 1.5rem;\r\n  color: ${({ theme }) => theme.primary};\r\n  font-size: clamp(2rem, 4vw, 2.4rem);\r\n  position: relative;\r\n  display: inline-block;\r\n  \r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    width: 60%;\r\n    height: 4px;\r\n    background: linear-gradient(to right, ${({ theme }) => theme.primary}, ${({ theme }) => theme.secondary});\r\n    bottom: -10px;\r\n    left: 0;\r\n    border-radius: 2px;\r\n  }\r\n`;\r\n\r\nconst AboutDescription = styled(motion.p)`\r\n  margin-bottom: 2.5rem;\r\n  font-size: clamp(1rem, 2vw, 1.1rem);\r\n  line-height: 1.8;\r\n  position: relative;\r\n  z-index: 1;\r\n  \r\n  strong, em {\r\n    color: ${({ theme }) => theme.primary};\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nconst StatsGrid = styled(motion.div)`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: clamp(1rem, 3vw, 2rem);\r\n  margin-bottom: 2.5rem;\r\n  \r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n    max-width: 300px;\r\n    ${props => props.isRTL ? 'margin-right' : 'margin-left'}: auto;\r\n    ${props => props.isRTL ? 'margin-left' : 'margin-right'}: auto;\r\n  }\r\n`;\r\n\r\nconst glowEffect = keyframes`\r\n  0% { box-shadow: 0 0 15px rgba(0, 0, 0, 0.1); }\r\n  50% { box-shadow: 0 0 25px ${({ theme }) => `${theme.primary}40`}; }\r\n  100% { box-shadow: 0 0 15px rgba(0, 0, 0, 0.1); }\r\n`;\r\n\r\nconst StatItem = styled(motion.div)`\r\n  text-align: center;\r\n  padding: 1.8rem 1.5rem;\r\n  border-radius: 16px;\r\n  background: ${({ theme }) => theme.cardBg || 'rgba(255, 255, 255, 0.03)'};\r\n  backdrop-filter: blur(15px);\r\n  transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);\r\n  border: 1px solid rgba(255, 255, 255, 0.05);\r\n  overflow: hidden;\r\n  position: relative;\r\n  \r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: -150%;\r\n    width: 150%;\r\n    height: 100%;\r\n    background: linear-gradient(\r\n      to right,\r\n      transparent 0%,\r\n      rgba(255, 255, 255, 0.05) 50%,\r\n      transparent 100%\r\n    );\r\n    transform: skewX(-20deg);\r\n    transition: all 0.7s ease;\r\n  }\r\n  \r\n  &:hover {\r\n    transform: translateY(-8px);\r\n    animation: ${glowEffect} 2s infinite;\r\n    \r\n    &::before {\r\n      left: 150%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst countAnimation = keyframes`\r\n  from { opacity: 0; transform: translateY(15px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n`;\r\n\r\nconst StatValue = styled.h3`\r\n  font-size: clamp(2rem, 5vw, 2.5rem);\r\n  font-weight: 700;\r\n  margin-bottom: 0.5rem;\r\n  background: linear-gradient(45deg, ${({ theme }) => theme.primary}, ${({ theme }) => theme.secondary});\r\n  -webkit-background-clip: text;\r\n  background-clip: text;\r\n  color: transparent;\r\n  display: inline-block;\r\n  position: relative;\r\n  opacity: 0;\r\n  animation: ${countAnimation} 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;\r\n  animation-delay: ${props => props.delay || '0s'};\r\n`;\r\n\r\nconst StatLabel = styled.p`\r\n  color: ${({ theme }) => theme.textAlt};\r\n  font-weight: 500;\r\n  font-size: 1rem;\r\n  opacity: 0.9;\r\n`;\r\n\r\nconst buttonHover = keyframes`\r\n  0% { background-position: 0% 50%; }\r\n  50% { background-position: 100% 50%; }\r\n  100% { background-position: 0% 50%; }\r\n`;\r\n\r\nconst buttonRipple = keyframes`\r\n  0% {\r\n    transform: scale(0);\r\n    opacity: 0.8;\r\n  }\r\n  100% {\r\n    transform: scale(2);\r\n    opacity: 0;\r\n  }\r\n`;\r\n\r\nconst AboutButton = styled(motion.a)`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 0.8rem;\r\n  padding: 1rem 2.5rem;\r\n  background: linear-gradient(45deg, ${({ theme }) => theme.primary}, ${({ theme }) => theme.secondary}, ${({ theme }) => theme.primary});\r\n  background-size: 200% 200%;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 30px;\r\n  font-size: clamp(1rem, 2vw, 1.1rem);\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  box-shadow: 0 6px 20px ${({ theme }) => `${theme.primary}30`};\r\n  transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);\r\n  position: relative;\r\n  overflow: hidden;\r\n  \r\n  .ripple {\r\n    position: absolute;\r\n    border-radius: 50%;\r\n    background-color: rgba(255, 255, 255, 0.4);\r\n    width: 100px;\r\n    height: 100px;\r\n    margin-top: -50px;\r\n    margin-left: -50px;\r\n    animation: ${buttonRipple} 1s;\r\n    opacity: 0;\r\n  }\r\n  \r\n  &:hover {\r\n    animation: ${buttonHover} 2s infinite;\r\n    box-shadow: 0 8px 25px ${({ theme }) => `${theme.primary}50`};\r\n    transform: translateY(-3px);\r\n  }\r\n`;\r\n\r\nconst ButtonIcon = styled(motion.span)`\r\n  display: inline-flex;\r\n`;\r\n\r\nconst AboutSection = () => {\r\n  const { language, t } = useContext(LanguageContext);\r\n  const isRTL = language === 'ar';\r\n  \r\n  const statsRef = useRef(null);\r\n  const contentRef = useRef(null);\r\n  const isStatsInView = useInView(statsRef, { once: true, amount: 0.3 });\r\n  const isContentInView = useInView(contentRef, { once: true, amount: 0.1 });\r\n  const statsControls = useAnimation();\r\n  const contentControls = useAnimation();\r\n  \r\n  const [rippleCount, setRippleCount] = useState(0);\r\n  const [ripples, setRipples] = useState([]);\r\n\r\n  // Create ripple effect on button click\r\n  const createRipple = (e) => {\r\n    const button = e.currentTarget;\r\n    const rect = button.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n    \r\n    const newRipple = {\r\n      x,\r\n      y,\r\n      id: rippleCount,\r\n    };\r\n    \r\n    setRipples([...ripples, newRipple]);\r\n    setRippleCount(rippleCount + 1);\r\n    \r\n    setTimeout(() => {\r\n      setRipples(ripples => ripples.filter(ripple => ripple.id !== newRipple.id));\r\n    }, 1000);\r\n  };\r\n  \r\n  // Scroll animation for the Lottie container\r\n  const { scrollYProgress } = useScroll();\r\n  const lottieRotate = useTransform(scrollYProgress, [0, 1], [0, 10]);\r\n  const lottieScale = useTransform(scrollYProgress, [0, 0.5], [1, 1.05]);\r\n  \r\n  useEffect(() => {\r\n    if (isStatsInView) {\r\n      statsControls.start('visible');\r\n    }\r\n    \r\n    if (isContentInView) {\r\n      contentControls.start('visible');\r\n    }\r\n  }, [isStatsInView, isContentInView, statsControls, contentControls]);\r\n  \r\n  // Animation variants\r\n  const containerVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: {\r\n      opacity: 1,\r\n      transition: {\r\n        staggerChildren: 0.15,\r\n        delayChildren: 0.1\r\n      }\r\n    }\r\n  };\r\n  \r\n  const itemVariants = {\r\n    hidden: { opacity: 0, y: 30 },\r\n    visible: {\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: { duration: 0.7, ease: [0.22, 1, 0.36, 1] }\r\n    }\r\n  };\r\n  \r\n  const statCardVariants = {\r\n    hidden: { opacity: 0, y: 40 },\r\n    visible: i => ({\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: {\r\n        delay: i * 0.1,\r\n        duration: 0.6,\r\n        ease: [0.22, 1, 0.36, 1]\r\n      }\r\n    })\r\n  };\r\n\r\n  return (\r\n    <AboutContainer>\r\n      <BackgroundElements>\r\n        <div className=\"circle-1\" />\r\n        <div className=\"circle-2\" />\r\n        <div className=\"dots\" />\r\n        <div className=\"squiggly\" />\r\n      </BackgroundElements>\r\n      \r\n      <AboutGrid>\r\n        <AboutImageContainer\r\n          isRTL={isRTL}\r\n          initial={{ opacity: 0, x: isRTL ? 80 : -80, rotateY: isRTL ? 15 : -15 }}\r\n          whileInView={{ \r\n            opacity: 1, \r\n            x: 0, \r\n            rotateY: 0,\r\n            transition: { \r\n              duration: 1, \r\n              ease: [0.22, 1, 0.36, 1]\r\n            }\r\n          }}\r\n          viewport={{ once: true, amount: 0.3 }}\r\n          style={{ rotateZ: lottieRotate, scale: lottieScale }}\r\n        >\r\n          <LottieWrapper>\r\n            <Lottie \r\n              animationData={myAboutAnimation} \r\n              loop={true}\r\n              style={{ width: '100%' }}\r\n            />\r\n          </LottieWrapper>\r\n        </AboutImageContainer>\r\n        \r\n        <AboutContent\r\n          ref={contentRef}\r\n          as={motion.div}\r\n          variants={containerVariants}\r\n          initial=\"hidden\"\r\n          animate={contentControls}\r\n          isRTL={isRTL}\r\n        >\r\n          <AboutHeading variants={itemVariants}>\r\n            {t('about.title')}\r\n          </AboutHeading>\r\n          \r\n          <AboutDescription variants={itemVariants}>\r\n            {t('about.paragraph1')}\r\n          </AboutDescription>\r\n          \r\n          <AboutDescription variants={itemVariants}>\r\n            {t('about.paragraph2')}\r\n          </AboutDescription>\r\n          \r\n          <StatsGrid \r\n            ref={statsRef}\r\n            animate={statsControls}\r\n            initial=\"hidden\"\r\n            variants={containerVariants}\r\n            isRTL={isRTL}\r\n          >\r\n            {[\r\n              { value: \"5+\", label: t('about.yearsExperience'), delay: \"0.3s\" },\r\n              { value: \"20+\", label: t('about.projectsCompleted'), delay: \"0.5s\" },\r\n              { value: \"15+\", label: t('about.clientsSatisfied'), delay: \"0.7s\" }\r\n            ].map((stat, index) => (\r\n              <StatItem \r\n                key={index}\r\n                custom={index}\r\n                variants={statCardVariants}\r\n                whileHover={{ \r\n                  scale: 1.05, \r\n                  transition: { duration: 0.3 }\r\n                }}\r\n              >\r\n                <StatValue delay={stat.delay}>{stat.value}</StatValue>\r\n                <StatLabel>{stat.label}</StatLabel>\r\n              </StatItem>\r\n            ))}\r\n          </StatsGrid>\r\n          \r\n          <AboutButton\r\n            href=\"/resume\"\r\n            variants={itemVariants}\r\n            whileHover={{ scale: 1.05 }}\r\n            whileTap={{ scale: 0.95 }}\r\n            onClick={createRipple}\r\n          >\r\n            {ripples.map(ripple => (\r\n              <span \r\n                key={ripple.id} \r\n                className=\"ripple\"\r\n                style={{ top: ripple.y, left: ripple.x }}\r\n              />\r\n            ))}\r\n            Download CV\r\n            <ButtonIcon\r\n              animate={{ x: [0, 5, 0] }}\r\n              transition={{ repeat: Infinity, duration: 1.5, repeatType: \"reverse\" }}\r\n            >\r\n              <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M12 4V16M12 16L8 12M12 16L16 12M6 20H18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n              </svg>\r\n            </ButtonIcon>\r\n          </AboutButton>\r\n        </AboutContent>\r\n      </AboutGrid>\r\n    </AboutContainer>\r\n  );\r\n};\r\n\r\nexport default AboutSection;","import { invariant } from 'motion-utils';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\n\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            invariant(hasMounted, \"controls.start() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            const animations = [];\n            subscribers.forEach((visualElement) => {\n                animations.push(animateVisualElement(visualElement, definition, {\n                    transitionOverride,\n                }));\n            });\n            return Promise.all(animations);\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls, setValues };\n","import { animationControls } from './animation-controls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    useIsomorphicLayoutEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\nexport { useAnimation, useAnimationControls };\n"],"names":["AboutContainer","styled","section","BackgroundElements","div","_ref","theme","primary","_ref2","secondary","_ref3","textAlt","AboutGrid","imageFrameAnimation","keyframes","floatAnimation","AboutImageContainer","motion","_ref4","props","isRTL","_ref5","_ref6","LottieWrapper","_ref7","shadow","_ref8","cardBg","AboutContent","AboutHeading","h2","_ref9","_ref10","_ref11","AboutDescription","p","_ref12","StatsGrid","glowEffect","_ref13","StatItem","_ref14","countAnimation","StatValue","h3","_ref15","_ref16","delay","StatLabel","_ref17","buttonHover","buttonRipple","AboutButton","a","_ref18","_ref19","_ref20","_ref21","_ref22","ButtonIcon","span","AboutSection","language","t","useContext","LanguageContext","statsRef","useRef","contentRef","isStatsInView","useInView","once","amount","isContentInView","statsControls","useAnimation","contentControls","rippleCount","setRippleCount","useState","ripples","setRipples","scrollYProgress","useScroll","lottieRotate","useTransform","lottieScale","useEffect","start","containerVariants","hidden","opacity","visible","transition","staggerChildren","delayChildren","itemVariants","y","duration","ease","statCardVariants","i","_jsxs","children","_jsx","className","initial","x","rotateY","whileInView","viewport","style","rotateZ","scale","Lottie","animationData","myAboutAnimation","loop","width","ref","as","variants","animate","value","label","map","stat","index","custom","whileHover","href","whileTap","onClick","e","rect","currentTarget","getBoundingClientRect","newRipple","clientX","left","clientY","top","id","setTimeout","filter","ripple","repeat","Infinity","repeatType","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","setVariants","visualElement","variantLabels","reverse","forEach","key","variant","getVariant","setTarget","variantChildren","child","animationControls","hasMounted","subscribers","Set","controls","subscribe","add","delete","definition","transitionOverride","invariant","animations","push","animateVisualElement","Promise","all","set","Array","isArray","setValues","stop","values","stopAnimation","mount","useConstant","useIsomorphicLayoutEffect"],"sourceRoot":""}