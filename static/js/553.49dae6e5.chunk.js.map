{"version":3,"file":"static/js/553.49dae6e5.chunk.js","mappings":"2KAAA,MAAMA,EAAYC,GAAuB,kBAARA,GAA4B,OAARA,EAC9C,SAASC,EAAYC,EAAMC,GAAkC,IAA5BC,EAAYC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAM,EACzD,IAAKN,EAASG,KAAUH,EAASI,GAC7B,OAAOD,IAASC,EAEpB,MAAMK,EAAQC,OAAOC,KAAKR,GAAMS,QAAOC,IAAQR,EAAaQ,KAAOC,EAAQJ,OAAOC,KAAKP,GAAMQ,QAAOC,IAAQR,EAAaQ,KACzH,GAAIJ,EAAMF,SAAWO,EAAMP,OACvB,OAAO,EAEX,IAAK,MAAMM,KAAOJ,EAAO,CACrB,MAAMM,EAASZ,EAAKU,GAAMG,EAASZ,EAAKS,GACxC,GAAIb,EAASe,IAAWf,EAASgB,GAAS,CACtC,GAAID,IAAWX,GAAQY,IAAWb,EAC9B,SAEJ,IAAKD,EAAYa,EAAQC,EAAQX,GAC7B,OAAO,CAEf,MACK,GAAIY,MAAMC,QAAQH,IAAWE,MAAMC,QAAQF,IAC5C,IAAKG,EAAkBJ,EAAQC,EAAQX,GACnC,OAAO,OAGV,GAAIU,IAAWC,EAChB,OAAO,CAEf,CACA,OAAO,CACX,CACA,SAASG,EAAkBC,EAAMC,EAAMhB,GACnC,GAAIe,EAAKb,SAAWc,EAAKd,OACrB,OAAO,EAEX,IAAK,IAAIe,EAAI,EAAGA,EAAIF,EAAKb,OAAQe,IAAK,CAClC,MAAMC,EAAOH,EAAKE,GAAIE,EAAOH,EAAKC,GAClC,GAAIL,MAAMC,QAAQK,IAASN,MAAMC,QAAQM,IACrC,IAAKL,EAAkBI,EAAMC,EAAMnB,GAC/B,OAAO,OAGV,GAAIL,EAASuB,IAASvB,EAASwB,IAChC,IAAKtB,EAAYqB,EAAMC,EAAMnB,GACzB,OAAO,OAGV,GAAIkB,IAASC,EACd,OAAO,CAEf,CACA,OAAO,CACX,CChDA,MAAMC,EAAY,cAClB,MAAMC,UAAkBC,EAAAA,UACpBC,WAAAA,CAAYC,GACRC,MAAMD,GACNE,KAAKC,MAAQ,CACTC,MAAM,EACNC,aAAS1B,EAEjB,CACA2B,OAAAA,GACSJ,KAAKC,MAAME,UAGhBH,KAAKC,MAAME,QAAQC,UACnBJ,KAAKK,SAAS,CACVF,aAAS1B,IAEjB,CACA6B,qBAAAA,CAAsBC,GAClB,MAAMC,EAAcD,EAAUE,SAAWF,EAAUG,OAAQC,EAAiBX,KAAKF,MAAMW,SAAWT,KAAKF,MAAMY,OAC7G,OAAQH,EAAUK,MAAQZ,KAAKF,MAAMc,KACjCL,EAAUM,KAAOb,KAAKF,MAAMe,IAC5BN,EAAUO,kBAAoBd,KAAKF,MAAMgB,iBACzCP,EAAUQ,YAAcf,KAAKF,MAAMiB,WACnCR,EAAUS,SAAWhB,KAAKF,MAAMkB,QAChCT,EAAUU,QAAUjB,KAAKF,MAAMmB,QAC9B9C,EAAYoC,EAAUW,MAAOlB,KAAKF,MAAMoB,QACzCX,EAAUL,OAASF,KAAKF,MAAMI,MAC9BK,EAAUY,SAAWnB,KAAKF,MAAMqB,SAC/BhD,EAAYqC,EAAaG,GAAgB7B,GAAOA,EAAIsC,WAAW,MACxE,CACAC,kBAAAA,GACIrB,KAAKsB,SACT,CACAC,WAAAA,GACIvB,KAAKsB,UAAUE,MAAK,KAChBzB,MAAMwB,aAAa,GAE3B,CACAE,iBAAAA,GACI,WACQzB,KAAKF,MAAMI,YACLF,KAAKF,MAAMI,KAAKwB,EAAAA,IAE1B1B,KAAKK,SAAS,CACVH,MAAM,IACPyB,gBACO3B,KAAK4B,eAAe,GAEjC,EATD,EAUJ,CACAC,oBAAAA,GACI7B,KAAKI,SACT,CACA0B,MAAAA,GACI,MAAM,MAAEb,EAAK,OAAED,EAAM,UAAED,EAAS,gBAAED,EAAe,GAAED,GAAOb,KAAKF,MAC/D,OAAQiC,EAAAA,cAAoB,MAAO,CAAEhB,UAAWA,EAAWF,GAAIA,GAC3DkB,EAAAA,cAAoB,SAAU,CAAEhB,UAAWD,EAAiBI,MAAO,IACxDlB,KAAKF,MAAMoB,MACdD,QACAD,YAEhB,CACA,aAAMM,GACFtB,KAAKI,gBACCJ,KAAK4B,eACf,CACA,mBAAMA,GACF,IAAK5B,KAAKC,MAAMC,KACZ,OAEJ,MAAMW,EAAKb,KAAKF,MAAMe,IAAMlB,EAAUqC,aAAanB,IAAMnB,EAAWuC,QAAkBP,EAAAA,GAAYQ,KAAK,CACnGtB,IAAKZ,KAAKF,MAAMc,IAChBC,KACAJ,QAAST,KAAKF,MAAMW,SAAWT,KAAKF,MAAMY,SAE1CV,KAAKF,MAAMmC,YACXjC,KAAKF,MAAMmC,UAAUE,QAAUF,GAEnCjC,KAAKK,SAAS,CACVF,QAAS8B,IAETjC,KAAKF,MAAMqB,cACLnB,KAAKF,MAAMqB,OAAOc,EAEhC,EAEJtC,EAAUqC,aAAe,CACrBf,MAAO,OACPD,OAAQ,OACRP,QAAS,CAAC,EACVS,MAAO,CAAC,EACRN,SAAKnC,EACLoC,GAAInB,GAER,S,iDCjGO,MAAMC,EACT,WAAOO,CAAKO,GACR,MAAM2B,EAAY,IAAIzC,EAAa0C,EAAW5B,EAAQ4B,SACtD,IAAKA,EACD,MAAM,IAAIC,MAAM,wBAEpB,MAAMC,EAAKC,SAASC,cAAcJ,GAClC,IAAKE,EACD,MAAM,IAAID,MAAM,iCAuDpB,OArDAZ,EAAAA,GACKgB,IAAIL,EAASM,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAKJ,EAAI,CACrDK,WAAY,CACRC,QAAQ,GAEZT,UAAW,CACPU,MAAO,CACHC,MAAOtC,EAAQqC,OAAS,WAE5BE,MAAO,CACHF,MAAO,SACPG,SAAUxC,EAAQyC,aAAe,IACjCL,OAAQpC,EAAQ0C,mBAAoB,GAExCC,KAAM,CACFP,QAAQ,EACRQ,MAAO5C,EAAQ4C,OAAS,IAE5BC,OAAQ,CACJP,MAAOtC,EAAQ8C,cAAgB,KAEnCC,KAAM,CACFT,MAAO,CAAEU,IAAK,EAAGC,IAAKjD,EAAQkD,gBAAkB,KAGxDC,WAAYnD,EAAQmD,YAAYC,KAAKD,IAAU,CAC3CE,SAAUF,EAAWG,WACrBtD,QAAS,CACL2B,UAAW,CACPU,MAAO,CACHC,MAAOa,EAAWnD,SAASqC,OAE/BE,MAAO,CACHC,SAAUW,EAAWnD,SAASyC,YAC9BL,OAAQe,EAAWnD,SAAS0C,kBAEhCG,OAAQ,CACJP,MAAOtC,EAAQ8C,cAEnBH,KAAM,CACFP,QAAQ,EACRQ,MAAOO,EAAWnD,SAAS4C,OAE/BG,KAAM,CACFT,MAAOa,EAAWnD,SAASkD,wBAM1CnC,MAAMS,IACPG,EAAU4B,WAAa/B,CAAS,IAE7BG,CACX,CACAhC,OAAAA,GACI,MAAM6B,EAAYjC,KAAKgE,WACvB/B,GAAaA,EAAU7B,SAC3B,CACA6D,cAAAA,GACI,MAAMhC,EAAYjC,KAAKgE,WACvB/B,GAAaA,EAAUiC,OAC3B,CACAC,eAAAA,GACI,MAAMlC,EAAYjC,KAAKgE,WACvB/B,GAAaA,EAAUmC,MAC3B,EC7EJ,MCEMC,EAAWC,IACb,MAAM,YAAEC,EAAW,OAAEC,GDHAF,KACrB,MAAMC,EAAcA,CAACE,EAAOhE,IACjB6D,EAAOpC,KAAKuC,EAAOhE,GAkB9B,OAhBA8D,EAAYrC,KAAO,CAACuC,EAAOC,EAAgBC,KACvCL,EACKM,SAASH,EAAOC,GAChBlD,MAAMS,IACHA,GACA0C,EAAS1C,EACb,IAEC4C,OAAM,KACPF,OAASlG,EAAU,GACrB,EAEN8F,EAAYO,kBAAqBH,IAC7BL,EAAOQ,kBAAkBH,EAAS,EAG/B,CAAEJ,cAAaC,OADPF,EAAOS,MACQ,ECjBEC,CAAgBV,GAIhD,OAHAW,OAAOV,YAAcA,EACrBU,OAAOT,OAASA,EAChBS,OAAOtF,UAAYA,EACZ,CAAE4E,cAAaC,SAAQ7E,UAASA,EAAE,E,cCqBtC,SAASyD,EAAK8B,EAAUC,EAAaC,EAAWC,EAAUC,EAAWC,IAqDrE,SAAmBL,EAAUK,GAChC,MAAMC,EAAmBN,EAASzE,QAASgF,EAAcD,EAAiBpC,KAAKsC,KAC/E,IADmGD,EAAY5C,OAE3G,OAEJ,GAAIqC,EAASS,cAAgBT,EAASU,UAElC,YADAV,EAASS,cAAgBJ,EAAMxC,OAGnC,MAAM2C,EAAOR,EAASW,eAAeC,SAASZ,EAAUK,GACpDG,GACAR,EAASa,SAASC,MAAMN,GAExBD,EAAYQ,QACZf,EAASa,SAASG,GAAID,EAAAA,EAAAA,IAAMf,EAASa,SAASG,GAAI,EAAG,GACrDhB,EAASa,SAASI,GAAIF,EAAAA,EAAAA,IAAMf,EAASa,SAASI,GAAI,EAAG,IAEzDjB,EAASS,cAAgBT,EAASU,SACtC,CAtEIQ,CAAUlB,EAAUK,GACpB,MAAMc,EAAiBnB,EAASoB,QAASC,EAAgBF,GAAgBxD,QAAUwD,EAAeG,SAAW,EAAI,EAC7GlB,GAAaF,IACbF,EAASa,SAASG,GAAMZ,EAAYC,EAAMkB,QAAW,GAAKrB,IAE1DiB,GAAgBxD,QAAUuC,IAC1BF,EAASa,SAASI,GAAMI,GAAiBF,EAAeK,aAAenB,EAAMkB,SAAY,GAAKrB,IAElG,MAAMuB,EAAQzB,EAAS0B,UACvB1B,EAASa,SAASc,OAAOF,GACzB,MAAMZ,EAAWb,EAASa,SAASe,KAAK1B,GACpCiB,GAAgBxD,QAChBwC,EAAW,KACRgB,EAAeG,SAAWT,EAASI,GAAK,GAAKJ,EAASI,GAAKd,GACzDgB,EAAeG,SAAWT,EAASI,GAAK,GAAKJ,EAASI,IAAMd,KACjEU,EAASI,EAAII,EAAgBlB,EACzBD,IACAF,EAASa,SAASI,EAAIJ,EAASI,EAAIf,IAG3C,MAAM2B,EAAgB7B,EAASzE,QAAQuG,OAAQC,GAAmB,EAAI/B,EAASgC,eAAiBH,EAAcI,aAC9GpB,EAASc,OAAOI,GAChB,MAAM,SAAEG,GAAalC,EACrBkC,EAASpB,MAAMD,GACXZ,EAAYkC,UACZD,EAASlB,GAAKoB,KAAKC,IAAIH,EAASlB,EAAIoB,KAAKE,IAAIJ,EAASjB,IACtDiB,EAASjB,GAAKmB,KAAKE,IAAIJ,EAASjB,EAAImB,KAAKC,IAAIH,EAASlB,IAE9D,CCtDO,MAAMuB,EACT5H,WAAAA,GACIG,KAAK0H,UAAaxC,IACd,MAAMjD,EAAYiD,EAASjD,UAAuC0F,EAAlBzC,EAASzE,QAA+B2C,KAAKwE,KAC7F,IAAKD,EAAY9E,OACb,OAEJ,MAAMgF,EAAUF,EAAYP,UAAY,CAAElB,EAAG,GAAIC,EAAG,IAAM2B,EAAa,CACnE5B,EAAI2B,EAAQ3B,EAAI,IAAOjE,EAAU8F,OAAOvE,KAAKvC,MAC7CkF,EAAI0B,EAAQ1B,EAAI,IAAOlE,EAAU8F,OAAOvE,KAAKxC,QAC9CgH,EAAM9C,EAAS+C,cAAehF,GAAWiF,EAAAA,EAAAA,IAAYF,EAAKF,GAAaK,GAAmBC,EAAAA,EAAAA,IAAcT,EAAYjB,cACvHxB,EAASmD,OAAOF,iBAAmBA,EAAmBlG,EAAUoG,OAAOC,WACvEpD,EAAS0C,KAAO,CACZW,OAAQT,EACRU,UAAWtD,EAASa,SAASG,GAAK,EAAI,YAAc,oBACpDuC,MAAOvD,EAASa,SAAS0C,MACzBC,OAAQzF,EACRyD,aAAcxB,EAASmD,OAAOF,iBACjC,CAET,CACAjI,IAAAA,CAAKgF,GACD,MAAkCmB,EAAlBnB,EAASzE,QAAkC2C,KAAKkD,QAChEpB,EAASoB,QAAU,CACfzD,OAAQwD,EAAexD,OACvB6D,cAAc0B,EAAAA,EAAAA,IAAc/B,EAAeK,cAC3CF,QAASH,EAAeG,SAE5BxG,KAAK0H,UAAUxC,EACnB,CACAyD,SAAAA,CAAUzD,GACN,OAAQA,EAAS0D,WAAa1D,EAASzE,QAAQ2C,KAAKP,MACxD,CACAO,IAAAA,CAAK8B,EAAUK,GACX,MAAMsD,EAAkB3D,EAASzE,QAAS0E,EAAc0D,EAAgBzF,KACxE,IAAK+B,EAAYtC,OACb,OAEJ,MAAMZ,EAAYiD,EAASjD,UAAW6G,EAAU7G,EAAUoG,OAAOC,WAAYS,ED2D9E,SAAiC7D,GACpC,OAAOA,EAAS8D,KAAKC,QAAU/D,EAAS8D,KAAKvC,OAAS,CAC1D,CC7DkGyC,CAAwBhE,GAAWiE,GAAajE,EAASmD,OAAOjD,aAAcgD,EAAAA,EAAAA,IAAcjD,EAAY9B,OAASyF,GACvM7G,EAAUoG,OAAOe,aAAc9D,EAAaJ,EAASmD,OAAO/C,aAAc8C,EAAAA,EAAAA,IAAclD,EAASzE,QAAQ2C,KAAKiG,OAASP,EAAUQ,GAAUC,EAAAA,EAAAA,IAAYV,EAAgBrF,KAAKT,OAAS+F,EAA6E1D,EAAa+D,GAApEhE,EAAY3B,KAAO0B,EAASsE,YAAcF,EAAU,GAAyCP,GAAcxD,EAAMkB,QAAU,GAxC/T,EAwCiVpB,EAAWH,EAASmD,OAAOhD,UAAYpD,EAAUoG,OAAOhD,SAChZF,EAAYyC,KAAK/E,ODetB,SAAcqC,EAAUE,GAC3B,MAAMnD,EAAYiD,EAASjD,UAC3B,IAAKiD,EAAS0C,KACV,OAEJ,MAAM6B,EAAa,CACfvD,EAA+B,cAA5BhB,EAAS0C,KAAKY,UAA4BlB,KAAKE,IAAMF,KAAKC,IAC7DpB,EAA+B,cAA5BjB,EAAS0C,KAAKY,UAA4BlB,KAAKC,IAAMD,KAAKE,KAEjEtC,EAASkC,SAASlB,EAAIhB,EAAS0C,KAAKW,OAAOrC,EAAIhB,EAAS0C,KAAKc,OAASe,EAAWvD,EAAEhB,EAAS0C,KAAKa,OACjGvD,EAASkC,SAASjB,EAAIjB,EAAS0C,KAAKW,OAAOpC,EAAIjB,EAAS0C,KAAKc,OAASe,EAAWtD,EAAEjB,EAAS0C,KAAKa,OACjGvD,EAAS0C,KAAKc,QAAUxD,EAAS0C,KAAKlB,aACtC,MAAMgD,EAAgBpC,KAAK5D,IAAIzB,EAAU8F,OAAOvE,KAAKvC,MAAOgB,EAAU8F,OAAOvE,KAAKxC,QAC9EkE,EAAS0C,KAAKc,OAASgB,EAAgB,GACvCxE,EAAS0C,KAAKc,OAASgB,EAAgB,EACvCxE,EAAS0C,KAAKlB,eAAiB,GAE1BxB,EAAS0C,KAAKc,OAAS,IAC5BxD,EAAS0C,KAAKc,OAAS,EACvBxD,EAAS0C,KAAKlB,eAAiB,GAEnCxB,EAAS0C,KAAKa,OAAUrD,EAAY,KAAQ,EAAIF,EAAS0C,KAAKc,OAASgB,EAC3E,CCpCY9B,CAAK1C,EAAUE,GAGfhC,EAAK8B,EAAUC,EAAaC,EAAWC,EAAUC,EAAWC,GD9CjE,SAAuBL,GAC1B,MAAMyE,EAAkBzE,EAASyE,iBAAiB,GAAEC,EAAE,GAAEC,IAAOC,EAAAA,EAAAA,IAAaH,EAAiBzE,EAASkC,UAAW2C,EAAUzC,KAAK0C,IAAIJ,GAAKK,EAAU3C,KAAK0C,IAAIH,IAAK,YAAEK,GAAgBhF,EAASmD,OAAQ8B,EAAYD,EAAYE,WAAYC,EAAYH,EAAYI,SAChQ,GAAKH,GAAcE,EAGnB,IAAMF,GAAaJ,GAAWI,GAAeE,GAAaJ,GAAWI,KAAgBnF,EAASqF,UAC1FrF,EAASqF,YAAeJ,GAAaJ,EAAUI,KAAiBE,GAAaJ,EAAUI,EACnFF,IACAjF,EAASa,SAASG,EAAIhB,EAASa,SAASI,EAAI,EAAIjB,EAASa,SAASG,GAElEmE,IACAnF,EAASa,SAASI,EAAIjB,EAASa,SAASG,EAAI,EAAIhB,EAASa,SAASI,QAGrE,KAAMgE,GAAaJ,EAAUI,MAAgBE,GAAaJ,EAAUI,IAAcnF,EAASqF,UAC5FrF,EAASqF,WAAY,OAEpB,GAAIrF,EAASqF,UAAW,CACzB,MAAMvC,EAAM9C,EAASkC,SAAUoD,EAAMtF,EAASa,SAC1CoE,IAAenC,EAAI9B,EAAIyD,EAAgBzD,GAAKsE,EAAItE,EAAI,GAAO8B,EAAI9B,EAAIyD,EAAgBzD,GAAKsE,EAAItE,EAAI,KAChGsE,EAAItE,KAAMuE,EAAAA,EAAAA,OAEVJ,IAAerC,EAAI7B,EAAIwD,EAAgBxD,GAAKqE,EAAIrE,EAAI,GAAO6B,EAAI7B,EAAIwD,EAAgBxD,GAAKqE,EAAIrE,EAAI,KAChGqE,EAAIrE,KAAMsE,EAAAA,EAAAA,MAElB,CACJ,CCsBQC,CAAcxF,EAClB,E,cCjDG,MAAMyF,EACTC,IAAAA,CAAKC,EAAS3F,EAAUwD,GACfxD,EAAS4F,cACV5F,EAAS4F,YAAc,CAAErH,IAAK,EAAGC,IAAe,EAAV4D,KAAKyD,KAE/C,MAAMD,EAAc5F,EAAS4F,YAC7BD,EAAQG,IAAI,EAAG,EAAGtC,EAAQoC,EAAYrH,IAAKqH,EAAYpH,KAAK,EAChE,CACAuH,aAAAA,GACI,OAAO,EACX,CACAC,YAAAA,CAAajJ,EAAWiD,GACpB,MAAMiG,EAAYjG,EAASiG,UAAW1C,EAAQ0C,GAAW1C,OAAS,CAC9D/E,IAAK,IACLD,IAAK,GAETyB,EAAS4F,aAAe7M,EAAAA,EAAAA,IAASwK,GAK3B,CAAEhF,IAAMgF,EAAMhF,IAAM6D,KAAKyD,GAAM,IAAKrH,IAAM+E,EAAM/E,IAAM4D,KAAKyD,GAAM,KAJjE,CACEtH,IAAK,EACLC,IAAM+E,EAAQnB,KAAKyD,GAAM,IAGrC,E,cCtBJ,SAASK,EAAiB7F,EAAO8F,EAAYC,EAAgB5H,EAAK6H,GAC9D,IAAKF,IACAC,EAAezI,SACdwI,EAAWG,UAAY,GAAK,IAAMH,EAAWI,OAAS,IAAMJ,EAAWG,UAAY,GACrF,OAQJ,GANKH,EAAWK,OACZL,EAAWK,KAAO,IAEjBL,EAAWM,WAAa,GAAK,GAAKN,EAAWK,MAAQL,EAAWM,WAAa,KAC9EN,EAAWK,MAAQnG,EAAMxC,QAExBsI,EAAWM,WAAa,GAAK,GAAKN,EAAWK,MAAQL,EAAWM,WAAa,GAC9E,OAEJ,MAAMC,GAASC,EAAAA,EAAAA,IAAcP,EAAeM,QAAS7F,GAAYsF,EAAWtF,UAAY,GAAKR,EAAMkB,OAAkB,IAATmF,EAAcjF,EAAQ0E,EAAW1E,OAAS,EACjJ4E,GAAkC,eAAtBF,EAAWS,QAcxBT,EAAWtI,OAASgD,EAChBsF,EAAWtI,MAAQ,IACdsI,EAAWI,QACZJ,EAAWI,MAAQ,GAEvBJ,EAAWI,QACXJ,EAAWS,OAAS,aACpBT,EAAWtI,OAASsI,EAAWtI,SApBnCsI,EAAWtI,OAASgD,EAChBsF,EAAWtI,MAAQW,IACd2H,EAAWI,QACZJ,EAAWI,MAAQ,GAEvBJ,EAAWI,QACPF,IACAF,EAAWS,OAAS,aACpBT,EAAWtI,OAASsI,EAAWtI,MAAQW,KAe/C2H,EAAWtF,UAAsB,IAAVY,IACvB0E,EAAWtF,UAAYY,GAEvB0E,EAAWtI,MAAQW,IACnB2H,EAAWtI,OAASW,EAE5B,CC7CO,MAAMqI,EACTlM,WAAAA,CAAYoC,GACRjC,KAAKiC,UAAYA,CACrB,CACA/B,IAAAA,CAAKgF,GACD,MAAM8G,GAAWC,EAAAA,EAAAA,IAAgB/G,EAASzE,QAAQqC,MAAOoC,EAASrE,GAAIqE,EAASzE,QAAQyL,kBACnFF,IACA9G,EAASpC,OAAQqJ,EAAAA,EAAAA,IAAuBH,EAAU9G,EAASzE,QAAQqC,MAAMsJ,UAAWpM,KAAKiC,UAAUoG,OAAOe,cAElH,CACAT,SAAAA,CAAUzD,GACN,MAAQmH,EAAGC,EAAYC,EAAGC,EAAYC,EAAGC,GAAexH,EAASzE,QAAQqC,MAAMsJ,WAAW,MAAEtJ,GAAUoC,EACtG,OAASA,EAAS0D,YACb1D,EAASyH,gBACWlO,IAAnBqE,GAAOuJ,EAAEtJ,OAAuBuJ,EAAWzJ,aACrBpE,IAAnBqE,GAAOyJ,EAAExJ,OAAuByJ,EAAW3J,aACxBpE,IAAnBqE,GAAO2J,EAAE1J,OAAuB2J,EAAW7J,OACxD,CACA+J,MAAAA,CAAO1H,EAAUK,ID4Bd,SAAqBL,EAAUK,GAClC,MAAQ8G,EAAGC,EAAYC,EAAGC,EAAYC,EAAGC,GAAexH,EAASzE,QAAQqC,MAAMsJ,WAAW,MAAEtJ,GAAUoC,EACtG,IAAKpC,EACD,OAEJ,MAAM,EAAEuJ,EAAC,EAAEE,EAAC,EAAEE,GAAM3J,EAChBuJ,GACAjB,EAAiB7F,EAAO8G,EAAGC,EAAY,KAAK,GAE5CC,GACAnB,EAAiB7F,EAAOgH,EAAGC,EAAY,KAAK,GAE5CC,GACArB,EAAiB7F,EAAOkH,EAAGC,EAAY,KAAK,EAEpD,CC1CQG,CAAY3H,EAAUK,EAC1B,ECpBG,MAAMuH,EACTjN,WAAAA,CAAYoC,GACRjC,KAAKiC,UAAYA,CACrB,CACA/B,IAAAA,CAAKgF,GACD,MAAM6H,EAAiB7H,EAASzE,QAAQuM,QACxC9H,EAAS8H,SAAUC,EAAAA,EAAAA,IAAkCF,EAAgB,GACrE,MAAMG,EAAmBH,EAAeX,UACpCc,EAAiBrK,SACjBqC,EAAS8H,QAAQjH,UACZqC,EAAAA,EAAAA,IAAc8E,EAAiB7J,OAAS,IAAOrD,KAAKiC,UAAUoG,OAAOe,aACrE8D,EAAiBC,OAClBjI,EAAS8H,QAAQjH,WAAY0E,EAAAA,EAAAA,OAGzC,CACA9B,SAAAA,CAAUzD,GACN,OAASA,EAAS0D,YACb1D,EAASyH,YACRzH,EAAS8H,SACX9H,EAAS8H,QAAQnK,UACfqC,EAAS8H,QAAQxB,UAAY,IAAM,IAC/BtG,EAAS8H,QAAQxB,UAAY,GAAK,IAC/BtG,EAAS8H,QAAQvB,OAAS,IAAMvG,EAAS8H,QAAQxB,UAAY,GAC9E,CACA4B,KAAAA,CAAMlI,GACEA,EAAS8H,UACT9H,EAAS8H,QAAQtB,KAAO,EACxBxG,EAAS8H,QAAQvB,MAAQ,EAEjC,CACAmB,MAAAA,CAAO1H,EAAUK,GACRvF,KAAK2I,UAAUzD,ICnBrB,SAAuBA,EAAUK,GACpC,MAAM8H,EAAOnI,EAAS8H,QACtB,GAAI9H,EAAS0D,YAAcyE,GAAMxK,SAAYwK,EAAK7B,UAAY,GAAK,IAAM6B,EAAK5B,OAAS,IAAM4B,EAAK7B,UAAY,GAC1G,OAEJ,MAAM8B,EAAWD,EAAK5J,IAAK8J,EAAWF,EAAK3J,IAAKiD,EAAQ0G,EAAK1G,OAAS,EAOtE,GANK0G,EAAK3B,OACN2B,EAAK3B,KAAO,IAEX2B,EAAK1B,WAAa,GAAK,GAAK0B,EAAK3B,MAAQ2B,EAAK1B,WAAa,KAC5D0B,EAAK3B,MAAQnG,EAAMxC,UAElBsK,EAAK1B,WAAa,GAAK,GAAK0B,EAAK3B,MAAQ2B,EAAK1B,WAAa,IAAhE,CAGA,OAAQ0B,EAAKvB,QACT,IAAK,aACGuB,EAAKtK,OAASwK,GACdF,EAAKvB,OAAS,aACTuB,EAAK5B,QACN4B,EAAK5B,MAAQ,GAEjB4B,EAAK5B,SAGL4B,EAAKtK,QAAUsK,EAAKtH,UAAY,GAAKR,EAAMkB,OAE/C,MACJ,IAAK,aACG4G,EAAKtK,OAASuK,GACdD,EAAKvB,OAAS,aACTuB,EAAK5B,QACN4B,EAAK5B,MAAQ,GAEjB4B,EAAK5B,SAGL4B,EAAKtK,QAAUsK,EAAKtH,UAAY,GAAKR,EAAMkB,OAInD4G,EAAKtH,UAA2B,IAAfsH,EAAK1G,QACtB0G,EAAKtH,UAAYY,GAxDzB,SAAsBzB,EAAUnC,EAAOuK,EAAUC,GAC7C,OAAQrI,EAASzE,QAAQuM,QAAQZ,UAAUhM,SACvC,IAAK,MACG2C,GAASwK,GACTrI,EAAS9E,UAEb,MACJ,IAAK,MACG2C,GAASuK,GACTpI,EAAS9E,UAIzB,CA6CIoN,CAAatI,EAAUmI,EAAKtK,MAAOuK,EAAUC,GACxCrI,EAAS0D,YACVyE,EAAKtK,OAAQkD,EAAAA,EAAAA,IAAMoH,EAAKtK,MAAOuK,EAAUC,GAhC7C,CAkCJ,CD1BQE,CAAcvI,EAAUK,EAC5B,EEpCG,MAAMmI,EACT7N,WAAAA,CAAYoC,GACRjC,KAAKiC,UAAYA,EACjBjC,KAAK2N,MAAQ,CACT,SACA,kBACA,oBACA,iBACA,mBACA,QAER,CACAf,MAAAA,CAAO1H,EAAUsD,EAAWjD,EAAOqI,GAC/B,IAAK5N,KAAK2N,MAAME,SAASD,GACrB,OAEJ,MAAM3L,EAAYjC,KAAKiC,UACvB,IAAI6L,GAAU,EACd,IAAK,MAAO,CAAEC,KAAW9L,EAAU+L,QAI/B,QAH8BvP,IAA1BsP,EAAOE,iBACPH,EAAUC,EAAOE,eAAe/I,EAAUK,EAAOiD,IAEjDsF,EACA,MAGR,GAAIA,EACA,OAEJ,MAAM9F,EAAM9C,EAAS+C,cAAe2D,EAAS1G,EAAS0G,OAAQpI,EAAO0B,EAASsE,YAAa0E,GAASC,EAAAA,EAAAA,IAAgBnG,EAAKxE,GAAO4K,EAAanM,EAAU8F,OAAOvE,MC9B/J,SAA0B6J,GAC7B,GAAsB,WAAjBA,EAAKO,SACW,sBAAjBP,EAAKO,SACY,qBAAjBP,EAAKO,SACY,UAAjBP,EAAKO,SACe,SAAnBP,EAAK7E,WAA2C,UAAnB6E,EAAK7E,UACnC,OAEA6E,EAAKa,OAAOG,MAAQ,GAAwB,SAAnBhB,EAAK7E,UAC9B6E,EAAKnI,SAASkC,SAASlB,EAAImH,EAAK7J,KAAO6J,EAAKzB,OAAO1F,EAE9CmH,EAAKa,OAAOI,KAAOjB,EAAKe,WAAWnN,OAA4B,UAAnBoM,EAAK7E,YACtD6E,EAAKnI,SAASkC,SAASlB,EAAImH,EAAKe,WAAWnN,MAAQoM,EAAK7J,KAAO6J,EAAKzB,OAAO1F,GAE/E,MAAMH,EAAWsH,EAAKnI,SAASa,SAASG,EACxC,IAAIqI,GAAU,EACd,GAAwB,UAAnBlB,EAAK7E,WAAyB6E,EAAKa,OAAOG,OAAShB,EAAKe,WAAWnN,OAAS8E,EAAW,GACpE,SAAnBsH,EAAK7E,WAAwB6E,EAAKa,OAAOI,MAAQ,GAAKvI,EAAW,EAAI,CACtE,MAAMyI,GAAcC,EAAAA,EAAAA,IAASpB,EAAKnI,SAASzE,QAAQiO,OAAOtE,YAC1DiD,EAAKnI,SAASa,SAASG,IAAMsI,EAC7BD,GAAU,CACd,CACA,IAAKA,EACD,OAEJ,MAAMI,EAAStB,EAAKzB,OAAO1F,EAAImH,EAAK7J,KAChC6J,EAAKa,OAAOG,OAAShB,EAAKe,WAAWnN,OAA4B,UAAnBoM,EAAK7E,UACnD6E,EAAKnI,SAASkC,SAASlB,EAAImH,EAAKe,WAAWnN,MAAQ0N,EAE9CtB,EAAKa,OAAOI,MAAQ,GAAwB,SAAnBjB,EAAK7E,YACnC6E,EAAKnI,SAASkC,SAASlB,EAAIyI,GAEV,UAAjBtB,EAAKO,SACLP,EAAKnI,SAAS9E,SAEtB,CDJQwO,CAAiB,CAAE1J,WAAU0I,UAASpF,YAAW0F,SAAQE,aAAYxC,SAAQpI,SCK9E,SAAwB6J,GAC3B,GAAsB,WAAjBA,EAAKO,SACW,oBAAjBP,EAAKO,SACY,mBAAjBP,EAAKO,SACY,UAAjBP,EAAKO,SACe,WAAnBP,EAAK7E,WAA6C,QAAnB6E,EAAK7E,UACrC,OAEA6E,EAAKa,OAAOW,OAAS,GAAwB,QAAnBxB,EAAK7E,UAC/B6E,EAAKnI,SAASkC,SAASjB,EAAIkH,EAAK7J,KAAO6J,EAAKzB,OAAOzF,EAE9CkH,EAAKa,OAAOY,IAAMzB,EAAKe,WAAWpN,QAA6B,WAAnBqM,EAAK7E,YACtD6E,EAAKnI,SAASkC,SAASjB,EAAIkH,EAAKe,WAAWpN,OAASqM,EAAK7J,KAAO6J,EAAKzB,OAAOzF,GAEhF,MAAMJ,EAAWsH,EAAKnI,SAASa,SAASI,EACxC,IAAIoI,GAAU,EACd,GAAwB,WAAnBlB,EAAK7E,WAA0B6E,EAAKa,OAAOW,QAAUxB,EAAKe,WAAWpN,QAAU+E,EAAW,GACvE,QAAnBsH,EAAK7E,WAAuB6E,EAAKa,OAAOY,KAAO,GAAK/I,EAAW,EAAI,CACpE,MAAMyI,GAAcC,EAAAA,EAAAA,IAASpB,EAAKnI,SAASzE,QAAQiO,OAAOpE,UAC1D+C,EAAKnI,SAASa,SAASI,IAAMqI,EAC7BD,GAAU,CACd,CACA,IAAKA,EACD,OAEJ,MAAMI,EAAStB,EAAKzB,OAAOzF,EAAIkH,EAAK7J,KAChC6J,EAAKa,OAAOW,QAAUxB,EAAKe,WAAWpN,QAA6B,WAAnBqM,EAAK7E,UACrD6E,EAAKnI,SAASkC,SAASjB,EAAIkH,EAAKe,WAAWpN,OAAS2N,EAE/CtB,EAAKa,OAAOY,KAAO,GAAwB,QAAnBzB,EAAK7E,YAClC6E,EAAKnI,SAASkC,SAASjB,EAAIwI,GAEV,UAAjBtB,EAAKO,SACLP,EAAKnI,SAAS9E,SAEtB,CDvCQ2O,CAAe,CAAE7J,WAAU0I,UAASpF,YAAW0F,SAAQE,aAAYxC,SAAQpI,QAC/E,E,cEjCG,MAAMwL,EACTnP,WAAAA,CAAYoC,GACRjC,KAAKiC,UAAYA,EACjBjC,KAAK2N,MAAQ,CAAC,UAClB,CACAf,MAAAA,CAAO1H,EAAUsD,EAAWyG,EAAQrB,GAChC,IAAK5N,KAAK2N,MAAME,SAASD,GACrB,OAEJ,MAAM3L,EAAYjC,KAAKiC,UACvB,OAAQiD,EAASgK,SACb,IAAK,SACL,IAAK,UACD,IAAIC,EAAAA,EAAAA,IAAcjK,EAASkC,SAAUnF,EAAU8F,OAAOvE,KAAM4L,EAAAA,EAAOC,OAAQnK,EAASsE,YAAahB,GAC7F,OAEJ,MACJ,IAAK,SAAU,CACX,MAAM,GAAEoB,EAAE,GAAEC,IAAOC,EAAAA,EAAAA,IAAa5E,EAASkC,SAAUlC,EAASoK,aACpDpJ,EAAGqJ,EAAIpJ,EAAGqJ,GAAOtK,EAASa,SAClC,GAAKwJ,EAAK,GAAK3F,EAAK1E,EAASoK,WAAW5G,QACnC8G,EAAK,GAAK3F,EAAK3E,EAASoK,WAAW5G,QACnC6G,GAAM,GAAK3F,GAAM1E,EAASoK,WAAW5G,QACrC8G,GAAM,GAAK3F,GAAM3E,EAASoK,WAAW5G,OACtC,OAEJ,KACJ,EAEJzG,EAAUG,UAAUqN,OAAOvK,OAAUzG,GAAW,EACpD,EC9BG,MAAMiR,EACT7P,WAAAA,CAAYoC,GACRjC,KAAKiC,UAAYA,EACjBjC,KAAK2N,MAAQ,CAAC,OAClB,CACAf,MAAAA,CAAO1H,EAAUsD,EAAWjD,EAAOqI,GAC/B,IAAK5N,KAAK2N,MAAME,SAASD,GACrB,OAEJ,GAAK1I,EAASzE,QAAQ2C,KAAKH,SAASmH,aACjB,SAAd5B,GAAsC,UAAdA,IACxBtD,EAASzE,QAAQ2C,KAAKH,SAASqH,WACb,QAAd9B,GAAqC,WAAdA,GAC5B,OAEJ,MAAMnC,EAAiBnB,EAASzE,QAAQ2C,KAAKkD,QAASrE,EAAYjC,KAAKiC,UACjEmM,EAAanM,EAAU8F,OAAOvE,KAC9BmM,EAAUzK,EAASsE,YACzB,GAAKnD,EAAexD,OAWf,CACD,MAAMuE,EAAWlC,EAASkC,WACpBf,EAAeG,SACjBY,EAASjB,EAAIiI,EAAWpN,OAAS2O,GACnB,WAAdnH,GACCnC,EAAeG,SAAWY,EAASjB,GAAKwJ,GAAyB,QAAdnH,IACpDvG,EAAUG,UAAUqN,OAAOvK,EAEnC,KAnB4B,CACxB,GAAKA,EAASa,SAASI,EAAI,GAAKjB,EAASkC,SAASjB,GAAKiI,EAAWpN,OAAS2O,GACtEzK,EAASa,SAASI,EAAI,GAAKjB,EAASkC,SAASjB,IAAMwJ,GACnDzK,EAASa,SAASG,EAAI,GAAKhB,EAASkC,SAASlB,GAAKkI,EAAWnN,MAAQ0O,GACrEzK,EAASa,SAASG,EAAI,GAAKhB,EAASkC,SAASlB,IAAMyJ,EACpD,QAECR,EAAAA,EAAAA,IAAcjK,EAASkC,SAAUnF,EAAU8F,OAAOvE,KAAM4L,EAAAA,EAAOC,OAAQM,EAASnH,IACjFvG,EAAUG,UAAUqN,OAAOvK,EAEnC,CAUJ,ECtCG,MAAM0K,EACT/P,WAAAA,CAAYoC,GACRjC,KAAKiC,UAAYA,EACjBjC,KAAK2N,MAAQ,CAAC,MAClB,CACAf,MAAAA,CAAO1H,EAAUsD,EAAWjD,EAAOqI,GAC/B,IAAK5N,KAAK2N,MAAME,SAASD,GACrB,OAEJ,MAAM3L,EAAYjC,KAAKiC,UACvB,OAAQiD,EAASgK,SACb,IAAK,SAAU,CACX,MAAQhJ,EAAGqJ,EAAIpJ,EAAGqJ,GAAOtK,EAASa,SAC5B8J,EAAUT,EAAAA,EAAOC,OACvBQ,EAAQrR,OAAS0G,EAASoK,WAAW5G,OACrCmH,EAAQpH,MAAQvD,EAASa,SAAS0C,MAAQnB,KAAKyD,GAC/C8E,EAAQ7J,MAAMoJ,EAAAA,EAAOU,OAAO5K,EAASoK,aACrC,MAAM,GAAE1F,EAAE,GAAEC,IAAOC,EAAAA,EAAAA,IAAa5E,EAASkC,SAAUyI,GACnD,GAAKN,GAAM,GAAK3F,GAAM,GAAO4F,GAAM,GAAK3F,GAAM,GAAO0F,GAAM,GAAK3F,GAAM,GAAO4F,GAAM,GAAK3F,GAAM,EAC1F,OAEJ3E,EAASkC,SAASlB,EAAIoB,KAAKyI,OAAMlE,EAAAA,EAAAA,IAAc,CAC3CpI,IAAK,EACLC,IAAKzB,EAAU8F,OAAOvE,KAAKvC,SAE/BiE,EAASkC,SAASjB,EAAImB,KAAKyI,OAAMlE,EAAAA,EAAAA,IAAc,CAC3CpI,IAAK,EACLC,IAAKzB,EAAU8F,OAAOvE,KAAKxC,UAE/B,MAAQ4I,GAAIoG,EAAOnG,GAAIoG,IAAUnG,EAAAA,EAAAA,IAAa5E,EAASkC,SAAUlC,EAASoK,YAC1EpK,EAASsD,UAAYlB,KAAK4I,OAAOD,GAAQD,GACzC9K,EAASa,SAAS0C,MAAQvD,EAASsD,UACnC,KACJ,CACA,QACI,IAAI2G,EAAAA,EAAAA,IAAcjK,EAASkC,SAAUnF,EAAU8F,OAAOvE,KAAM4L,EAAAA,EAAOC,OAAQnK,EAASsE,YAAahB,GAC7F,OAEJ,OAAQtD,EAASgK,SACb,IAAK,UAAW,CACZhK,EAASkC,SAASlB,EACdoB,KAAKyI,OAAMlE,EAAAA,EAAAA,IAAc,CACrBpI,KAAMyB,EAASoK,WAAW5G,OAC1BhF,IAAKwB,EAASoK,WAAW5G,UACvBxD,EAASoK,WAAWpJ,EAC9BhB,EAASkC,SAASjB,EACdmB,KAAKyI,OAAMlE,EAAAA,EAAAA,IAAc,CACrBpI,KAAMyB,EAASoK,WAAW5G,OAC1BhF,IAAKwB,EAASoK,WAAW5G,UACvBxD,EAASoK,WAAWnJ,EAC9B,MAAM,GAAEyD,EAAE,GAAEC,IAAOC,EAAAA,EAAAA,IAAa5E,EAASkC,SAAUlC,EAASoK,YACxDpK,EAASoK,WAAW5G,SACpBxD,EAASsD,UAAYlB,KAAK4I,MAAMrG,EAAID,GACpC1E,EAASa,SAAS0C,MAAQvD,EAASsD,WAEvC,KACJ,CACA,IAAK,SAAU,CACX,MAAM2H,EAAOjL,EAASzE,QAAQ2C,KAAKgN,KAAMhC,EAAanM,EAAU8F,OAAOvE,KAAM6M,EAAS,CAClFxB,OAAQT,EAAWpN,OAASkE,EAASsE,YAActE,EAAS0G,OAAOzF,EACnEmI,MAAOpJ,EAASsE,YAActE,EAAS0G,OAAO1F,EAC9CmI,MAAOD,EAAWnN,MAAQiE,EAASsE,YAActE,EAAS0G,OAAO1F,EACjE4I,KAAM5J,EAASsE,YAActE,EAAS0G,OAAOzF,GAC9CmK,EAAYpL,EAASsE,YAAa+G,GAAapC,EAAAA,EAAAA,IAAgBjJ,EAASkC,SAAUkJ,GACnE,UAAd9H,GACA+H,EAAWjC,KAAOF,EAAWnN,MAAQiE,EAAS0G,OAAO1F,GACrDhB,EAASkC,SAASlB,EAAImK,EAAO/B,KAC7BpJ,EAASyE,gBAAgBzD,EAAIhB,EAASkC,SAASlB,EAC1CiK,IACDjL,EAASkC,SAASjB,GAAIsE,EAAAA,EAAAA,MAAc2D,EAAWpN,OAC/CkE,EAASyE,gBAAgBxD,EAAIjB,EAASkC,SAASjB,IAGhC,SAAdqC,GAAwB+H,EAAWlC,OAASnJ,EAAS0G,OAAO1F,IACjEhB,EAASkC,SAASlB,EAAImK,EAAOhC,MAC7BnJ,EAASyE,gBAAgBzD,EAAIhB,EAASkC,SAASlB,EAC1CiK,IACDjL,EAASkC,SAASjB,GAAIsE,EAAAA,EAAAA,MAAc2D,EAAWpN,OAC/CkE,EAASyE,gBAAgBxD,EAAIjB,EAASkC,SAASjB,IAGrC,WAAdqC,GACA+H,EAAWzB,IAAMV,EAAWpN,OAASkE,EAAS0G,OAAOzF,GAChDgK,IACDjL,EAASkC,SAASlB,GAAIuE,EAAAA,EAAAA,MAAc2D,EAAWnN,MAC/CiE,EAASyE,gBAAgBzD,EAAIhB,EAASkC,SAASlB,GAEnDhB,EAASkC,SAASjB,EAAIkK,EAAOvB,IAC7B5J,EAASyE,gBAAgBxD,EAAIjB,EAASkC,SAASjB,GAE5B,QAAdqC,GAAuB+H,EAAW1B,QAAU3J,EAAS0G,OAAOzF,IAC5DgK,IACDjL,EAASkC,SAASlB,GAAIuE,EAAAA,EAAAA,MAAc2D,EAAWnN,MAC/CiE,EAASyE,gBAAgBzD,EAAIhB,EAASkC,SAASlB,GAEnDhB,EAASkC,SAASjB,EAAIkK,EAAOxB,OAC7B3J,EAASyE,gBAAgBxD,EAAIjB,EAASkC,SAASjB,GAEnD,KACJ,GAKhB,ECrGG,MAAMqK,EACT3Q,WAAAA,CAAYoC,GACRjC,KAAKiC,UAAYA,EACjBjC,KAAKyQ,eAAiB,CAACvL,EAAUK,EAAOqI,EAASpF,KAC7C,IAAK,MAAMkI,KAAW1Q,KAAK2Q,SACvBD,EAAQ9D,OAAO1H,EAAUsD,EAAWjD,EAAOqI,EAC/C,EAEJ5N,KAAK2Q,SAAW,CACZ,IAAIjD,EAAczL,GAClB,IAAI+M,EAAe/M,GACnB,IAAI2N,EAAW3N,GACf,IAAIyN,EAAYzN,GAExB,CACA/B,IAAAA,GACA,CACAyI,SAAAA,CAAUzD,GACN,OAAQA,EAAS0D,YAAc1D,EAASyH,QAC5C,CACAC,MAAAA,CAAO1H,EAAUK,GACb,MAAMqL,EAAW1L,EAASzE,QAAQ2C,KAAKwN,SACvC5Q,KAAKyQ,eAAevL,EAAUK,EAAOqL,EAAS/B,QAAU+B,EAASC,QAAS,UAC1E7Q,KAAKyQ,eAAevL,EAAUK,EAAOqL,EAAStC,MAAQsC,EAASC,QAAS,QACxE7Q,KAAKyQ,eAAevL,EAAUK,EAAOqL,EAASvC,OAASuC,EAASC,QAAS,SACzE7Q,KAAKyQ,eAAevL,EAAUK,EAAOqL,EAAS9B,KAAO8B,EAASC,QAAS,MAC3E,EC5BG,MAAMC,EACT5Q,IAAAA,CAAKgF,GACD,MAAMjD,EAAYiD,EAASjD,UAAgD8O,EAAvB7L,EAASzE,QAAQ+C,KAAkC4I,UACnG2E,EAAclO,SACdqC,EAAS1B,KAAKuC,UACRb,EAASmD,OAAO2I,oBAAsB/O,EAAUoG,OAAO2I,oBAAsB,IAC3E/O,EAAUoG,OAAOe,aACpB2H,EAAc5D,OACfjI,EAAS1B,KAAKuC,WAAY0E,EAAAA,EAAAA,OAGtC,CACA9B,SAAAA,CAAUzD,GACN,OAASA,EAAS0D,YACb1D,EAASyH,UACVzH,EAAS1B,KAAKX,UACZqC,EAAS1B,KAAKgI,UAAY,IAAM,IAC5BtG,EAAS1B,KAAKgI,UAAY,GAAK,IAAMtG,EAAS1B,KAAKiI,OAAS,IAAMvG,EAAS1B,KAAKgI,UAAY,GAC1G,CACA4B,KAAAA,CAAMlI,GACFA,EAAS1B,KAAKiI,MAAQ,CAC1B,CACAmB,MAAAA,CAAO1H,EAAUK,GACRvF,KAAK2I,UAAUzD,ICVrB,SAAoBA,EAAUK,GACjC,MAAM8H,EAAOnI,EAAS1B,KACtB,GAAI0B,EAAS0D,YACRyE,IACAA,EAAKxK,SACJwK,EAAK7B,UAAY,GAAK,IAAM6B,EAAK5B,OAAS,IAAM4B,EAAK7B,UAAY,GACnE,OAEJ,MAAMyF,GAAgB5D,EAAKtH,UAAY,GAAKR,EAAMkB,OAAQ6G,EAAWD,EAAK5J,IAAK8J,EAAWF,EAAK3J,IAAKiD,EAAQ0G,EAAK1G,OAAS,EAO1H,GANK0G,EAAK3B,OACN2B,EAAK3B,KAAO,IAEX2B,EAAK1B,WAAa,GAAK,GAAK0B,EAAK3B,MAAQ2B,EAAK1B,WAAa,KAC5D0B,EAAK3B,MAAQnG,EAAMxC,UAElBsK,EAAK1B,WAAa,GAAK,GAAK0B,EAAK3B,MAAQ2B,EAAK1B,WAAa,IAAhE,CAGA,OAAQ0B,EAAKvB,QACT,IAAK,aACGuB,EAAKtK,OAASwK,GACdF,EAAKvB,OAAS,aACTuB,EAAK5B,QACN4B,EAAK5B,MAAQ,GAEjB4B,EAAK5B,SAGL4B,EAAKtK,OAASkO,EAElB,MACJ,IAAK,aACG5D,EAAKtK,OAASuK,GACdD,EAAKvB,OAAS,aACTuB,EAAK5B,QACN4B,EAAK5B,MAAQ,GAEjB4B,EAAK5B,SAGL4B,EAAKtK,OAASkO,EAGtB5D,EAAKtH,UAAsB,IAAVY,IACjB0G,EAAKtH,UAAYY,GA1DzB,SAAsBzB,EAAUnC,EAAOuK,EAAUC,GAC7C,OAAQrI,EAASzE,QAAQ+C,KAAK4I,UAAUhM,SACpC,IAAK,MACG2C,GAASwK,GACTrI,EAAS9E,UAEb,MACJ,IAAK,MACG2C,GAASuK,GACTpI,EAAS9E,UAIzB,CA+CIoN,CAAatI,EAAUmI,EAAKtK,MAAOuK,EAAUC,GACxCrI,EAAS0D,YACVyE,EAAKtK,OAAQkD,EAAAA,EAAAA,IAAMoH,EAAKtK,MAAOuK,EAAUC,GA/B7C,CAiCJ,CDrCQ2D,CAAWhM,EAAUK,EACzB,EEvBG5D,eAAewP,EAAU7M,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SCLxCoD,eAA6B2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SACzC+F,EAAO8M,SAAS,QAAQ,IAAM,IAAI3J,GAAanG,EACzD,CDIU+P,CAAc/M,GAAQ,SENzB3C,eAA+B2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SAC3C+F,EAAOgN,SAAS,SAAU,IAAI3G,EAAgBrJ,EACxD,CFKUiQ,CAAgBjN,GAAQ,SGP3B3C,eAAgC2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SAC5C+F,EAAOkN,mBAAmB,SAAUvP,GAAc,IAAI8J,EAAa9J,IAAYX,EACzF,CHMUmQ,CAAiBnN,GAAQ,SIR5B3C,eAAkC2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SAC9C+F,EAAOkN,mBAAmB,WAAYvP,GAAc,IAAI6K,EAAe7K,IAAYX,EAC7F,CJOUoQ,CAAmBpN,GAAQ,SKT9B3C,eAAmC2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SAC/C+F,EAAOkN,mBAAmB,YAAavP,GAAc,IAAIuO,EAAmBvO,IAAYX,EAClG,CLQUqQ,CAAoBrN,GAAQ,SMV/B3C,eAA+B2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SAC3C+F,EAAOkN,mBAAmB,QAAQ,IAAM,IAAIV,GAAexP,EACrE,CNSUsQ,CAAgBtN,GAAQ,SACxBA,EAAOhD,QAAQA,EACzB,COdO,MAAMuQ,EACThS,WAAAA,CAAYoC,GACRjC,KAAKiC,UAAYA,EACjBjC,KAAK8R,KAAO,UAChB,E,wBCJG,MAAMC,EACTlS,WAAAA,GACIG,KAAKiD,SAAW,IAChBjD,KAAKgS,SAAW,GAChBhS,KAAKiS,OAAS,gBACdjS,KAAKyG,OAAS,EACdzG,KAAKqF,SAAW,GAChBrF,KAAKqD,MAAQ,CACjB,CACAnB,IAAAA,CAAKmL,GACIA,SAGiB5O,IAAlB4O,EAAKpK,WACLjD,KAAKiD,SAAWoK,EAAKpK,eAEHxE,IAAlB4O,EAAK2E,WACLhS,KAAKgS,SAAW3E,EAAK2E,eAELvT,IAAhB4O,EAAK4E,SACLjS,KAAKiS,OAAS5E,EAAK4E,aAEHxT,IAAhB4O,EAAK5G,SACLzG,KAAKyG,OAAS4G,EAAK5G,aAEDhI,IAAlB4O,EAAKhI,WACLrF,KAAKqF,SAAWgI,EAAKhI,eAEN5G,IAAf4O,EAAKhK,QACLrD,KAAKqD,MAAQgK,EAAKhK,OAE1B,EC7BG,MAAM6O,UAAkBL,EAC3BhS,WAAAA,CAAYyE,EAAQrC,GAChBlC,MAAMkC,GACNjC,KAAKmS,cAAgB,KACjB,MAAMlQ,EAAYjC,KAAKiC,UAClBA,EAAUmQ,UACXnQ,EAAUmQ,QAAU,CAAEhQ,UAAW,KAErC,MAAM,QAAEgQ,GAAYnQ,EAUpB,GATKmQ,EAAQC,SACJD,EAAQE,QACTF,EAAQE,MAAQ,GAEpBF,EAAQE,QACJF,EAAQE,QAAUrQ,EAAUG,UAAUkQ,QACtCF,EAAQC,QAAS,IAGrBD,EAAQG,SAAU,CAClB,MAAMC,EAAWvQ,EAAUwQ,cAAcC,MAAMC,cAAeC,EAAgB3Q,EAAUoG,OAAOwK,oBAC/F,IAAKD,GAAiBA,EAAgB,IAAMJ,EACxC,OAEJxS,KAAK8S,gBAAgBN,EAAUI,EAAe,IAAIG,EAAAA,EAAOP,EAAStM,EAAGsM,EAASrM,EAAGyM,GACrF,MAC8B,IAArBR,EAAQG,WACbH,EAAQhQ,UAAY,GAElB,EAEVpC,KAAKgT,cAAgB,KACjB,MAAM/Q,EAAYjC,KAAKiC,UAAWuQ,EAAWvQ,EAAUwQ,cAAcC,MAAMtL,SAAUwL,EAAgB3Q,EAAUoG,OAAOwK,qBACjHD,GAAiBA,EAAgB,IAAMJ,GAG5CxS,KAAK8S,gBAAgBN,EAAUI,EAAe,IAAIG,EAAAA,EAAOP,EAAStM,EAAGsM,EAASrM,EAAGyM,GAAe,EAEpG5S,KAAK8S,gBAAkB,CAAC1L,EAAUwL,EAAeK,KAC7C,MAAMhR,EAAYjC,KAAKiC,UAAWiR,EAAiBjR,EAAUkR,cAAcV,cAAc9E,MAAMyE,QAC/F,IAAKc,EACD,OAEJ,MAAME,EAAQnR,EAAUG,UAAUiR,SAASD,MAAMH,GAAOK,GAAMtT,KAAK2I,UAAU2K,KAC7E,IAAK,MAAMpO,KAAYkO,EAAO,CAC1B,MAAM,GAAExJ,EAAE,GAAEC,EAAE,SAAE5G,IAAa6G,EAAAA,EAAAA,IAAa5E,EAASkC,SAAUA,GACvDrB,EAAWmN,EAAe7P,MAAQ6P,EAAezM,OACjD8M,GAAgBtN,EAAAA,EAAAA,KAAMuN,EAAAA,EAAAA,IAAUN,EAAejB,OAAzBuB,CAAiC,EAAIvQ,EAAW2P,GAAiB7M,EAAU,EAAGmN,EAAe7N,UACnHoO,EAAUrE,EAAAA,EAAOU,OAAoB,IAAb7M,EAAiB8C,EAAY6D,EAAK3G,EAAYsQ,EAA4B,IAAbtQ,EAAiB8C,EAAY8D,EAAK5G,EAAYsQ,GACzIrO,EAASkC,SAASsM,QAAQD,EAC9B,GAEJzT,KAAK2T,QAAUrP,EACVrC,EAAUmQ,UACXnQ,EAAUmQ,QAAU,CAAEhQ,UAAW,KAErCpC,KAAK4T,gBAAmBC,IACpB,MAA8CzB,EAA9BpS,KAAKiC,UAAUkR,cAAiCV,cAAc9E,MAAMyE,QACpF,GAAKA,GAAoB,YAATyB,EAAhB,CAGK5R,EAAUmQ,UACXnQ,EAAUmQ,QAAU,CAAEhQ,UAAW,KAErCH,EAAUmQ,QAAQG,UAAW,EAC7BtQ,EAAUmQ,QAAQE,MAAQ,EAC1B,IAAK,MAAMpN,KAAYjD,EAAUmQ,QAAQhQ,UAChCpC,KAAK2I,UAAUzD,IAGpBA,EAASa,SAAS+N,MAAM5O,EAAS6O,iBAErC9R,EAAUmQ,QAAQhQ,UAAY,GAC9BH,EAAUmQ,QAAQC,QAAS,EAC3B2B,YAAW,KACH/R,EAAU2G,YAGT3G,EAAUmQ,UACXnQ,EAAUmQ,QAAU,CAAEhQ,UAAW,KAErCH,EAAUmQ,QAAQG,UAAW,EAAK,GAChB,IAAnBH,EAAQJ,SAtBX,CAsB2B,CAEnC,CACAiC,KAAAA,GACA,CACA/T,IAAAA,GACI,MAAM+B,EAAYjC,KAAKiC,UAAWmQ,EAAUnQ,EAAUkR,cAAcV,cAAc9E,MAAMyE,QACnFA,IAGLnQ,EAAUoG,OAAOwK,oBAAsBT,EAAQnP,SAAWhB,EAAUoG,OAAOC,WAC/E,CACA,cAAM4L,GACF,MAAMjS,EAAYjC,KAAKiC,UAAWxB,EAAUwB,EAAUkR,cAAegB,EAAkBlS,EAAUwQ,cAAc3G,SAAWsI,EAAAA,GAAgBC,EAAS5T,EAAQgS,cAAc4B,OAAQC,EAAeD,EAAOE,QAAQ1R,OAAQ2R,EAAYH,EAAOE,QAAQV,KAAMY,EAAeJ,EAAOK,QAAQ7R,OAAQ8R,EAAYN,EAAOK,QAAQb,KACrTM,GAAmBG,IAAgBM,EAAAA,EAAAA,IAAU,UAAWJ,GACxDxU,KAAKgT,gBAEAyB,IAAgBG,EAAAA,EAAAA,IAAU,UAAWD,IAC1C3U,KAAKmS,eAEb,CACAxJ,SAAAA,CAAUzD,GACN,MAAMjD,EAAYjC,KAAKiC,UAAWxB,EAAUwB,EAAUkR,cAAeT,EAAQzQ,EAAUwQ,cAAcC,MAAO2B,GAAUnP,GAAUuN,eAAiBhS,EAAQgS,eAAe4B,OACxK,KAAM3B,EAAMtL,WAAaiN,EAAOE,QAAQ1R,WAAa6P,EAAMC,gBAAkB0B,EAAOK,QAAQ7R,QACxF,OAAO,EAEX,MAAM2R,EAAYH,EAAOE,QAAQV,KAAMc,EAAYN,EAAOK,QAAQb,KAClE,OAAOe,EAAAA,EAAAA,IAAU,UAAWJ,KAAcI,EAAAA,EAAAA,IAAU,UAAWD,EACnE,CACAE,eAAAA,CAAgBpU,GACPA,EAAQ2R,UACT3R,EAAQ2R,QAAU,IAAIL,GACzB,QAAA+C,EAAAvW,UAAAC,OAHuBuW,EAAO,IAAA7V,MAAA4V,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAPD,EAAOC,EAAA,GAAAzW,UAAAyW,GAI/B,IAAK,MAAMC,KAAUF,EACjBtU,EAAQ2R,QAAQlQ,KAAK+S,GAAQ7C,QAErC,CACAhF,KAAAA,GACA,E,cCzHG,MAAM8H,EACTrV,WAAAA,GACIG,KAAKiD,SAAW,GACpB,CACAf,IAAAA,CAAKmL,GACIA,QAGiB5O,IAAlB4O,EAAKpK,WACLjD,KAAKiD,SAAWoK,EAAKpK,SAE7B,ECTG,MAAMkS,UAAgBtD,EACzBhS,WAAAA,CAAYoC,GACRlC,MAAMkC,GACNjC,KAAKoV,eAAiB,CAAChO,EAAUsB,EAAQuK,KACrC,MAAMG,EAAQpT,KAAKiC,UAAUG,UAAUiR,SAASD,MAAMH,GAAOK,GAAMtT,KAAK2I,UAAU2K,KAClF,IAAK,MAAMpO,KAAYkO,EACfH,aAAgBF,EAAAA,GAChBsC,EAAAA,EAAAA,KAAaC,EAAAA,EAAAA,IAA6BpQ,GAAW,CACjDkC,WACAsB,SACA6M,KAAO7M,GAAU,EAAIpB,KAAKyD,GAAM,EAChChF,SAAUqJ,EAAAA,EAAOC,OACjB5I,OAAQ2I,EAAAA,EAAOC,SAGd4D,aAAgBuC,EAAAA,IACrBC,EAAAA,EAAAA,IAAWvQ,GAAUiJ,EAAAA,EAAAA,IAAgB/G,EAAUsB,GAEvD,EAEJ1I,KAAK0V,oBAAsB,KACvB,MAAMzT,EAAYjC,KAAKiC,UAAkD0T,EAAY,GAAzC1T,EAAUoG,OAAOC,WAAsCkK,EAAWvQ,EAAUwQ,cAAcC,MAAMtL,SAAUsB,EAASzG,EAAUoG,OAAOuN,oBAC3KlN,GAAUA,EAAS,IAAM8J,GAG9BxS,KAAKoV,eAAe5C,EAAU9J,EAAQ,IAAIqK,EAAAA,EAAOP,EAAStM,EAAGsM,EAASrM,EAAGuC,EAASiN,GAAW,EAEjG3V,KAAK6V,sBAAwB,CAACxT,EAAUyT,KACpC,MAAM7T,EAAYjC,KAAKiC,UAAWmR,EAAQ5Q,SAASuT,iBAAiB1T,GAC/D+Q,EAAM5U,QAGX4U,EAAM4C,SAASC,IACX,MAAMC,EAAOD,EAAMnN,EAAU7G,EAAUoG,OAAOC,WAAYN,EAAM,CAC5D9B,GAAIgQ,EAAKC,WAAaD,EAAKE,YAAc,GAAKtN,EAC9C3C,GAAI+P,EAAKG,UAAYH,EAAKI,aAAe,GAAKxN,GAC/CJ,EAAUwN,EAAKE,YAAc,EAAKtN,EAAS6M,EAAY,GAAK7M,EAASmK,EAAoB,WAAb6C,EAAIhE,KAC7E,IAAIiB,EAAAA,EAAO/K,EAAI9B,EAAG8B,EAAI7B,EAAGuC,EAASiN,GAClC,IAAIH,EAAAA,EAAUU,EAAKC,WAAarN,EAAU6M,EAAWO,EAAKG,UAAYvN,EAAU6M,EAAWO,EAAKE,YAActN,EAAsB,EAAZ6M,EAAeO,EAAKI,aAAexN,EAAsB,EAAZ6M,GAC3K3V,KAAKoV,eAAepN,EAAKU,EAAQuK,EAAK,GACxC,CAEV,CACAgB,KAAAA,GACA,CACA/T,IAAAA,GACI,MAAM+B,EAAYjC,KAAKiC,UAAWyM,EAASzM,EAAUkR,cAAcV,cAAc9E,MAAMe,OAClFA,IAGLzM,EAAUoG,OAAOuN,mBAAqBlH,EAAOzL,SAAWhB,EAAUoG,OAAOC,WAC7E,CACA,cAAM4L,GACF,MAAMjS,EAAYjC,KAAKiC,UAA8CoS,EAAzBpS,EAAUkR,cAAgCV,cAAc4B,OAAQF,EAAkBlS,EAAUwQ,cAAc3G,SAAWsI,EAAAA,GAAgBE,EAAeD,EAAOE,QAAQ1R,OAAQ2R,EAAYH,EAAOE,QAAQV,KAAM0C,EAAOlC,EAAOmC,MAClQrC,GAAmBG,IAAgBM,EAAAA,EAAAA,IAAU,SAAUJ,GACvDxU,KAAK0V,uBAGLe,EAAAA,EAAAA,IAAe,SAAUF,GAAM,CAAClU,EAAUyT,IAAQ9V,KAAK6V,sBAAsBxT,EAAUyT,IAE/F,CACAnN,SAAAA,CAAUzD,GACN,MAAMjD,EAAYjC,KAAKiC,UAAWxB,EAAUwB,EAAUkR,cAAeT,EAAQzQ,EAAUwQ,cAAcC,MAAO2B,GAAUnP,GAAUuN,eAAiBhS,EAAQgS,eAAe4B,OAAQkC,EAAOlC,EAAOmC,MAC9L,OAAS9D,EAAMtL,UAAYiN,EAAOE,QAAQ1R,SAAU+R,EAAAA,EAAAA,IAAU,SAAUP,EAAOE,QAAQV,QACnF6C,EAAAA,EAAAA,IAAiB,SAAUH,EACnC,CACA1B,eAAAA,CAAgBpU,GACPA,EAAQiO,SACTjO,EAAQiO,OAAS,IAAIwG,GACxB,QAAAJ,EAAAvW,UAAAC,OAHuBuW,EAAO,IAAA7V,MAAA4V,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAPD,EAAOC,EAAA,GAAAzW,UAAAyW,GAI/B,IAAK,MAAMC,KAAUF,EACjBtU,EAAQiO,OAAOxM,KAAK+S,GAAQvG,OAEpC,CACAtB,KAAAA,GACA,E,cC5EG,MAAMuJ,EACT9W,WAAAA,GACIG,KAAKiD,SAAW,IAChBjD,KAAKgS,SAAW,GAChBhS,KAAK4W,KAAM,CACf,CACA1U,IAAAA,CAAKmL,GACD,GAAKA,EAAL,CAeA,QAZsB5O,IAAlB4O,EAAKpK,WACLjD,KAAKiD,SAAWoK,EAAKpK,eAEHxE,IAAlB4O,EAAK2E,WACLhS,KAAKgS,SAAW3E,EAAK2E,eAERvT,IAAb4O,EAAKuJ,MACL5W,KAAK4W,IAAMvJ,EAAKuJ,UAECnY,IAAjB4O,EAAKL,UACLhN,KAAKgN,QAAUK,EAAKL,cAELvO,IAAf4O,EAAKvK,MAAqB,CAC1B,MAAM+T,GAAc1X,EAAAA,EAAAA,IAAQa,KAAK8C,YAASrE,EAAYuB,KAAK8C,MAC3D9C,KAAK8C,OAAQgU,EAAAA,EAAAA,IAA0BzJ,EAAKvK,OAAQA,GACzCiU,EAAAA,EAAajH,OAAO+G,EAAa/T,IAEhD,MACkBrE,IAAd4O,EAAK7J,OACLxD,KAAKwD,KAAO6J,EAAK7J,KApBrB,CAsBJ,EC9BG,MAAMwT,UAAkBL,EAC3B9W,WAAAA,GACIE,QACAC,KAAKiX,UAAY,EACrB,CACA,OAAIC,GACA,OAAOJ,EAAAA,EAAAA,IAA0B9W,KAAKiX,WAAYE,GAAMA,EAAExU,QAAQ,IAAK,KAC3E,CACA,OAAIuU,CAAInU,GACJ/C,KAAKiX,WAAYH,EAAAA,EAAAA,IAA0B/T,GAAQoU,GAAM,IAAIA,KACjE,CACAjV,IAAAA,CAAKmL,GACDtN,MAAMmC,KAAKmL,GACNA,SAGY5O,IAAb4O,EAAK6J,MACLlX,KAAKkX,IAAM7J,EAAK6J,UAEGzY,IAAnB4O,EAAK4J,YACLjX,KAAKiX,UAAY5J,EAAK4J,WAE9B,ECrBG,MAAMG,UAAeT,EACxBzU,IAAAA,CAAKmL,GACDtN,MAAMmC,KAAKmL,GACNA,IAGLrN,KAAKuW,MAAOO,EAAAA,EAAAA,IAA0BzJ,EAAKkJ,MAAOT,IAC9C,MAAMuB,EAAM,IAAIL,EAEhB,OADAK,EAAInV,KAAK4T,GACFuB,CAAG,IAElB,ECbG,SAASC,EAAqBC,EAAeC,EAAWC,EAAcC,GACzE,GAAIF,GAAaC,EAAc,CAC3B,MAAM1U,EAAQwU,GAAiBC,EAAYC,GAAgBC,EAC3D,OAAOzR,EAAAA,EAAAA,IAAMlD,EAAOwU,EAAeC,EACvC,CACK,GAAIA,EAAYC,EAAc,CAC/B,MAAM1U,EAAQwU,GAAiBE,EAAeD,GAAaE,EAC3D,OAAOzR,EAAAA,EAAAA,IAAMlD,EAAOyU,EAAWD,EACnC,CACJ,CCPO,MAAMI,UAAgB9F,EACzBhS,WAAAA,CAAYoC,GACRlC,MAAMkC,GACNjC,KAAK4X,aAAe,KAChB,MAAM3V,EAAYjC,KAAKiC,UAAWxB,EAAUwB,EAAUkR,cAAe0E,EAAgB5V,EAAUwQ,cAAcC,MAAMC,cAAemF,EAAgBrX,EAAQgS,cAAc9E,MAAMoK,OAC9K,IAAKD,IAAkBD,EACnB,OAEC5V,EAAU8V,SACX9V,EAAU8V,OAAS,CAAC,GAExB,MAAM9U,EAAWhB,EAAUoG,OAAO2P,mBAClC,IAAK/U,GAAYA,EAAW,EACxB,OAEJ,MAAMmQ,EAAQnR,EAAUG,UAAUiR,SAAS4E,YAAYJ,EAAe5U,GAAWqQ,GAAMtT,KAAK2I,UAAU2K,MAAK,OAAEyE,GAAW9V,EACxH,IAAK,MAAMiD,KAAYkO,EAAO,CAC1B,IAAK2E,EAAOxF,SACR,SAEJrN,EAAS6S,OAAO9O,SAAW8O,EAAOG,YAClC,MAAMlQ,EAAM9C,EAAS+C,cAAekQ,GAAYjQ,EAAAA,EAAAA,IAAYF,EAAK6P,GAAgBO,IAAa,IAAIC,MAAOC,WAAarW,EAAUwQ,cAAcC,MAAM6F,WAAa,IAAM,IACnKH,EAAYN,EAAc9F,WAC1B+F,EAAOG,aAAc,GAErBE,EAAqC,EAAzBN,EAAc9F,WAC1B+F,EAAOxF,UAAW,EAClBwF,EAAOG,aAAc,GAEzB,MAAMM,EAAW,CACbC,UAAW,CACPC,SAAUzW,EAAUoG,OAAOsQ,eAC3B5V,MAAOmC,EAAS6S,OAAOrP,QAE3BkQ,aAAc,CACVF,UAAUnP,EAAAA,EAAAA,IAAYrE,EAASzE,QAAQ+C,KAAKT,OAASd,EAAUoG,OAAOC,WACtEvF,MAAOmC,EAAS1B,KAAKT,OAEzB+O,KAAM,QAEV9R,KAAK6Y,SAAS3T,EAAUiT,EAAWC,EAAWI,GAC9C,MAAMM,EAAc,CAChBL,UAAW,CACPC,SAAUZ,EAAc9K,QACxBjK,MAAOmC,EAAS6S,OAAO/K,SAE3B4L,aAAc,CACVF,UAAUnP,EAAAA,EAAAA,IAAYrE,EAASzE,QAAQuM,QAAQjK,OAC/CA,MAAOmC,EAAS8H,SAASjK,OAAS,GAEtC+O,KAAM,WAEV9R,KAAK6Y,SAAS3T,EAAUiT,EAAWC,EAAWU,IACzCf,EAAOG,aAAeC,GAAalV,EACpCjD,KAAK+Y,kBAAkB7T,EAAUiT,UAG1BjT,EAAS6S,OAAOjV,KAE/B,GAEJ9C,KAAKgZ,aAAe,KAChB,MAAM/W,EAAYjC,KAAKiC,UAAWuQ,EAAWvQ,EAAUwQ,cAAcC,MAAMtL,SAAUnE,EAAWhB,EAAUoG,OAAO2P,mBACjH,IAAK/U,GAAYA,EAAW,QAAkBxE,IAAb+T,EAC7B,OAEJ,MAAMY,EAAQnR,EAAUG,UAAUiR,SAAS4E,YAAYzF,EAAUvP,GAAWqQ,GAAMtT,KAAK2I,UAAU2K,KACjG,IAAK,MAAMpO,KAAYkO,EAAO,CAC1BlO,EAAS6S,OAAO9O,SAAU,EAC1B,MAAMjB,EAAM9C,EAAS+C,cAAegR,GAAgB/Q,EAAAA,EAAAA,IAAYF,EAAKwK,GAAWkF,EAAQ,EAAIuB,EAAgBhW,EACxGgW,GAAiBhW,EACbyU,GAAS,GAAKzV,EAAUwQ,cAAc3G,SAAWsI,EAAAA,KACjDpU,KAAKkZ,iBAAiBhU,EAAUwS,GAChC1X,KAAKmZ,oBAAoBjU,EAAUwS,GACnC1X,KAAK+Y,kBAAkB7T,EAAUwS,IAIrC1X,KAAKoN,MAAMlI,GAEXjD,EAAUwQ,cAAc3G,SAAWsN,EAAAA,IACnCpZ,KAAKoN,MAAMlI,EAEnB,GAEJlF,KAAK+Y,kBAAoB,CAAC7T,EAAUwS,EAAO2B,KACvC,MAAM5Y,EAAUT,KAAKiC,UAAUkR,cAAe2E,EAAgBuB,GAAa5Y,EAAQgS,cAAc9E,MAAMoK,OACvG,GAAKD,EAAL,CAGA,IAAK5S,EAAS6S,OAAOuB,WAAY,CAC7B,MAAMC,EAAYzB,EAAchV,MAChC,IAAKyW,EACD,OAEJ,MAAMC,GAAcC,EAAAA,EAAAA,IAAyBF,GAC7CrU,EAAS6S,OAAOuB,YAAarN,EAAAA,EAAAA,IAAgBuN,EACjD,CACA,GAAKtU,EAAS6S,OAAOuB,WAGrB,GAAIxB,EAAclB,IAAK,CACnB1R,EAAS6S,OAAOjV,WAAQrE,EACxB,MAAMib,EAASxU,EAASyU,eACxBzU,EAAS6S,OAAOjV,MAAQ4W,GAClBE,EAAAA,EAAAA,KAASC,EAAAA,EAAAA,IAASH,EAAQxU,EAAS6S,OAAOuB,WAAY,EAAI5B,EAAOA,IACjExS,EAAS6S,OAAOuB,UAC1B,MAEIpU,EAAS6S,OAAOjV,MAAQoC,EAAS6S,OAAOuB,UApB5C,CAqBA,EAEJtZ,KAAKmZ,oBAAsB,CAACjU,EAAUwS,EAAO2B,KACzC,MAAkC5Y,EAAhBT,KAAKiC,UAA+BkR,cAAe2G,EAAcT,GAAWrM,SAAWvM,EAAQgS,cAAc9E,MAAMoK,QAAQ/K,QAC7I,IAAK8M,EACD,OAEJ,MAAMC,EAAa7U,EAASzE,QAAQuM,QAAQjK,MAAgDiK,EAAUsK,EAAxCpS,EAAS8H,SAASjK,OAAS,EAA4C+W,GAAavQ,EAAAA,EAAAA,IAAYwQ,GAAarC,QAC3JjZ,IAAZuO,IACA9H,EAAS6S,OAAO/K,QAAUA,EAC9B,EAEJhN,KAAKkZ,iBAAmB,CAAChU,EAAUwS,EAAO2B,KACtC,MAAMpX,EAAYjC,KAAKiC,UAAW+X,EAAWX,GAAW7V,KAAO6V,EAAU7V,KAAOvB,EAAUoG,OAAOC,WAAarG,EAAUoG,OAAOsQ,eAC/H,QAAiBla,IAAbub,EACA,OAEJ,MAAMC,GAAU1Q,EAAAA,EAAAA,IAAYrE,EAASzE,QAAQ+C,KAAKT,OAASd,EAAUoG,OAAOC,WAAyC9E,EAAO8T,EAA5BpS,EAAS1B,KAAKT,MAA0CiX,EAAUC,EAASvC,QAC9JjZ,IAAT+E,IACA0B,EAAS6S,OAAOrP,OAASlF,EAC7B,EAEJxD,KAAK6Y,SAAW,CAAC3T,EAAUiT,EAAWC,EAAW/K,KAC7C,MAAMpL,EAAYjC,KAAKiC,UAAWiY,EAAc7M,EAAKoL,UAAUC,SAA6CZ,EAAzB7V,EAAUkR,cAAuCV,cAAc9E,MAAMoK,OACxJ,IAAKD,QAAiCrZ,IAAhByb,EAClB,OAEJ,MAAMC,EAAiBrC,EAAc9F,SAAUoI,EAAiBnY,EAAUoG,OAAO2P,mBAAoBqC,EAAiBhN,EAAKuL,aAAaF,SAAU4B,EAAajN,EAAKoL,UAAU1V,MAAOwX,EAAOlN,EAAKuL,aAAa7V,OAAS,EAAG+O,EAAOzE,EAAKyE,KACtO,GAAKsI,KAAkBA,EAAiB,IAAKF,IAAgBG,EAM7D,GAHKpY,EAAU8V,SACX9V,EAAU8V,OAAS,CAAC,GAEpB9V,EAAU8V,OAAOG,YACboC,IACa,SAATxI,UACO5M,EAAS6S,OAAOrP,OAEd,YAAToJ,UACO5M,EAAS6S,OAAO/K,cAK/B,GAAImL,GAAaiC,EAAgB,CAE7B,IADYE,GAAcC,KACdL,EAAa,CACrB,MAAMnX,EAAQwX,EAAQnC,GAAamC,EAAOL,GAAgBC,EAC7C,SAATrI,IACA5M,EAAS6S,OAAOrP,OAAS3F,GAEhB,YAAT+O,IACA5M,EAAS6S,OAAO/K,QAAUjK,EAElC,CACJ,KAEiB,SAAT+O,UACO5M,EAAS6S,OAAOrP,OAEd,YAAToJ,UACO5M,EAAS6S,OAAO/K,OAGnC,EAEJhN,KAAKwa,qBAAuB,CAACjV,EAAOlD,EAAUyT,KAC1C,MAAM7T,EAAYjC,KAAKiC,UAAWgV,EAAYzU,SAASuT,iBAAiB1T,GAAW0V,EAAS9V,EAAUkR,cAAcV,cAAc9E,MAAMoK,OACnIA,GAAWd,EAAUzY,QAG1ByY,EAAUjB,SAASC,IACf,MAAMC,EAAOD,EAAMnN,EAAU7G,EAAUoG,OAAOC,WAAYN,EAAM,CAC5D9B,GAAIgQ,EAAKC,WAAaD,EAAKE,YAAc,GAAKtN,EAC9C3C,GAAI+P,EAAKG,UAAYH,EAAKI,aAAe,GAAKxN,GAC/C2R,EAAiBvE,EAAKE,YAAc,EAAKtN,EAASmK,EAAoB,WAAb6C,EAAIhE,KAC1D,IAAIiB,EAAAA,EAAO/K,EAAI9B,EAAG8B,EAAI7B,EAAGsU,GACzB,IAAIjF,EAAAA,EAAUU,EAAKC,WAAarN,EAASoN,EAAKG,UAAYvN,EAASoN,EAAKE,YAActN,EAASoN,EAAKI,aAAexN,GAAUsK,EAAQnR,EAAUG,UAAUiR,SAASD,MAAMH,GAAOK,GAAMtT,KAAK2I,UAAU2K,KAC1M,IAAK,MAAMpO,KAAYkO,EAAO,CAC1B,IAAKH,EAAKyH,SAASxV,EAAS+C,eACxB,SAEJ/C,EAAS6S,OAAO9O,SAAU,EAC1B,MAAMsN,EAAOwB,EAAOxB,KAAM8C,GAAYsB,EAAAA,EAAAA,IAAQpE,EAAML,GAC/ChR,EAAS6S,OAAOjC,KAAO5Q,EAAS6S,OAAOjC,MAAQI,IAChDlW,KAAKiU,MAAM/O,EAAUK,GAAO,GAC5BL,EAAS6S,OAAOjC,IAAMI,GAE1BlW,KAAKkZ,iBAAiBhU,EAAU,EAAGmU,GACnCrZ,KAAKmZ,oBAAoBjU,EAAU,EAAGmU,GACtCrZ,KAAK+Y,kBAAkB7T,EAAU,EAAGmU,EACxC,IACF,EAEDpX,EAAU8V,SACX9V,EAAU8V,OAAS,CAAC,GAExB/X,KAAK4T,gBAAmBC,IACP,WAATA,IAGC5R,EAAU8V,SACX9V,EAAU8V,OAAS,CAAC,GAExB9V,EAAU8V,OAAOxF,UAAW,EAAI,CAExC,CACA0B,KAAAA,CAAM/O,EAAUK,EAAOqV,GACf1V,EAAS6S,OAAO9O,UAAY2R,WAGzB1V,EAAS6S,OAAOjC,WAChB5Q,EAAS6S,OAAO/K,eAChB9H,EAAS6S,OAAOrP,cAChBxD,EAAS6S,OAAOjV,MAC3B,CACA5C,IAAAA,GACI,MAAM+B,EAAYjC,KAAKiC,UAAW8V,EAAS9V,EAAUkR,cAAcV,cAAc9E,MAAMoK,OAClFA,IAGL9V,EAAUoG,OAAO2P,mBAAqBD,EAAO9U,SAAWhB,EAAUoG,OAAOC,gBACrD7J,IAAhBsZ,EAAOvU,OACPvB,EAAUoG,OAAOsQ,eAAiBZ,EAAOvU,KAAOvB,EAAUoG,OAAOC,YAEzE,CACA,cAAM4L,CAAS3O,GACX,MAA8C8O,EAA9BrU,KAAKiC,UAAUkR,cAAgCV,cAAc4B,OAAQE,EAAUF,EAAOE,QAASG,EAAUL,EAAOK,QAASJ,EAAeC,EAAQ1R,OAAQ2R,EAAYD,EAAQV,KAAMY,EAAeC,EAAQ7R,OAAQ8R,EAAYD,EAAQb,KAAM0C,EAAOlC,EAAOmC,MACrQlC,IAAgBM,EAAAA,EAAAA,IAAU,SAAUJ,GACpCxU,KAAKgZ,eAEAvE,IAAgBG,EAAAA,EAAAA,IAAU,SAAUD,GACzC3U,KAAK4X,gBAGLnB,EAAAA,EAAAA,IAAe,SAAUF,GAAM,CAAClU,EAAUyT,IAAQ9V,KAAKwa,qBAAqBjV,EAAOlD,EAAUyT,IAErG,CACAnN,SAAAA,CAAUzD,GACN,MAAMjD,EAAYjC,KAAKiC,UAAWxB,EAAUwB,EAAUkR,cAAeT,EAAQzQ,EAAUwQ,cAAcC,MAAO2B,GAAUnP,GAAUuN,eAAiBhS,EAAQgS,eAAe4B,QAAQ,QAAEK,EAAO,MAAE8B,EAAK,QAAEjC,GAAYF,EAAQgF,GAAY3C,EAAAA,EAAAA,IAAiB,SAAUF,GAC7P,SAAM6C,GAAc9E,EAAQ1R,QAAU6P,EAAMtL,UAAcsN,EAAQ7R,QAAU6P,EAAMC,kBAG3EiC,EAAAA,EAAAA,IAAU,SAAUL,EAAQV,QAASe,EAAAA,EAAAA,IAAU,SAAUF,EAAQb,OAASwF,EACrF,CACAxE,eAAAA,CAAgBpU,GACPA,EAAQsX,SACTtX,EAAQsX,OAAS,IAAIX,GACxB,QAAAtC,EAAAvW,UAAAC,OAHuBuW,EAAO,IAAA7V,MAAA4V,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAPD,EAAOC,EAAA,GAAAzW,UAAAyW,GAI/B,IAAK,MAAMC,KAAUF,EACjBtU,EAAQsX,OAAO7V,KAAK+S,GAAQ8C,OAEpC,CACA3K,KAAAA,CAAMlI,GACFA,EAAS6S,OAAO9O,SAAU,CAC9B,EC7QG,MAAM4R,EACThb,WAAAA,GACIG,KAAKgN,QAAU,EACnB,CACA9K,IAAAA,CAAKmL,GACIA,QAGgB5O,IAAjB4O,EAAKL,UACLhN,KAAKgN,QAAUK,EAAKL,QAE5B,ECVG,MAAM8N,EACTjb,WAAAA,GACIG,KAAKiD,SAAW,GAChBjD,KAAKgD,MAAQ,IAAI6X,EACjB7a,KAAK0I,OAAS,EAClB,CACA,cAAIqS,GACA,OAAO/a,KAAKgD,KAChB,CACA,cAAI+X,CAAWhY,GACX/C,KAAKgD,MAAQD,CACjB,CACA,eAAIiY,GACA,OAAOhb,KAAKgD,KAChB,CACA,eAAIgY,CAAYjY,GACZ/C,KAAKgD,MAAQD,CACjB,CACAb,IAAAA,CAAKmL,GACIA,SAGiB5O,IAAlB4O,EAAKpK,WACLjD,KAAKiD,SAAWoK,EAAKpK,UAEzBjD,KAAKgD,MAAMd,KAAKmL,EAAKrK,OAASqK,EAAK0N,YAAc1N,EAAK2N,kBAClCvc,IAAhB4O,EAAK3E,SACL1I,KAAK0I,OAAS2E,EAAK3E,QAE3B,E,cCZG,SAASuS,EAAUhZ,EAAWiZ,EAAKC,EAAIC,GAC1C,MAAyCC,EAAzBpZ,EAAUkR,cAAwCV,cAAc9E,MAAM2N,QACtF,GAAKD,EAGL,OAtBG,SAAkBxQ,EAASsQ,EAAIC,EAAIpO,GACtC,MAAMuO,EAAWjU,KAAKyI,MAAMqL,EAAG5R,YAAc2R,EAAG3R,aAAcgS,EAASL,EAAGxB,eAAgB8B,EAASL,EAAGzB,eACtG,IAAK6B,IAAWC,EACZ,OAEJ,MAAMC,EAAYP,EAAGlT,cAAe0T,EAAUP,EAAGnT,cAAe2T,GAAS/B,EAAAA,EAAAA,IAAS2B,EAAQC,EAAQN,EAAG3R,YAAa4R,EAAG5R,aAAcqS,EAAOhR,EAAQiR,qBAAqBJ,EAAUxV,EAAGwV,EAAUvV,EAAGwV,EAAQzV,EAAGyV,EAAQxV,GAIpN,OAHA0V,EAAKE,aAAa,GAAGC,EAAAA,EAAAA,IAAgBR,EAAQxO,IAC7C6O,EAAKE,aAAaR,EAAW,EAAI,EAAIA,GAAUU,EAAAA,EAAAA,IAAgBL,EAAQ5O,IACvE6O,EAAKE,aAAa,GAAGC,EAAAA,EAAAA,IAAgBP,EAAQzO,IACtC6O,CACX,CAYWK,CAAShB,EAAKC,EAAIC,EAAIC,EAAerY,MAAMgK,QACtD,CACO,SAASmP,EAAela,EAAWkZ,EAAIC,GAC1CnZ,EAAU8F,OAAO6C,MAAMsQ,IACnB,MAAMkB,EAAKnB,EAAUhZ,EAAWiZ,EAAKC,EAAIC,GACzC,IAAKgB,EACD,OAEJ,MAAMC,EAAOlB,EAAGlT,cAAeqU,EAAOlB,EAAGnT,eAnB1C,SAAyB4C,EAAS5J,EAAOga,EAAWsB,EAAOC,IAC9DC,EAAAA,EAAAA,IAAS5R,EAAS0R,EAAOC,GACzB3R,EAAQ6R,UAAYzb,EACpB4J,EAAQ8R,YAAc1B,EACtBpQ,EAAQ+R,QACZ,CAeQC,CAAgB3B,EAAKC,EAAG9S,OAAOyU,YAAc,EAAGV,EAAIC,EAAMC,EAAK,GAEvE,CC/BO,MAAMS,UAAkBlL,EAC3BhS,WAAAA,CAAYoC,GACRlC,MAAMkC,EACV,CACAgS,KAAAA,GACA,CACA/T,IAAAA,GACI,MAAM+B,EAAYjC,KAAKiC,UAAWqZ,EAAUrZ,EAAUkR,cAAcV,cAAc9E,MAAM2N,QACnFA,IAGLrZ,EAAUoG,OAAO2U,oBAAsB1B,EAAQrY,SAAWhB,EAAUoG,OAAOC,WAC3ErG,EAAUoG,OAAO4U,kBAAoB3B,EAAQ5S,OAASzG,EAAUoG,OAAOC,WAC3E,CACA,cAAM4L,GACF,MAAMjS,EAAYjC,KAAKiC,UACvB,GAD4CA,EAAUkR,cAC1CV,cAAc4B,OAAOE,QAAQ1R,QAA6C,gBAAnCZ,EAAUwQ,cAAc3G,OAA0B,CACjG,MAAM0G,EAAWvQ,EAAUwQ,cAAcC,MAAMtL,SAC/C,IAAKnF,EAAUoG,OAAO2U,qBAClB/a,EAAUoG,OAAO2U,oBAAsB,IACtC/a,EAAUoG,OAAO4U,mBAClBhb,EAAUoG,OAAO4U,kBAAoB,IACpCzK,EACD,OAEJ,MAAMvP,EAAWqE,KAAK0C,IAAI/H,EAAUoG,OAAO4U,mBAAoB7J,EAAQnR,EAAUG,UAAUiR,SAAS4E,YAAYzF,EAAUvP,GAAWqQ,GAAMtT,KAAK2I,UAAU2K,KAC1J,IAAI/T,EAAI,EACR,IAAK,MAAM4b,KAAM/H,EAAO,CACpB,MAAMiJ,EAAOlB,EAAGlT,cAChB,IAAK,MAAMmT,KAAMhI,EAAM8J,MAAM3d,EAAI,GAAI,CACjC,MAAM+c,EAAOlB,EAAGnT,cAAekV,EAAU7V,KAAK0C,IAAI/H,EAAUoG,OAAO2U,qBAAsBI,EAAQ9V,KAAK0C,IAAIqS,EAAKnW,EAAIoW,EAAKpW,GAAImX,EAAQ/V,KAAK0C,IAAIqS,EAAKlW,EAAImW,EAAKnW,GACvJiX,EAAQD,GAAWE,EAAQF,GAC3BhB,EAAela,EAAWkZ,EAAIC,EAEtC,GACE7b,CACN,CACJ,CACJ,CACAoJ,SAAAA,CAAUzD,GACN,MAAMjD,EAAYjC,KAAKiC,UAAWyQ,EAAQzQ,EAAUwQ,cAAcC,MAAO2B,GAAUnP,GAAUuN,eAAiBxQ,EAAUkR,cAAcV,eAAe4B,OACrJ,SAAMA,EAAOE,QAAQ1R,SAAU6P,EAAMtL,YAG9BwN,EAAAA,EAAAA,IAAU,UAAWP,EAAOE,QAAQV,KAC/C,CACAgB,eAAAA,CAAgBpU,GACPA,EAAQ6a,UACT7a,EAAQ6a,QAAU,IAAIR,GACzB,QAAAhG,EAAAvW,UAAAC,OAHuBuW,EAAO,IAAA7V,MAAA4V,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAPD,EAAOC,EAAA,GAAAzW,UAAAyW,GAI/B,IAAK,MAAMC,KAAUF,EACjBtU,EAAQ6a,QAAQpZ,KAAK+S,GAAQqG,QAErC,CACAlO,KAAAA,GACA,ECzDG,MAAMkQ,EACTzd,WAAAA,GACIG,KAAKud,OAAQ,EACbvd,KAAKwd,SAAU,EACfxd,KAAKgN,QAAU,CACnB,CACA9K,IAAAA,CAAKmL,GACIA,SAGc5O,IAAf4O,EAAKkQ,QACLvd,KAAKud,MAAQlQ,EAAKkQ,YAEH9e,IAAf4O,EAAKvK,QACL9C,KAAK8C,MAAQiU,EAAAA,EAAajH,OAAO9P,KAAK8C,MAAOuK,EAAKvK,aAEjCrE,IAAjB4O,EAAKmQ,UACLxd,KAAKwd,QAAUnQ,EAAKmQ,cAEH/e,IAAjB4O,EAAKL,UACLhN,KAAKgN,QAAUK,EAAKL,SAE5B,ECtBG,MAAMyQ,EACT5d,WAAAA,GACIG,KAAKiD,SAAW,IAChBjD,KAAKgD,MAAQ,IAAIsa,CACrB,CACA,cAAIvC,GACA,OAAO/a,KAAKgD,KAChB,CACA,cAAI+X,CAAWhY,GACX/C,KAAKgD,MAAQD,CACjB,CACA,eAAIiY,GACA,OAAOhb,KAAKgD,KAChB,CACA,eAAIgY,CAAYjY,GACZ/C,KAAKgD,MAAQD,CACjB,CACAb,IAAAA,CAAKmL,GACIA,SAGiB5O,IAAlB4O,EAAKpK,WACLjD,KAAKiD,SAAWoK,EAAKpK,UAEzBjD,KAAKgD,MAAMd,KAAKmL,EAAKrK,OAASqK,EAAK0N,YAAc1N,EAAK2N,aAC1D,ECnBG,SAAS0C,EAASzb,EAAWiD,EAAUyY,EAAW3Q,EAASwF,GAC9DvQ,EAAU8F,OAAO6C,MAAMsQ,IACnB,MAAM0C,EAAW1Y,EAAS+C,eAR3B,SAAsB4C,EAAS5J,EAAOsb,EAAOC,EAAKqB,EAAW7Q,IAChEyP,EAAAA,EAAAA,IAAS5R,EAAS0R,EAAOC,GACzB3R,EAAQ8R,aAAcV,EAAAA,EAAAA,IAAgB4B,EAAW7Q,GACjDnC,EAAQ6R,UAAYzb,EACpB4J,EAAQ+R,QACZ,CAIQkB,CAAa5C,EAAKhW,EAASmD,OAAOyU,YAAc,EAAGc,EAAUpL,EAAUmL,EAAW3Q,EAAQ,GAElG,CCTO,MAAM+Q,UAAgBlM,EACzBhS,WAAAA,CAAYoC,GACRlC,MAAMkC,EACV,CACAgS,KAAAA,GACA,CACA/T,IAAAA,GACI,MAAM+B,EAAYjC,KAAKiC,UAAW+b,EAAO/b,EAAUkR,cAAcV,cAAc9E,MAAMqQ,KAChFA,IAGL/b,EAAUoG,OAAO4V,iBAAmBD,EAAK/a,SAAWhB,EAAUoG,OAAOC,WACzE,CACA,cAAM4L,GACF,MAAMjS,EAAYjC,KAAKiC,UAA8CwQ,EAAzBxQ,EAAUkR,cAAuCV,cAC7F,IAAKA,EAAc9E,MAAMqQ,OACpBvL,EAAc4B,OAAOE,QAAQ1R,QAC9BZ,EAAUwQ,cAAc3G,SAAWsI,EAAAA,GACnC,OAEJ,MAAM5B,EAAWvQ,EAAUwQ,cAAcC,MAAMtL,SAC/C,IAAKoL,EACD,OAEJ,MAAMvP,EAAWhB,EAAUoG,OAAO4V,iBAClC,IAAKhb,GAAYA,EAAW,EACxB,OAEJ,MAAMmQ,EAAQnR,EAAUG,UAAUiR,SAAS4E,YAAYzF,EAAUvP,GAAWqQ,GAAMtT,KAAK2I,UAAU2K,KACjG,IAAK,MAAMpO,KAAYkO,EAAO,CAC1B,MAAMpL,EAAM9C,EAAS+C,cAAegR,GAAgB/Q,EAAAA,EAAAA,IAAYF,EAAKwK,GACrE,GAAIyG,EAAgBhW,EAChB,SAEJ,MAAMib,EAAkBzL,EAAc9E,MAAMqQ,KAAKhb,MAAOmb,EAAcD,EAAgBlR,QAASoR,EAAcD,EAAelF,EAAgBkF,EAAelb,EAC3J,GAAImb,GAAe,EACf,SAEJ,MAAMC,EAAWH,EAAgBpb,OAASoC,EAASzE,QAAQuC,OAAOF,MAClE,IAAKb,EAAUG,UAAUkc,eAAiBD,EAAU,CAChD,MAAME,EAAe9L,EAAc9E,MAAMqQ,KAAKhb,MAC9Cf,EAAUG,UAAUkc,eAAgBE,EAAAA,EAAAA,IAAmBH,EAAUE,EAAahB,MAAOgB,EAAaf,QACtG,CACA,MAAMK,GAAYY,EAAAA,EAAAA,IAAavZ,OAAUzG,EAAWwD,EAAUG,UAAUkc,eACnET,GAGLH,EAASzb,EAAWiD,EAAU2Y,EAAWO,EAAa5L,EAC1D,CACJ,CACA7J,SAAAA,CAAUzD,GACN,MAAMjD,EAAYjC,KAAKiC,UAAWyQ,EAAQzQ,EAAUwQ,cAAcC,MAAO2B,GAAUnP,GAAUuN,eAAiBxQ,EAAUkR,cAAcV,eAAe4B,OACrJ,OAAOA,EAAOE,QAAQ1R,UAAY6P,EAAMtL,WAAYwN,EAAAA,EAAAA,IAAU,OAAQP,EAAOE,QAAQV,KACzF,CACAgB,eAAAA,CAAgBpU,GACPA,EAAQud,OACTvd,EAAQud,KAAO,IAAIP,GACtB,QAAA3I,EAAAvW,UAAAC,OAHuBuW,EAAO,IAAA7V,MAAA4V,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAPD,EAAOC,EAAA,GAAAzW,UAAAyW,GAI/B,IAAK,MAAMC,KAAUF,EACjBtU,EAAQud,KAAK9b,KAAK+S,GAAQ+I,KAElC,CACA5Q,KAAAA,GACA,ECjEG,MAAMsR,UAAe7M,EACxBhS,WAAAA,CAAYoC,GACRlC,MAAMkC,GACNjC,KAAK4T,gBAAmBC,IACpB,GAAa,UAATA,EACA,OAEJ,MAAM5R,EAAYjC,KAAKiC,UACnBA,EAAU0c,qBACV1c,EAAUiC,QAGVjC,EAAUmC,MACd,CAER,CACA6P,KAAAA,GACA,CACA/T,IAAAA,GACA,CACA,cAAMgU,GACN,CACAvL,SAAAA,GACI,OAAO,CACX,CACAyE,KAAAA,GACA,EC1BG,MAAMwR,EACT/e,WAAAA,GACIG,KAAK6Q,SAAU,EACf7Q,KAAK6e,OAAS,GACd7e,KAAK8e,SAAW,CACpB,CACA,gBAAIC,GACA,OAAO/e,KAAK8e,QAChB,CACA,gBAAIC,CAAahc,GACb/C,KAAK8e,UAAWE,EAAAA,EAAAA,IAAcjc,EAClC,CACAb,IAAAA,CAAKmL,GACD,IAAKA,EACD,YAEiB5O,IAAjB4O,EAAKwD,UACL7Q,KAAK6Q,QAAUxD,EAAKwD,cAEJpS,IAAhB4O,EAAKwR,SACL7e,KAAK6e,OAASxR,EAAKwR,OAAOhb,KAAKsT,GAAMA,KAEpCnX,KAAK6e,OAAOrgB,SACbwB,KAAK6Q,SAAU,GAEnB,MAAMiO,EAAWzR,EAAKyR,UAAYzR,EAAK0R,kBACtBtgB,IAAbqgB,IACA9e,KAAK8e,UAAWE,EAAAA,EAAAA,IAAcF,GAEtC,EC5BG,MAAMG,UAAepN,EACxBhS,WAAAA,CAAYoC,GACRlC,MAAMkC,GACNjC,KAAK4T,gBAAmBC,IACpB,GAAa,SAATA,EACA,OAEJ,MAAM5R,EAAYjC,KAAKiC,UAA8Cid,EAAzBjd,EAAUkR,cAAqCV,cAAc9E,MAAMwR,KAC/G,IAAKD,EACD,OAEJ,MAAMJ,GAAW1W,EAAAA,EAAAA,IAAc8W,EAAYJ,UAC3C,GAAIA,GAAY,EACZ,OAEJ,MAAMM,GAAQC,EAAAA,EAAAA,IAAc,MAAC5gB,KAAcygB,EAAYL,SAAUS,OAAyB7gB,IAAV2gB,EAAsBnd,EAAUkR,cAAc/Q,UAAUyc,OAAOO,QAAS3gB,EACxJwD,EAAUG,UAAU+c,KAAKL,EAAU7c,EAAUwQ,cAAcC,MAAO4M,EAAcF,EAAM,CAE9F,CACAnL,KAAAA,GACA,CACA/T,IAAAA,GACA,CACA,cAAMgU,GACN,CACAvL,SAAAA,GACI,OAAO,CACX,CACAkM,eAAAA,CAAgBpU,GACPA,EAAQ0e,OACT1e,EAAQ0e,KAAO,IAAIP,GACtB,QAAA9J,EAAAvW,UAAAC,OAHuBuW,EAAO,IAAA7V,MAAA4V,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAPD,EAAOC,EAAA,GAAAzW,UAAAyW,GAI/B,IAAK,MAAMC,KAAUF,EACjBtU,EAAQ0e,KAAKjd,KAAK+S,GAAQkK,KAElC,CACA/R,KAAAA,GACA,ECtCG,MAAMmS,EACT1f,WAAAA,GACIG,KAAK8e,SAAW,CACpB,CACA,gBAAIC,GACA,OAAO/e,KAAK8e,QAChB,CACA,gBAAIC,CAAahc,GACb/C,KAAK8e,UAAWE,EAAAA,EAAAA,IAAcjc,EAClC,CACAb,IAAAA,CAAKmL,GACD,IAAKA,EACD,OAEJ,MAAMyR,EAAWzR,EAAKyR,UAAYzR,EAAK0R,kBACtBtgB,IAAbqgB,IACA9e,KAAK8e,UAAWE,EAAAA,EAAAA,IAAcF,GAEtC,ECjBG,MAAMU,UAAgB3N,EACzBhS,WAAAA,CAAYoC,GACRlC,MAAMkC,GACNjC,KAAK4T,gBAAmBC,IACpB,MAAM5R,EAAYjC,KAAKiC,UAAWxB,EAAUwB,EAAUkR,cACtD,IAAK1S,EAAQgS,cAAc9E,MAAM8B,QAAmB,WAAToE,EACvC,OAEJ,MAAM4L,GAAWrX,EAAAA,EAAAA,IAAc3H,EAAQgS,cAAc9E,MAAM8B,OAAOqP,UAClE7c,EAAUG,UAAUsd,eAAeD,EAAS,CAEpD,CACAxL,KAAAA,GACA,CACA/T,IAAAA,GACA,CACA,cAAMgU,GACN,CACAvL,SAAAA,GACI,OAAO,CACX,CACAkM,eAAAA,CAAgBpU,GACPA,EAAQgP,SACThP,EAAQgP,OAAS,IAAI8P,GACxB,QAAAzK,EAAAvW,UAAAC,OAHuBuW,EAAO,IAAA7V,MAAA4V,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAPD,EAAOC,EAAA,GAAAzW,UAAAyW,GAI/B,IAAK,MAAMC,KAAUF,EACjBtU,EAAQgP,OAAOvN,KAAK+S,GAAQxF,OAEpC,CACArC,KAAAA,GACA,EChCG,MAAMuS,EACT9f,WAAAA,GACIG,KAAKiD,SAAW,IAChBjD,KAAKgS,SAAW,GAChBhS,KAAKyG,OAAS,IACdzG,KAAKqD,MAAQ,EACbrD,KAAKqF,SAAW,GAChBrF,KAAKiS,OAAS,eAClB,CACA/P,IAAAA,CAAKmL,GACIA,SAGiB5O,IAAlB4O,EAAKpK,WACLjD,KAAKiD,SAAWoK,EAAKpK,eAEHxE,IAAlB4O,EAAK2E,WACLhS,KAAKgS,SAAW3E,EAAK2E,eAELvT,IAAhB4O,EAAK4E,SACLjS,KAAKiS,OAAS5E,EAAK4E,aAEHxT,IAAhB4O,EAAK5G,SACLzG,KAAKyG,OAAS4G,EAAK5G,aAEJhI,IAAf4O,EAAKhK,QACLrD,KAAKqD,MAAQgK,EAAKhK,YAEA5E,IAAlB4O,EAAKhI,WACLrF,KAAKqF,SAAWgI,EAAKhI,UAE7B,EC7BG,MAAMua,UAAmBD,EAC5B9f,WAAAA,GACIE,QACAC,KAAKiX,UAAY,EACrB,CACA,OAAIC,GACA,OAAOJ,EAAAA,EAAAA,IAA0B9W,KAAKiX,WAAYE,GAAMA,EAAExU,QAAQ,IAAK,KAC3E,CACA,OAAIuU,CAAInU,GACJ/C,KAAKiX,WAAYH,EAAAA,EAAAA,IAA0B/T,GAAQoU,GAAM,IAAIA,KACjE,CACAjV,IAAAA,CAAKmL,GACDtN,MAAMmC,KAAKmL,GACNA,SAGY5O,IAAb4O,EAAK6J,MACLlX,KAAKkX,IAAM7J,EAAK6J,UAEGzY,IAAnB4O,EAAK4J,YACLjX,KAAKiX,UAAY5J,EAAK4J,WAE9B,ECrBG,MAAM4I,WAAgBF,EACzBzd,IAAAA,CAAKmL,GACDtN,MAAMmC,KAAKmL,GACNA,IAGLrN,KAAKuW,MAAOO,EAAAA,EAAAA,IAA0BzJ,EAAKkJ,MAAOT,IAC9C,MAAMuB,EAAM,IAAIuI,EAEhB,OADAvI,EAAInV,KAAK4T,GACFuB,CAAG,IAElB,ECZG,MAAMyI,WAAiBjO,EAC1BhS,WAAAA,CAAYyE,EAAQrC,GAChBlC,MAAMkC,GACNjC,KAAK+f,cAAgB,KACjB,MAAM9d,EAAYjC,KAAKiC,UAAW+d,EAAiB/d,EAAUkR,cAAcV,cAAc9E,MAAMsS,QAC/F,IAAKD,EACD,OAEJ,MAAMC,EAAUhe,EAAUge,SAAW,CAAE7d,UAAW,IAUlD,GATK6d,EAAQ5N,SACJ4N,EAAQ3N,QACT2N,EAAQ3N,MAAQ,GAEpB2N,EAAQ3N,QACJ2N,EAAQ3N,QAAUrQ,EAAUG,UAAUkQ,QACtC2N,EAAQ5N,QAAS,IAGrB4N,EAAQ1N,SAAU,CAClB,MAAM2N,EAAkBje,EAAUoG,OAAO8X,oBACzC,IAAKD,GAAmBA,EAAkB,EACtC,OAEJ,MAAMzF,EAAgBnT,KAAK8Y,IAAIF,EAAkB,EAAG,GAAIrI,EAAgB5V,EAAUwQ,cAAcC,MAAMC,cACtG,QAAsBlU,IAAlBoZ,EACA,OAEJ,MAAMwI,EAAQ,IAAItN,EAAAA,EAAO8E,EAAc3R,EAAG2R,EAAc1R,EAAGsU,GAAgBrH,EAAQnR,EAAUG,UAAUiR,SAASD,MAAMiN,GAAQ/M,GAAMtT,KAAK2I,UAAU2K,KACnJ,IAAK,MAAMpO,KAAYkO,EAAO,CAC1B,MAAM,GAAExJ,EAAE,GAAEC,EAAE,SAAE5G,IAAa6G,EAAAA,EAAAA,IAAa+N,EAAe3S,EAASkC,UAAWkZ,EAAIrd,GAAY,EAAoC2X,GAAUH,EAAhCuF,EAAe3c,MAA6Cid,EACvK,GAAIA,GAAK7F,EAAe,CACpBwF,EAAQ7d,UAAU+c,KAAKja,GACvB,MAAMqb,EAAOnR,EAAAA,EAAOU,OAAOlG,EAAIC,GAC/B0W,EAAK/hB,OAASoc,EACd1V,EAASa,SAAS+N,MAAMyM,EAC5B,CACJ,CACJ,MACK,IAAyB,IAArBN,EAAQ1N,SAAoB,CACjC,IAAK,MAAMrN,KAAY+a,EAAQ7d,UAC3B8C,EAASa,SAAS+N,MAAM5O,EAAS6O,iBAErCkM,EAAQ7d,UAAY,EACxB,GAEJpC,KAAKwgB,cAAgB,KACjB,MAAMve,EAAYjC,KAAKiC,UAAWuQ,EAAWvQ,EAAUwQ,cAAcC,MAAMtL,SAAUqT,EAAgBxY,EAAUoG,OAAO8X,qBACjH1F,GAAiBA,EAAgB,IAAMjI,GAG5CxS,KAAKygB,gBAAgBjO,EAAUiI,EAAe,IAAI1H,EAAAA,EAAOP,EAAStM,EAAGsM,EAASrM,EAAGsU,GAAe,EAEpGza,KAAKygB,gBAAkB,CAACrZ,EAAUqT,EAAexH,EAAMyN,KACnD,MAAMze,EAAYjC,KAAKiC,UAAWmR,EAAQnR,EAAUG,UAAUiR,SAASD,MAAMH,GAAOK,GAAMtT,KAAK2I,UAAU2K,KAAK0M,EAAiB/d,EAAUkR,cAAcV,cAAc9E,MAAMsS,QAC3K,GAAKD,EAGL,IAAK,MAAM9a,KAAYkO,EAAO,CAC1B,MAAM,GAAExJ,EAAE,GAAEC,EAAE,SAAE5G,IAAa6G,EAAAA,EAAAA,IAAa5E,EAASkC,SAAUA,GAAWrB,GAAY2a,GAAYrd,OAAS2c,EAAe3c,OAAS2c,EAAevZ,OAAQka,GAAgB1a,EAAAA,EAAAA,KAAMuN,EAAAA,EAAAA,IAAUwM,EAAe/N,OAAzBuB,CAAiC,EAAIvQ,EAAWwX,GAAiB1U,EAAU,EAAGia,EAAe3a,UAAWoO,EAAUrE,EAAAA,EAAOU,OAAoB,IAAb7M,EAAiB8C,EAAY6D,EAAK3G,EAAY0d,EAA4B,IAAb1d,EAAiB8C,EAAY8D,EAAK5G,EAAY0d,GACzZzb,EAASkC,SAASpB,MAAMyN,EAC5B,GAEJzT,KAAK4gB,uBAAyB,CAACve,EAAUyT,KACrC,MAAM7T,EAAYjC,KAAKiC,UAAWge,EAAUhe,EAAUkR,cAAcV,cAAc9E,MAAMsS,QACxF,IAAKA,EACD,OAEJ,MAAM7M,EAAQ5Q,SAASuT,iBAAiB1T,GACnC+Q,EAAM5U,QAGX4U,EAAM4C,SAASC,IACX,MAAMC,EAAOD,EAAMnN,EAAU7G,EAAUoG,OAAOC,WAAYN,EAAM,CAC5D9B,GAAIgQ,EAAKC,WAAaD,EAAKE,YAAc,GAAKtN,EAC9C3C,GAAI+P,EAAKG,UAAYH,EAAKI,aAAe,GAAKxN,GAC/C2R,EAAiBvE,EAAKE,YAAc,EAAKtN,EAASmK,EAAoB,WAAb6C,EAAIhE,KAC1D,IAAIiB,EAAAA,EAAO/K,EAAI9B,EAAG8B,EAAI7B,EAAGsU,GACzB,IAAIjF,EAAAA,EAAUU,EAAKC,WAAarN,EAASoN,EAAKG,UAAYvN,EAASoN,EAAKE,YAActN,EAASoN,EAAKI,aAAexN,GAAUyN,EAAO0J,EAAQ1J,KAAMmK,GAAa/F,EAAAA,EAAAA,IAAQpE,EAAML,GACnLlW,KAAKygB,gBAAgBzY,EAAKyS,EAAexH,EAAMyN,EAAW,GAC5D,EAEN1gB,KAAK2T,QAAUrP,EACVrC,EAAUge,UACXhe,EAAUge,QAAU,CAAE7d,UAAW,KAErCpC,KAAK4T,gBAAmBC,IACpB,MAA8CgN,EAA9B7gB,KAAKiC,UAAUkR,cAAqCV,cAAc9E,MAAMsS,QACxF,IAAKY,GAAwB,YAAThN,EAChB,OAEC5R,EAAUge,UACXhe,EAAUge,QAAU,CAAE7d,UAAW,KAErC,MAAM6d,EAAUhe,EAAUge,QAC1BA,EAAQ1N,UAAW,EACnB0N,EAAQ3N,MAAQ,EAChB,IAAK,MAAMpN,KAAYjD,EAAUge,QAAQ7d,UAChCpC,KAAK2I,UAAUzD,IAGpBA,EAASa,SAAS+N,MAAM5O,EAAS6O,iBAErCkM,EAAQ7d,UAAY,GACpB6d,EAAQ5N,QAAS,EACjB2B,YAAW,KACH/R,EAAU2G,YAGdqX,EAAQ1N,UAAW,EAAK,GACF,IAAvBsO,EAAY7O,SAAgB,CAEvC,CACAiC,KAAAA,GACA,CACA/T,IAAAA,GACI,MAAM+B,EAAYjC,KAAKiC,UAAWge,EAAUhe,EAAUkR,cAAcV,cAAc9E,MAAMsS,QACnFA,IAGLhe,EAAUoG,OAAO8X,oBAAsBF,EAAQhd,SAAWhB,EAAUoG,OAAOC,WAC/E,CACA,cAAM4L,GACF,MAAMjS,EAAYjC,KAAKiC,UAAWxB,EAAUwB,EAAUkR,cAAegB,EAAkBlS,EAAUwQ,cAAc3G,SAAWsI,EAAAA,GAAgBC,EAAS5T,EAAQgS,cAAc4B,OAAQyM,EAAQzM,EAAOE,QAASD,EAAewM,EAAMje,OAAQ2R,EAAYsM,EAAMjN,KAAMkN,EAAQ1M,EAAOK,QAASD,EAAesM,EAAMle,OAAQ8R,EAAYoM,EAAMlN,KAAM0C,EAAOlC,EAAOmC,MACrVrC,GAAmBG,IAAgBM,EAAAA,EAAAA,IAAU,UAAWJ,GACxDxU,KAAKwgB,gBAEA/L,IAAgBG,EAAAA,EAAAA,IAAU,UAAWD,GAC1C3U,KAAK+f,iBAGLtJ,EAAAA,EAAAA,IAAe,UAAWF,GAAM,CAAClU,EAAUyT,IAAQ9V,KAAK4gB,uBAAuBve,EAAUyT,IAEjG,CACAnN,SAAAA,CAAUzD,GACN,MAAMjD,EAAYjC,KAAKiC,UAAWxB,EAAUwB,EAAUkR,cAAeT,EAAQzQ,EAAUwQ,cAAcC,MAAO2B,GAAUnP,GAAUuN,eAAiBhS,EAAQgS,eAAe4B,OAAQkC,EAAOlC,EAAOmC,MAAOsK,EAAQzM,EAAOE,QAASwM,EAAQ1M,EAAOK,QAASgM,GAAahK,EAAAA,EAAAA,IAAiB,UAAWH,GAC9R,KAAMmK,GAAeI,EAAMje,QAAU6P,EAAMtL,UAAc2Z,EAAMle,QAAU6P,EAAMC,eAC3E,OAAO,EAEX,MAAM6B,EAAYsM,EAAMjN,KAAMc,EAAYoM,EAAMlN,KAChD,OAAOe,EAAAA,EAAAA,IAAU,UAAWJ,KAAcI,EAAAA,EAAAA,IAAU,UAAWD,IAAc+L,CACjF,CACA7L,eAAAA,CAAgBpU,GACPA,EAAQwf,UACTxf,EAAQwf,QAAU,IAAIJ,IACzB,QAAA/K,EAAAvW,UAAAC,OAHuBuW,EAAO,IAAA7V,MAAA4V,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAPD,EAAOC,EAAA,GAAAzW,UAAAyW,GAI/B,IAAK,MAAMC,KAAUF,EACjBtU,EAAQwf,QAAQ/d,KAAK+S,GAAQgL,QAErC,CACA7S,KAAAA,GACA,ECxJG,MAAM4T,GACTnhB,WAAAA,GACIG,KAAKyG,OAAS,EACdzG,KAAK0I,OAAS,GAClB,CACAxG,IAAAA,CAAKmL,GACIA,SAGe5O,IAAhB4O,EAAK5G,SACLzG,KAAKyG,OAAS4G,EAAK5G,aAEHhI,IAAhB4O,EAAK3E,SACL1I,KAAK0I,OAAS2E,EAAK3E,QAE3B,ECbG,MAAMuY,WAAepP,EACxBhS,WAAAA,CAAYoC,GACRlC,MAAMkC,EACV,CACAgS,KAAAA,CAAM/O,EAAUK,EAAOqV,GACf1V,EAAS8D,KAAKC,UAAY2R,IAG9B1V,EAAS8D,KAAKvC,OAAS,EAC3B,CACAvG,IAAAA,GACI,MAAM+B,EAAYjC,KAAKiC,UAAW+G,EAAO/G,EAAUkR,cAAcV,cAAc9E,MAAM3E,KAChFA,IAGL/G,EAAUoG,OAAO6Y,eAAiBlY,EAAKN,OAASzG,EAAUoG,OAAOC,WACrE,CACA,cAAM4L,GACN,CACAvL,SAAAA,CAAUzD,GACN,MAAMjD,EAAYjC,KAAKiC,UAAWyQ,EAAQzQ,EAAUwQ,cAAcC,MAAO2B,GAAUnP,GAAUuN,eAAiBxQ,EAAUkR,cAAcV,eAAe4B,OACrJ,OAAOA,EAAOE,QAAQ1R,UAAY6P,EAAMtL,WAAYwN,EAAAA,EAAAA,IAAU,OAAQP,EAAOE,QAAQV,KACzF,CACAgB,eAAAA,CAAgBpU,GACPA,EAAQuI,OACTvI,EAAQuI,KAAO,IAAIgY,IACtB,QAAAlM,EAAAvW,UAAAC,OAHuBuW,EAAO,IAAA7V,MAAA4V,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAPD,EAAOC,EAAA,GAAAzW,UAAAyW,GAI/B,IAAK,MAAMC,KAAUF,EACjBtU,EAAQuI,KAAK9G,KAAK+S,GAAQjM,KAElC,CACAoE,KAAAA,CAAMlI,GACFA,EAAS8D,KAAKC,SAAU,EACxB,MAAMhH,EAAYjC,KAAKiC,UAAWxB,EAAUwB,EAAUkR,cAAeX,EAAWvQ,EAAUwQ,cAAcC,MAAMtL,SAAUsB,EAASzG,EAAUoG,OAAO6Y,eAAgBC,EAAc1gB,EAAQgS,cAAc9E,MAAM3E,KAC5M,IAAKmY,IAAgBzY,GAAUA,EAAS,IAAM8J,EAC1C,OAEJ,MAAM4O,EAAclc,EAAS+C,cAAeoZ,GAAOnZ,EAAAA,EAAAA,IAAYsK,EAAU4O,GAAcE,EAAkBD,EAAO3Y,EAAQK,EAAaoY,EAAY1a,QAAQ,KAAEuC,GAAS9D,EAChKmc,EAAO3Y,IAGXM,EAAKC,SAAU,EACfD,EAAKvC,OAAS6a,EAAkBvY,EACpC,EC7CG,MAAMwY,GAAmB,CAAC,EAAG,EAAG,EAAG,GAC7BC,GAAiB,CAAC,EAAG,EAAG,EAAG,GCDjC,MAAMC,GACT5hB,WAAAA,CAAY6hB,GACR1hB,KAAKgI,IAAM,EACXhI,KAAKqN,KAAO,IAAIsU,kBAAkBD,EACtC,CACAE,SAAAA,CAAUtP,GACN,MAAM4K,EAAQld,KAAKqN,KAAK6P,MAAMld,KAAKgI,IAAKhI,KAAKgI,IAAMsK,GAEnD,OADAtS,KAAKgI,KAAOkV,EAAM1e,OACX0e,EAAM2E,QAAO,CAACC,EAAKC,IAASD,EAAME,OAAOC,aAAaF,IAAO,GACxE,CACAG,QAAAA,GACI,OAAOliB,KAAKqN,KAAKrN,KAAKgI,MAC1B,CACAma,YAAAA,GAEI,OADAniB,KAAKgI,KAAO,EACLhI,KAAKqN,KAAKrN,KAAKgI,IAAM,IAAMhI,KAAKqN,KAAKrN,KAAKgI,IAAM,IAAM,EACjE,CACAoa,aAAAA,GACI,IAAIC,EAAc,GAAI7e,EAAO,EAC7B,EAAG,CACCA,EAAOxD,KAAKqN,KAAKrN,KAAKgI,OACtB,IAAK,IAAIsK,EAAQ9O,IAAQ8O,GAAS,EAAG+P,GAAeL,OAAOC,aAAajiB,KAAKqN,KAAKrN,KAAKgI,SAE3F,OAAkB,IAATxE,GACT,OAAO6e,CACX,CACAC,gBAAAA,GACI,IAAI9e,EAAO,EAAG+e,EAAM,EACpB,IAAK,IAAI3W,EAAS,EAA6C,KAAzCpI,EAAOxD,KAAKqN,KAAKrN,KAAKgI,IAAM4D,IAAgBA,GAAUpI,EAAO,EAC/E+e,GAAO/e,EAEX,MAAMgf,EAAY,IAAIC,WAAWF,GACjC,IAAK,IAAIhjB,EAAI,EAAsC,KAAlCiE,EAAOxD,KAAKqN,KAAKrN,KAAKgI,SACnC,IAAK,IAAIsK,EAAQ9O,IAAQ8O,GAAS,EAAGkQ,EAAUjjB,KAAOS,KAAKqN,KAAKrN,KAAKgI,QAGzE,OAAOwa,CACX,CACAE,aAAAA,GACI,KAA+B,IAAxB1iB,KAAKqN,KAAKrN,KAAKgI,KAAYhI,KAAKgI,KAAOhI,KAAKqN,KAAKrN,KAAKgI,KAAO,GAEpEhI,KAAKgI,KACT,ECxCJ,SAAS2a,GAAgBC,EAAYtQ,GACjC,MAAMuQ,EAAS,GACf,IAAK,IAAItjB,EAAI,EAAGA,EAAI+S,EAAO/S,IACvBsjB,EAAO1D,KAAK,CACR2D,EAAGF,EAAWvV,KAAKuV,EAAW5a,KAC9B+a,EAAGH,EAAWvV,KAAKuV,EAAW5a,IAAM,GACpCgb,EAAGJ,EAAWvV,KAAKuV,EAAW5a,IAAM,KAExC4a,EAAW5a,KAAO,EAEtB,OAAO6a,CACX,CAiLAlhB,eAAeshB,GAAWL,EAAYM,EAAKC,EAAUC,EAAeC,EAAsBC,GACtF,OAAQV,EAAWV,YACf,KAAK,GACD,OAAO,EACX,KAAK,SA3HbvgB,eAA+BihB,EAAYM,EAAKC,EAAUC,EAAeC,EAAsBC,GAC3F,MAAMC,EAAQL,EAAIM,OAAOJ,GAAc,IACvCG,EAAMjV,KAAOsU,EAAWT,eACxBoB,EAAMzU,IAAM8T,EAAWT,eACvBoB,EAAMtiB,MAAQ2hB,EAAWT,eACzBoB,EAAMviB,OAAS4hB,EAAWT,eAC1B,MAAMsB,EAAab,EAAWV,WAAYwB,EAA8C,OAAV,IAAbD,GAA6BE,EAAyC,MAAV,GAAbF,GAChHF,EAAMK,SAAmC,MAAV,GAAbH,GAClBF,EAAMM,UAAyB,GAAbJ,KAAuB,EACzC,MAAMK,EAAkB,GAAyB,GAAL,EAAbL,GAC3BC,IACAH,EAAMQ,gBAAkBpB,GAAgBC,EAAYkB,IAExD,MAAME,EAAYC,IACd,MAAM,EAAEnB,EAAC,EAAEC,EAAC,EAAEC,IAAOU,EAAsBH,EAAMQ,gBAAkBb,EAAIgB,kBAAkBD,GACzF,MAAO,CAAEnB,IAAGC,IAAGC,IAAGmB,EAAGF,IAAUZ,EAAqB,MAASF,MAAeL,EAAIC,EAAIC,GAAK,GAAK,EAAK,IAAK,EAEtGoB,EAAQ,MACV,IACI,OAAO,IAAIC,UAAUd,EAAMtiB,MAAOsiB,EAAMviB,OAAQ,CAAEsjB,WAAY,QAClE,CACA,MAAOC,GACH,GAAIA,aAAiBC,cAA+B,mBAAfD,EAAME,KACvC,OAAO,KAEX,MAAMF,CACV,CACH,EAVa,GAWd,GAAa,MAATH,EACA,MAAM,IAAIM,UAAU,8BAExB,MAAMC,EAAc/B,EAAWV,WAAY0C,EAAYhC,EAAWN,mBAAoBuC,EAAY,GAAKF,EACjGG,EAAWA,CAAC9c,EAAKua,KACnB,MAAMwC,EAAU/c,IAAQ,EAAGgd,EAAe,EAANhd,EACpC,OAAU4c,EAAUG,IAAYH,EAAUG,EAAU,IAAM,IAAMH,EAAUG,EAAU,IAAM,KACnF,GAAKxC,GAAO,GAAMyC,KACrBA,CAAM,EAEd,GAAIrB,EAAgB,CAChB,IAAK,IAAIsB,EAAO,EAAGzhB,EAAOmhB,EAAc,EAAG3c,EAAM,EAAGkd,EAAM,CAAC,CAAC,IAAKC,EAAO,EAAGA,EAAO,EAAGA,IAAQ,CACzF,GAAI5D,GAAiB4D,GAAQ5B,EAAMviB,OAC/B,IAAK,IAAIokB,EAAW,EAAGC,EAAY,IAAK,CACpC,MAAMC,EAAOL,EAGb,GAFAA,EAAOH,EAAS9c,EAAKxE,GACrBwE,GAAOxE,EAAO,EACVyhB,IAASJ,EAAW,CACpBrhB,EAAOmhB,EAAc,EACrBO,EAAI1mB,OAASqmB,EAAY,EACzB,IAAK,IAAItlB,EAAI,EAAGA,EAAI2lB,EAAI1mB,OAAQe,IAC5B2lB,EAAI3lB,GAAKA,EAAIslB,EAAY,CAACtlB,GAAK,EAEvC,KACK,CACG0lB,GAAQC,EAAI1mB,OACZ0mB,EAAI/F,KAAK+F,EAAII,GAAMC,OAAOL,EAAII,GAAM,KAE/BA,IAAST,GACdK,EAAI/F,KAAK+F,EAAII,GAAMC,OAAOL,EAAID,GAAM,KAExC,IAAK,IAAI1lB,EAAI,EAAGA,EAAI2lB,EAAID,GAAMzmB,OAAQe,IAAK,CACvC,MAAM,EAAEujB,EAAC,EAAEC,EAAC,EAAEC,EAAC,EAAEmB,GAAMH,EAASkB,EAAID,GAAM1lB,IAC1C6kB,EAAM/W,KAAK3K,IAAI,CAACogB,EAAGC,EAAGC,EAAGmB,GAAI5C,GAAiB4D,GAAQ5B,EAAMtiB,MACxDugB,GAAe2D,GAAQE,EACtBD,GAA0B,EAAd7B,EAAMtiB,QACvBmkB,GAAY,CAChB,CACIF,EAAI1mB,SAAW,GAAKgF,GAAQA,EAAO,IACnCA,GAER,CACA,GAAI4hB,IAA2B,EAAd7B,EAAMtiB,OAAaokB,EAAY,KAC5CA,IACI9D,GAAiB4D,GAAQ3D,GAAe2D,GAAQE,GAAa9B,EAAMviB,QACnE,KAGZ,CAEJsiB,IAAmBV,EAAW5a,KAAO4a,EAAWvV,KAAK7O,OAAS,GAAI4kB,GAAc,GAAS,EAAGgB,EAAO,CAAEle,EAAGqd,EAAMjV,KAAMnI,EAAGod,EAAMzU,KAAO,CAAE7N,MAAOiiB,EAAIjiB,MAAOD,OAAQkiB,EAAIliB,QACxK,CACAuiB,EAAMa,MAAQA,EACdb,EAAMiC,aAAeC,kBAAkBrB,EAC3C,KACK,CACD,IAAK,IAAIa,EAAO,EAAGzhB,EAAOmhB,EAAc,EAAG3c,EAAM,EAAGkd,EAAM,CAAC,CAAC,IAAKE,GAAY,IAAK,CAC9E,MAAME,EAAOL,EAGb,GAFAA,EAAOH,EAAS9c,EAAKxE,GACrBwE,GAAOxE,EACHyhB,IAASJ,EAAW,CACpBrhB,EAAOmhB,EAAc,EACrBO,EAAI1mB,OAASqmB,EAAY,EACzB,IAAK,IAAItlB,EAAI,EAAGA,EAAI2lB,EAAI1mB,OAAQe,IAC5B2lB,EAAI3lB,GAAKA,EAAIslB,EAAY,CAACtlB,GAAK,EAEvC,KACK,CACD,GAAI0lB,IAASJ,EAAY,EACrB,MAEAI,GAAQC,EAAI1mB,OACZ0mB,EAAI/F,KAAK+F,EAAII,GAAMC,OAAOL,EAAII,GAAM,KAE/BA,IAAST,GACdK,EAAI/F,KAAK+F,EAAII,GAAMC,OAAOL,EAAID,GAAM,KAExC,IAAK,IAAI1lB,EAAI,EAAGA,EAAI2lB,EAAID,GAAMzmB,OAAQe,IAAK,CACvC,MAAM,EAAEujB,EAAC,EAAEC,EAAC,EAAEC,EAAC,EAAEmB,GAAMH,EAASkB,EAAID,GAAM1lB,IAC1C6kB,EAAM/W,KAAK3K,IAAI,CAACogB,EAAGC,EAAGC,EAAGmB,GAAKiB,GAAY,EAC9C,CACIF,EAAI1mB,QAAU,GAAKgF,GAAQA,EAAO,IAClCA,GAER,CACJ,CACA+f,EAAMa,MAAQA,EACdb,EAAMiC,aAAeC,kBAAkBrB,GACvCd,KAAoBV,EAAW5a,IAAM,GAAK4a,EAAWvV,KAAK7O,OAAQ4kB,GAAc,GAAS,EAAGG,EAAMa,MAAO,CAAEle,EAAGqd,EAAMjV,KAAMnI,EAAGod,EAAMzU,KAAO,CAAE7N,MAAOiiB,EAAIjiB,MAAOD,OAAQkiB,EAAIliB,QAC9K,CACJ,CAMkB0kB,CAAgB9C,EAAYM,EAAKC,EAAUC,EAAeC,EAAsBC,GACtF,MACJ,KAAK,SAvLb3hB,eAAmCihB,EAAYM,EAAKE,EAAeC,GAC/D,OAAQT,EAAWV,YACf,KAAK,IAAK,CACN,MAAMqB,EAAQL,EAAIM,OAAOJ,GAAc,IACvCR,EAAW5a,MACX,MAAMyb,EAAab,EAAWV,WAC9BqB,EAAMoC,YAA2B,IAAblC,KAAuB,EAC3CF,EAAMqC,gBAA+B,GAAbnC,KAAuB,EAC/CF,EAAMsC,mBAA0C,KAAP,EAAbpC,GAC5B,MAAMqC,EAAwC,KAAP,EAAbrC,GAC1BF,EAAM5X,UAAwC,GAA5BiX,EAAWT,eAC7B,MAAM4D,EAAoBnD,EAAWV,WACjC4D,GACAzC,EAAqB0C,GAEzBnD,EAAW5a,MACX,KACJ,CACA,KAAK,IAAK,CACN4a,EAAW5a,MACX,MAAMge,EAAuB,CACzBC,WAAYrD,EAAWhB,UAAU,GACjCsE,mBAAoBtD,EAAWhB,UAAU,GACzCvU,KAAMuV,EAAWN,oBAErBY,EAAIiD,sBAAsBhH,KAAK6G,GAC/B,KACJ,CACA,KAAK,IACD9C,EAAIkD,SAASjH,KAAK,CAACiE,GAAc,GAAQR,EAAWR,kBACpD,MAEJ,KAAK,EACD,GAAoC,IAAhCc,EAAIgB,iBAAiB1lB,OACrB,MAAM,IAAIkmB,UAAU,mDAExB9B,EAAW5a,MACXkb,EAAIM,OAAOJ,GAAc,IAAQiD,cAAgB,CAC7C/X,KAAMsU,EAAWT,eACjBrT,IAAK8T,EAAWT,eAChBlhB,MAAO2hB,EAAWT,eAClBnhB,OAAQ4hB,EAAWT,eACnBmE,SAAU,CACNrlB,MAAO2hB,EAAWT,eAClBnhB,OAAQ4hB,EAAWT,gBAEvBoE,gBAAiB3D,EAAWV,WAC5BsE,gBAAiB5D,EAAWV,WAC5BuE,KAAM7D,EAAWR,iBAErB,MAEJ,QACIQ,EAAWF,gBAGvB,CAgIkBgE,CAAoB9D,EAAYM,EAAKE,EAAeC,GAC1D,MACJ,QACI,MAAM,IAAIqB,UAAU,yBAE5B,OAAO,CACX,CC1MA,MAAMiC,GAAoB,uGAanBhlB,eAAeilB,GAAUxC,GAC5B,OAAO,IAAIyC,SAASC,IAChB1C,EAAM2C,SAAU,EAChB,MAAMC,EAAM,IAAIC,MAChB7C,EAAM8C,QAAUF,EAChBA,EAAIG,iBAAiB,QAAQ,KACzB/C,EAAM2C,SAAU,EAChBD,GAAS,IAEbE,EAAIG,iBAAiB,SAAS,KAC1B/C,EAAM8C,aAAUzoB,EAChB2lB,EAAMG,OAAQ,EACdH,EAAM2C,SAAU,GAChBK,EAAAA,EAAAA,MAAY7C,MAAM,GAAG8C,EAAAA,qBAA8BjD,EAAMnP,UACzD6R,GAAS,IAEbE,EAAIM,IAAMlD,EAAMnP,MAAM,GAE9B,CACOtT,eAAe4lB,GAAanD,GAC/B,GAAmB,QAAfA,EAAMtS,KAAV,CAIAsS,EAAM2C,SAAU,EAChB,IACI3C,EAAMoD,cD6KP7lB,eAAyB8lB,EAAQnE,EAAkBH,GACjDA,IACDA,GAAW,GACf,MAAMuE,QAAYC,MAAMF,GACxB,IAAKC,EAAIE,IAAqB,MAAfF,EAAI5b,OACf,MAAM,IAAI4Y,UAAU,kBAExB,MAAMmD,QAAeH,EAAII,cACnB5E,EAAM,CACRjiB,MAAO,EACPD,OAAQ,EACR+mB,UAAW,EACXC,SAAU,EACVC,iBAAkB,EAClBzE,OAAQ,GACRI,UAAU,EACVM,iBAAkB,GAClBgE,gBAAiB,IAAI7D,UAAU,EAAG,EAAG,CAAEC,WAAY,SACnD8B,SAAU,GACVD,sBAAuB,IACxBvD,EAAa,IAAInB,GAAW,IAAIE,kBAAkBkG,IACrD,GAAgC,WAA5BjF,EAAWhB,UAAU,GACrB,MAAM,IAAItf,MAAM,4BAEpB4gB,EAAIjiB,MAAQ2hB,EAAWT,eACvBe,EAAIliB,OAAS4hB,EAAWT,eACxB,MAAMsB,EAAab,EAAWV,WAAYiG,EAA+C,OAAV,IAAb1E,GAClEP,EAAI8E,UAAyB,IAAbvE,KAAuB,EACvCP,EAAIU,SAAgC,KAAP,EAAbH,GAChB,MAAM2E,EAAmB,GAAyB,GAAL,EAAb3E,GAAsB4E,EAAuBzF,EAAWV,WACxFgB,EAAI+E,iBAAmBrF,EAAWV,WACL,IAAzBgB,EAAI+E,mBACJ/E,EAAI+E,kBAAoB/E,EAAI+E,iBAAmB,IAAO,IAEtDE,IACAjF,EAAIgB,iBAAmBvB,GAAgBC,EAAYwF,IAEvD,MAAMF,EAAkB,MACpB,IACI,OAAO,IAAI7D,UAAUnB,EAAIjiB,MAAOiiB,EAAIliB,OAAQ,CAAEsjB,WAAY,QAC9D,CACA,MAAOC,GACH,GAAIA,aAAiBC,cAA+B,mBAAfD,EAAME,KACvC,OAAO,KAEX,MAAMF,CACV,CACH,EAVuB,GAWxB,GAAuB,MAAnB2D,EACA,MAAM,IAAI5lB,MAAM,8BAEpB,MAAM,EAAEwgB,EAAC,EAAEC,EAAC,EAAEC,GAAME,EAAIgB,iBAAiBmE,GACzCH,EAAgB7a,KAAK3K,IAAIylB,EAAuB,CAACrF,EAAGC,EAAGC,EAAG,KAAO,CAAC,EAAG,EAAG,EAAG,IAC3E,IAAK,IAAIzjB,EAAI,EAAGA,EAAI2oB,EAAgB7a,KAAK7O,OAAQe,GAAK,EAClD2oB,EAAgB7a,KAAKib,WAAW/oB,EAAG,EAAGA,GAE1C2jB,EAAIgF,gBAAkBA,EACtB,IAAIK,GAAc,EAAGC,GAAsB,EAAMzC,GAAqB,EACtE,MAAM0C,EAAiBC,IACfA,IACAF,GAAsB,GAEnBD,GAELlF,EAAwBsF,IACV,MAAZA,IACA5C,EAAoB4C,GAEjB5C,GAEX,IACI,GACQyC,IACAtF,EAAIM,OAAOrE,KAAK,CACZ7Q,KAAM,EACNQ,IAAK,EACL7N,MAAO,EACPD,OAAQ,EACR4kB,eAAgB,EAChBxB,MAAO,IAAIC,UAAU,EAAG,EAAG,CAAEC,WAAY,SACzC+B,cAAe,KACfR,oBAAoB,EACpBla,UAAW,EACXiY,UAAU,EACVG,gBAAiB,GACjBF,SAAU,EACV8B,WAAY,IAEhB4C,IACAxC,GAAqB,EACrByC,GAAsB,gBAEbvF,GAAWL,EAAYM,EAAKC,EAAUsF,EAAepF,EAAsBC,IAC5FJ,EAAIM,OAAOhlB,SACX,IAAK,MAAM+kB,KAASL,EAAIM,OAAQ,CAC5B,GAAID,EAAMsC,oBAA0C,IAApBtC,EAAM5X,UAAiB,CACnDuX,EAAI6E,UAAYa,IAChB,KACJ,CACA1F,EAAI6E,WAAaxE,EAAM5X,SAC3B,CACA,OAAOuX,CACX,CACA,MAAOqB,GACH,GAAIA,aAAiBG,UACjB,MAAM,IAAIpiB,MAAM,6BAA6BimB,MAAehE,EAAMsE,YAEtE,MAAMtE,CACV,CACJ,CC1R8BuE,CAAU1E,EAAMnP,QACtCmP,EAAM2E,aDmKP,SAA0B7F,GAC7B,IAAK,MAAM8F,KAAa9F,EAAIiD,sBACxB,GAAI6C,EAAU/C,WAAa+C,EAAU9C,qBAAuB,cAG5D,OAAO8C,EAAU3b,KAAK,IAAM2b,EAAU3b,KAAK,IAAM,GAErD,OAAO4b,GACX,CC3K6BC,CAAiB9E,EAAMoD,UAAY,EAC7B,IAAvBpD,EAAM2E,eACN3E,EAAM2E,aAAeH,IAE7B,CACA,MACIxE,EAAMG,OAAQ,CAClB,CACAH,EAAM2C,SAAU,CAZhB,YAFUH,GAAUxC,EAexB,CACOziB,eAAewnB,GAAiB/E,GACnC,GAAmB,QAAfA,EAAMtS,KAEN,kBADM8U,GAAUxC,GAGpBA,EAAM2C,SAAU,EAChB,MAAMqC,QAAiBzB,MAAMvD,EAAMnP,QAC9BmU,EAASxB,GAKVxD,EAAMiF,cAAgBD,EAAS3C,SAJ/BW,EAAAA,EAAAA,MAAY7C,MAAM,GAAG8C,EAAAA,sBACrBjD,EAAMG,OAAQ,GAKlBH,EAAM2C,SAAU,CACpB,CACO,SAASuC,GAAkBlF,EAAOQ,EAAW9hB,EAAOoC,GACvD,MAAMqkB,EAlEV,SAAyBC,EAAY1mB,EAAOkK,GACxC,MAAM,QAAEqc,GAAYG,EACpB,IAAKH,EACD,MAAO,GAEX,MAAMI,GAAazN,EAAAA,EAAAA,IAAgBlZ,EAAOkK,GAC1C,GAAIqc,EAAQxb,SAAS,QACjB,OAAOwb,EAAQ1mB,QAAQgkB,IAAmB,IAAM8C,IAEpD,MAAMC,EAAeL,EAAQM,QAAQ,KACrC,MAAO,GAAGN,EAAQO,UAAU,EAAGF,YAAuBD,KAAcJ,EAAQO,UAAUF,IAC1F,CAuD2BG,CAAgBzF,EAAOthB,EAAOoC,EAAS8H,SAASjK,OAAS,GAAI+mB,EAAW,CAC3FhnB,QACAogB,IAAK0B,EAAU1B,IACf7V,KAAM,IACC+W,EACHiF,QAASE,GAEbpoB,QAAQ,EACRuW,MAAOkN,EAAU3jB,MAAQ2jB,EAAU5jB,OACnC+oB,aAAcnF,EAAUmF,cAAgBnF,EAAUoF,cAClD/U,OAAQ2P,EAAU0C,KAEtB,OAAO,IAAIT,SAASC,IAChB,MAAMmD,EAAM,IAAIC,KAAK,CAACX,GAAiB,CAAEzX,KAAM,kBAAoBqY,EAASC,KAAOnlB,OAAOmlB,KAAOnlB,OAAOolB,WAAaplB,OAAQrE,EAAMupB,EAAOG,gBAAgBL,GAAMjD,EAAM,IAAIC,MAC1KD,EAAIG,iBAAiB,QAAQ,KACzB2C,EAAS3oB,QAAS,EAClB2oB,EAAS5C,QAAUF,EACnBF,EAAQgD,GACRK,EAAOI,gBAAgB3pB,EAAI,IAE/BomB,EAAIG,iBAAiB,SAASxlB,UAC1BwoB,EAAOI,gBAAgB3pB,GACvB,MAAM4pB,EAAO,IACNpG,EACHG,OAAO,EACPwC,SAAS,SAEPH,GAAU4D,GAChBV,EAAS3oB,QAAS,EAClB2oB,EAAS5C,QAAUsD,EAAKtD,QACxBJ,EAAQgD,EAAS,IAErB9C,EAAIM,IAAM1mB,CAAG,GAErB,CCrGO,MAAM6pB,GACT5qB,WAAAA,CAAYyE,GACRtE,KAAK0qB,eAAiB/oB,UAClB,IAAK3B,KAAK2T,QAAQiT,UACd,MAAM,IAAItkB,MAAM,GAAG+kB,EAAAA,wCAEjBrnB,KAAK2T,QAAQiT,UAAU,CACzB1D,IAAKsG,EAAWtG,IAChBuB,KAAM+E,EAAW/E,KACjBsF,aAAcP,EAAWO,cAAgBP,EAAWQ,gBAAiB,EACrE1C,IAAKkC,EAAWlC,KAClB,EAENtnB,KAAK2T,QAAUrP,CACnB,CACAqmB,QAAAA,CAASvG,GACApkB,KAAK2T,QAAQiX,SACd5qB,KAAK2T,QAAQiX,OAAS,IAE1B5qB,KAAK2T,QAAQiX,OAAOzL,KAAKiF,EAC7B,CACAxZ,IAAAA,CAAKC,EAAS3F,EAAUwD,EAAQsE,EAASzH,GACrC,MAAM6e,EAAQlf,EAASkf,MAAO8C,EAAU9C,GAAO8C,QAC/C,GAAK9C,EAAL,CAIA,GADAvZ,EAAQggB,YAAc7d,EAClBoX,EAAMlB,KAAOkB,EAAMoD,QAAS,CAC5B,MAAMsD,EAAkB,IAAIC,gBAAgB3G,EAAMoD,QAAQvmB,MAAOmjB,EAAMoD,QAAQxmB,QAASgqB,EAAmBF,EAAgBG,WAAW,MACtI,IAAKD,EACD,MAAM,IAAI1oB,MAAM,6CAEpB0oB,EAAiBE,sBAAwB,MACzCF,EAAiBG,uBAAwB,EACzCH,EAAiBI,UAAU,EAAG,EAAGN,EAAgB7pB,MAAO6pB,EAAgB9pB,aAC1CvC,IAA1ByG,EAAS6jB,eACT7jB,EAAS6jB,aAAe3E,EAAM2E,cAAgB,GAElD,IAAIR,EAAarjB,EAASmmB,UAAY,EACtC,MAAMrjB,EAAM,CAAE9B,EAA0B,IAAtBke,EAAMoD,QAAQvmB,MAAakF,EAA2B,IAAvBie,EAAMoD,QAAQxmB,QAAgBuiB,EAAQa,EAAMoD,QAAQhE,OAAO+E,GAI5G,QAHyB9pB,IAArByG,EAASomB,UACTpmB,EAASomB,QAAU,IAElB/H,EAAMiC,OACP,OAGJ,OADA3a,EAAQ0gB,MAAM7iB,EAAS0b,EAAMoD,QAAQvmB,MAAOyH,EAAS0b,EAAMoD,QAAQxmB,QAC3DuiB,EAAMqC,gBACV,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACDoF,EAAiBQ,UAAUjI,EAAMiC,OAAQjC,EAAMjV,KAAMiV,EAAMzU,KAC3DjE,EAAQ2gB,UAAUV,EAAiB9iB,EAAI9B,EAAG8B,EAAI7B,GAC9C6kB,EAAiBI,UAAU,EAAG,EAAGN,EAAgB7pB,MAAO6pB,EAAgB9pB,QACxE,MACJ,KAAK,EACDgqB,EAAiBQ,UAAUjI,EAAMiC,OAAQjC,EAAMjV,KAAMiV,EAAMzU,KAC3DjE,EAAQ2gB,UAAUV,EAAiB9iB,EAAI9B,EAAG8B,EAAI7B,GAC9C,MACJ,KAAK,EACD6kB,EAAiBQ,UAAUjI,EAAMiC,OAAQjC,EAAMjV,KAAMiV,EAAMzU,KAC3DjE,EAAQ2gB,UAAUV,EAAiB9iB,EAAI9B,EAAG8B,EAAI7B,GAC9C6kB,EAAiBI,UAAU,EAAG,EAAGN,EAAgB7pB,MAAO6pB,EAAgB9pB,QAC1B,IAA1CojB,EAAMoD,QAAQtD,iBAAiB1lB,OAC/BwsB,EAAiBS,aAAarH,EAAMoD,QAAQhE,OAAO,GAAGY,MAAOpc,EAAI9B,EAAIqd,EAAMjV,KAAMtG,EAAI7B,EAAIod,EAAMzU,KAG/Fkc,EAAiBS,aAAarH,EAAMoD,QAAQU,gBAAiBlgB,EAAI9B,EAAG8B,EAAI7B,GAE5E,MACJ,KAAK,EACD,CACI,MAAMulB,EAAoBV,EAAiBW,aAAa,EAAG,EAAGb,EAAgB7pB,MAAO6pB,EAAgB9pB,QACrGgqB,EAAiBQ,UAAUjI,EAAMiC,OAAQjC,EAAMjV,KAAMiV,EAAMzU,KAC3DjE,EAAQ2gB,UAAUV,EAAiB9iB,EAAI9B,EAAG8B,EAAI7B,GAC9C6kB,EAAiBI,UAAU,EAAG,EAAGN,EAAgB7pB,MAAO6pB,EAAgB9pB,QACxEgqB,EAAiBS,aAAaC,EAAmB,EAAG,EACxD,EAIR,GADAxmB,EAASomB,SAAW/lB,EAAMxC,MACtBmC,EAASomB,QAAU/H,EAAM5X,UAAW,CAEpC,GADAzG,EAASomB,SAAW/H,EAAM5X,YACpB4c,GAAcnE,EAAMoD,QAAQhE,OAAOhlB,OAAQ,CAC7C,KAAM0G,EAAS6jB,cAAgB,EAC3B,OAEJR,EAAa,EACbyC,EAAiBI,UAAU,EAAG,EAAGN,EAAgB7pB,MAAO6pB,EAAgB9pB,OAC5E,CACAkE,EAASmmB,SAAW9C,CACxB,CACA1d,EAAQ0gB,MAAMnH,EAAMoD,QAAQvmB,MAAQyH,EAAQ0b,EAAMoD,QAAQxmB,OAAS0H,EACvE,MACK,GAAIwe,EAAS,CACd,MAAMxP,EAAQ0M,EAAM1M,MAAO1P,EAAM,CAC7B9B,GAAIwC,EACJvC,GAAIuC,GAERmC,EAAQ2gB,UAAUtE,EAASlf,EAAI9B,EAAG8B,EAAI7B,EAAY,EAATuC,EAAsB,EAATA,EAAcgP,EACxE,CACA7M,EAAQggB,YAAc,CA9EtB,CA+EJ,CACA5f,aAAAA,GACI,OAAO,EACX,CACA,UAAM/K,CAAK+B,GACP,MAAMxB,EAAUwB,EAAUkR,cAC1B,GAAK1S,EAAQmrB,SAAY5rB,KAAK2T,QAAQiT,UAGtC,IAAK,MAAMhC,KAAankB,EAAQmrB,cACtB5rB,KAAK2T,QAAQiT,UAAUhC,EAErC,CACAiH,SAAAA,CAAU3mB,GACN,GAAuB,UAAnBA,EAAS4mB,OAAwC,WAAnB5mB,EAAS4mB,MACvC,OAEC9rB,KAAK2T,QAAQiX,SACd5qB,KAAK2T,QAAQiX,OAAS,IAE1B,MAAMhG,EAAY1f,EAASiG,UAAmBnL,KAAK2T,QAAQiX,OAAOmB,MAAM5U,GAAMA,EAAEsN,OAASG,EAAUH,MAAQtN,EAAElC,SAAW2P,EAAU0C,OAE9HtnB,KAAK0qB,eAAe9F,GAAWpjB,MAAK,KAChCxB,KAAK6rB,UAAU3mB,EAAS,GAGpC,CACAgG,YAAAA,CAAajJ,EAAWiD,GACpB,GAAuB,UAAnBA,EAAS4mB,OAAwC,WAAnB5mB,EAAS4mB,MACvC,OAEC9rB,KAAK2T,QAAQiX,SACd5qB,KAAK2T,QAAQiX,OAAS,IAE1B,MAAMA,EAAS5qB,KAAK2T,QAAQiX,OAAQhG,EAAY1f,EAASiG,UAAWrI,EAAQoC,EAASyU,eAAgByK,EAAQwG,EAAOmB,MAAM5U,GAAMA,EAAEsN,OAASG,EAAUH,MAAQtN,EAAElC,SAAW2P,EAAU0C,MACpL,IAAKlD,EACD,OAEJ,MAAM2F,EAAenF,EAAUmF,cAAgBnF,EAAUoF,eAAiB5F,EAAM2F,aAC5E3F,EAAM2C,QACN/S,YAAW,KACPhU,KAAKkL,aAAajJ,EAAWiD,EAAS,IAI9C,WACI,IAAI4kB,EAEAA,EADA1F,EAAMiF,SAAWvmB,QACAwmB,GAAkBlF,EAAOQ,EAAW9hB,EAAOoC,GAGjD,CACPpC,QACAuK,KAAM+W,EACN8C,QAAS9C,EAAM8C,QACfhE,IAAKkB,EAAMlB,IACXsE,QAASpD,EAAMoD,QACfuB,aAAc3E,EAAM2E,aACpB5nB,QAAQ,EACRuW,MAAOkN,EAAU3jB,OAAS2jB,EAAU5jB,OAAS4jB,EAAU3jB,MAAQ2jB,EAAU5jB,OAASojB,EAAM1M,OAAS,EACjGqS,aAAcA,EACd9U,OAAQ2P,EAAU0C,KAGrBwC,EAASpS,QACVoS,EAASpS,MAAQ,GAErB,MAAyF8R,EAAa,CAClGpF,MAAO0F,EACPkC,KAFSpH,EAAUoH,MAAQ9mB,EAAS8mB,KAGpCC,MAHkDrH,EAAUqH,OAAS/mB,EAAS+mB,OAKlF/mB,EAASkf,MAAQoF,EAAWpF,MAC5Blf,EAAS8mB,KAAOxC,EAAWwC,KAC3B9mB,EAAS+mB,MAAQzC,EAAWyC,KAC/B,EA9BD,EA+BJ,ECtLG,MAAMC,GACTrsB,WAAAA,GACIG,KAAKsnB,IAAM,GACXtnB,KAAKkjB,KAAM,CACf,CACAhhB,IAAAA,CAAKmL,GACIA,SAGY5O,IAAb4O,EAAK6V,MACLljB,KAAKkjB,IAAM7V,EAAK6V,UAEAzkB,IAAhB4O,EAAKrM,SACLhB,KAAKgB,OAASqM,EAAKrM,aAELvC,IAAd4O,EAAKoX,OACLzkB,KAAKykB,KAAOpX,EAAKoX,WAEKhmB,IAAtB4O,EAAK0c,eACL/pB,KAAK+pB,aAAe1c,EAAK0c,mBAEZtrB,IAAb4O,EAAKia,MACLtnB,KAAKsnB,IAAMja,EAAKia,UAED7oB,IAAf4O,EAAKpM,QACLjB,KAAKiB,MAAQoM,EAAKpM,OAE1B,EC1BG,MAAMkrB,GACTtsB,WAAAA,CAAYyE,GACRtE,KAAKa,GAAK,iBACVb,KAAK2T,QAAUrP,CACnB,CACA8nB,SAAAA,GACI,MAAO,CAAC,CACZ,CACAC,WAAAA,CAAY5rB,EAASwU,GACjB,IAAKA,IAAWA,EAAO2W,QACnB,OAECnrB,EAAQmrB,UACTnrB,EAAQmrB,QAAU,IAEtB,MAAMU,EAAiB7rB,EAAQmrB,QAC/B,IAAK,MAAM3V,KAAQhB,EAAO2W,QAAS,CAC/B,MAAMW,EAAWD,EAAeP,MAAM5U,GAAMA,EAAEsN,OAASxO,EAAKwO,MAAQtN,EAAEmQ,MAAQrR,EAAKqR,MACnF,GAAIiF,EACAA,EAASrqB,KAAK+T,OAEb,CACD,MAAM2V,EAAU,IAAIM,GACpBN,EAAQ1pB,KAAK+T,GACbqW,EAAenN,KAAKyM,EACxB,CACJ,CACJ,CACAY,WAAAA,GACI,OAAO,CACX,ECOG7qB,eAAe+oB,GAAepmB,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,IAlCpD,SAA8B+F,GACtBA,EAAOsiB,YAGXtiB,EAAOsiB,UAAYjlB,UACf,IAAK0L,EAAKoX,OAASpX,EAAKia,IACpB,MAAM,IAAIhlB,MAAM,GAAG+kB,EAAAA,+BAKvB,GAHK/iB,EAAOsmB,SACRtmB,EAAOsmB,OAAS,KAEhBtmB,EAAOsmB,OAAOmB,MAAM5U,GAAMA,EAAEsN,OAASpX,EAAKoX,MAAQtN,EAAElC,SAAW5H,EAAKia,MAGxE,IACI,MAAMlD,EAAQ,CACVlB,IAAK7V,EAAK6V,MAAO,EACjBuB,KAAMpX,EAAKoX,MAAQpX,EAAKia,IACxBrS,OAAQ5H,EAAKia,IACbxV,KAAMzE,EAAKia,IAAIsC,UAAUvc,EAAKia,IAAI9oB,OAAS,GAC3C+lB,OAAO,EACPwC,SAAS,EACTgD,aAAc1c,EAAK0c,aACnBrS,MAAOrK,EAAKpM,OAASoM,EAAKrM,OAASqM,EAAKpM,MAAQoM,EAAKrM,YAASvC,GAElE6F,EAAOsmB,OAAOzL,KAAKiF,GACnB,MAAMqI,EAAYpf,EAAK6V,IAAMqE,GAAela,EAAK0c,aAAeZ,GAAmBvC,SAC7E6F,EAAUrI,EACpB,CACA,MACI,MAAM,IAAI9hB,MAAM,GAAG+kB,EAAAA,MAAeha,EAAKoX,MAAQpX,EAAKia,gBACxD,GAER,CAEIoF,CAAqBpoB,GACrB,MAAMqoB,EAAY,IAAIR,GAAqB7nB,SACrCA,EAAOsoB,UAAUD,EAAWrrB,SAC5BgD,EAAOgN,SAAS,CAAC,QAAS,UAAW,IAAImZ,GAAYnmB,GAAShD,EACxE,C,eC1CO,MAAMurB,WAAkBC,GAAAA,GAC3BjtB,WAAAA,GACIE,QACAC,KAAKmN,MAAO,CAChB,CACAjL,IAAAA,CAAKmL,GACIA,IAGLtN,MAAMmC,KAAKmL,QACO5O,IAAd4O,EAAKF,OACLnN,KAAKmN,KAAOE,EAAKF,MAEzB,ECbG,MAAM4f,WAAqBD,GAAAA,GAC9BjtB,WAAAA,GACIE,QACAC,KAAKgtB,OAAOC,aAAe,KAC3BjtB,KAAKmN,MAAO,CAChB,CACAjL,IAAAA,CAAKmL,GACIA,IAGLtN,MAAMmC,KAAKmL,QACO5O,IAAd4O,EAAKF,OACLnN,KAAKmN,KAAOE,EAAKF,MAEzB,ECbG,MAAM+f,GACTrtB,WAAAA,GACIG,KAAKsS,MAAQ,EACbtS,KAAKmtB,MAAQ,IAAIN,GACjB7sB,KAAKgS,SAAW,IAAI+a,EACxB,CACA7qB,IAAAA,CAAKmL,GACIA,SAGc5O,IAAf4O,EAAKiF,QACLtS,KAAKsS,MAAQjF,EAAKiF,OAEtBtS,KAAKmtB,MAAMjrB,KAAKmL,EAAK8f,OACrBntB,KAAKgS,SAAS9P,KAAKmL,EAAK2E,UAC5B,ECfG,MAAMob,GACTvtB,WAAAA,CAAYoC,GACRjC,KAAKiC,UAAYA,CACrB,CACA/B,IAAAA,CAAKgF,GACD,MAAMjD,EAAYjC,KAAKiC,UAAgDorB,EAAlBnoB,EAASzE,QAAwC6sB,KACjGD,IAGLnoB,EAASooB,KAAO,CACZH,MAAOlrB,EAAUoG,OAAOe,cAChBhB,EAAAA,EAAAA,IAAcilB,EAAYF,MAAMpqB,QAAUsqB,EAAYF,MAAMhgB,KAAO,GAAI1C,EAAAA,EAAAA,OACvExI,EAAUoG,OAAOe,aACjB,IACF,EACNuC,UAAW,EACXqG,SAAU/P,EAAUoG,OAAOe,cACnBhB,EAAAA,EAAAA,IAAcilB,EAAYrb,SAASjP,QAAUsqB,EAAYrb,SAAS7E,KAAO,GAAI1C,EAAAA,EAAAA,OAC7ExI,EAAUoG,OAAOe,aACjB,IACF,EACNsC,KAAM,EACN4G,MAAO+a,EAAY/a,OAEnBpN,EAASooB,KAAKtb,UAAY,IAC1B9M,EAASooB,KAAKtb,UAAY,GAE1B9M,EAASooB,KAAKhb,OAAS,IACvBpN,EAASooB,KAAKhb,OAAS,GAEvBpN,EAASooB,OACTpoB,EAASyH,SAAWzH,EAASooB,KAAKH,MAAQ,GAElD,CACAxkB,SAAAA,CAAUzD,GACN,OAAQA,EAAS0D,SACrB,CACAyjB,WAAAA,CAAY5rB,GACHA,EAAQ6sB,OACT7sB,EAAQ6sB,KAAO,IAAIJ,IACtB,QAAApY,EAAAvW,UAAAC,OAHmBuW,EAAO,IAAA7V,MAAA4V,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAPD,EAAOC,EAAA,GAAAzW,UAAAyW,GAI3B,IAAK,MAAMC,KAAUF,EACjBtU,EAAQ6sB,KAAKprB,KAAK+S,GAAQqY,KAElC,CACA1gB,MAAAA,CAAO1H,EAAUK,GACb,IAAKvF,KAAK2I,UAAUzD,KAAcA,EAASooB,KACvC,OAEJ,MAAMA,EAAOpoB,EAASooB,KACtB,IAAIC,GAAc,EAClB,GAAIroB,EAASyH,SAAU,CAEnB,GADA2gB,EAAK3hB,WAAapG,EAAMxC,QACpBuqB,EAAK3hB,WAAazG,EAASooB,KAAKH,OAOhC,OANAI,GAAc,EACdroB,EAASyH,UAAW,EACpB2gB,EAAK3hB,UAAY,EACjB2hB,EAAK5hB,KAAO,CAKpB,CACA,IAAuB,IAAnB4hB,EAAKtb,SACL,OAEJ,GAAI9M,EAASyH,SACT,OAQJ,GANI4gB,EACAD,EAAK5hB,KAAO,EAGZ4hB,EAAK5hB,MAAQnG,EAAMxC,MAEnBuqB,EAAK5hB,KAAO4hB,EAAKtb,SACjB,OAMJ,GAJAsb,EAAK5hB,KAAO,EACRxG,EAASooB,KAAKhb,MAAQ,GACtBpN,EAASooB,KAAKhb,QAEU,IAAxBpN,EAASooB,KAAKhb,MAEd,YADApN,EAAS9E,UAGb,MAAMgO,EAAapO,KAAKiC,UAAU8F,OAAOvE,KAAMgqB,GAAaxO,EAAAA,EAAAA,IAAc,EAAG5Q,EAAWnN,OAAQwsB,GAAczO,EAAAA,EAAAA,IAAc,EAAG5Q,EAAWnN,OAC1IiE,EAASkC,SAASlB,GAAI2F,EAAAA,EAAAA,IAAc2hB,GACpCtoB,EAASkC,SAASjB,GAAI0F,EAAAA,EAAAA,IAAc4hB,GACpCvoB,EAASyH,UAAW,EACpB2gB,EAAK3hB,UAAY,EACjB2hB,EAAK5hB,KAAO,EACZxG,EAASkI,QACT,MAAMigB,EAAcnoB,EAASzE,QAAQ6sB,KACjCD,IACAC,EAAKH,MAAiD,KAAzC/kB,EAAAA,EAAAA,IAAcilB,EAAYF,MAAMpqB,OAC7CuqB,EAAKtb,SAAuD,KAA5C5J,EAAAA,EAAAA,IAAcilB,EAAYrb,SAASjP,OAE3D,ECpGG,MAAM2qB,GACT9iB,IAAAA,CAAKC,EAAS3F,EAAUwD,GACpB,MAAMyC,EAAYjG,EAASiG,UAC3BN,EAAQ8iB,QAAQjlB,EAAS,EAAG,GAC5BmC,EAAQ+iB,OAAOllB,EAAS,EAAG,GAC3BmC,EAAQgjB,QAAU1iB,GAAW2iB,KAAO,MACxC,CACA7iB,aAAAA,GACI,OAAO,CACX,ECRG,MAAM8iB,GACT7tB,IAAAA,GACA,CACAyI,SAAAA,CAAUzD,GACN,QAAS8oB,EAAAA,EAAAA,QACJ9oB,EAAS0D,WACV1D,EAASjD,UAAUkR,cAAcV,cAAc4B,OAAOE,QAAQ0Z,SAASprB,MAC/E,CACAO,IAAAA,CAAK8B,GACD,MAAMjD,EAAYiD,EAASjD,UAA8CisB,EAAzBjsB,EAAUkR,cAAyCV,cAAc4B,OAAOE,QAAQ0Z,SAChI,IAAID,EAAAA,EAAAA,QAAYE,EAAgBrrB,OAC5B,OAEJ,MAAMsrB,EAAgBD,EAAgBtT,MAAOpI,EAAWvQ,EAAUwQ,cAAcC,MAAMtL,SACtF,IAAKoL,EACD,OAEJ,MAAMpE,EAAanM,EAAU8F,OAAOvE,KAAM4qB,EACnChgB,EAAWnN,MAAQ,EADgBmtB,EAEnChgB,EAAWpN,OAAS,EACxBqtB,EAAiBH,EAAgBI,OAAQ7nB,EAASvB,EAASsE,YAAc2kB,EAAeI,GACnF/b,EAAStM,EAAIkoB,GAAkB3nB,EADoD8nB,GAEnF/b,EAASrM,EAAIioB,GAAkB3nB,GACpC,OAAEmF,GAAW1G,EAChB0G,EAAO1F,IAAMqoB,EAAmB3iB,EAAO1F,GAAKmoB,EAC5CziB,EAAOzF,IAAMooB,EAAmB3iB,EAAOzF,GAAKkoB,CAChD,EC3BG,MAAMG,GACT3uB,WAAAA,CAAYoC,GACRjC,KAAKiC,UAAYA,EACjBjC,KAAK8R,KAAO,WAChB,ECHG,MAAMI,WAAkBsc,GAC3B3uB,WAAAA,CAAYoC,GACRlC,MAAMkC,EACV,CACAgS,KAAAA,GACA,CACA/T,IAAAA,GACA,CACA,cAAMgU,CAASiH,GACX,MAAMlZ,EAAYjC,KAAKiC,UAAWgB,EAAWkY,EAAG9S,OAAOomB,iBAAmBxsB,EAAUoG,OAAOomB,gBAAiBpS,EAAOlB,EAAGlT,cAAemL,EAAQnR,EAAUG,UAAUiR,SAAS4E,YAAYoE,EAAMpZ,GAC5L,IAAK,MAAMmY,KAAMhI,EAAO,CACpB,GAAI+H,IAAOC,IAAOA,EAAG3a,QAAQ2C,KAAKgP,QAAQvP,QAAUuY,EAAGxS,WAAawS,EAAGzO,SACnE,SAEJ,MAAM2P,EAAOlB,EAAGnT,eAAe,GAAE2B,EAAE,GAAEC,IAAOC,EAAAA,EAAAA,IAAauS,EAAMC,GAAOoS,EAASvT,EAAG1a,QAAQ2C,KAAKgP,QAAQsc,OAAQC,EAAK/kB,GAAiB,IAAX8kB,EAAOxoB,GAAW0oB,EAAK/kB,GAAiB,IAAX6kB,EAAOvoB,GAAW0oB,EAAWzT,EAAG5X,KAAKT,MAAQoY,EAAG3X,KAAKT,MAAO+rB,EAAW,EAAID,EAClO1T,EAAGpV,SAASG,GAAKyoB,EAAKE,EACtB1T,EAAGpV,SAASI,GAAKyoB,EAAKC,EACtBzT,EAAGrV,SAASG,GAAKyoB,EAAKG,EACtB1T,EAAGrV,SAASI,GAAKyoB,EAAKE,CAC1B,CACJ,CACAnmB,SAAAA,CAAUzD,GACN,OAAOA,EAASzE,QAAQ2C,KAAKgP,QAAQvP,MACzC,CACAuK,KAAAA,GACA,ECzBJ,SAAS2hB,GAAa5T,EAAI6T,EAAI5T,EAAI6T,EAAI1pB,EAAO+C,GACzC,MAAM7B,GAASR,EAAAA,EAAAA,IAAOkV,EAAG1a,QAAQyuB,WAAWC,OAAO9rB,MAAQkC,EAAMkB,OAAU,GAAI,EAAGwoB,GAClF9T,EAAG3X,KAAKT,OAAS0D,EAAS,EAC1B2U,EAAG5X,KAAKT,OAAS0D,EACbwoB,GAAM3mB,IACN8S,EAAG5X,KAAKT,MAAQ,EAChBqY,EAAGhb,UAEX,CCRA,MAAMgvB,GAAkB9b,SACQ7U,IAAxB6U,EAAE+b,oBACF/b,EAAE+b,mBAAoBjnB,EAAAA,EAAAA,IAAckL,EAAE7S,QAAQyuB,WAAW7pB,WAEzDiO,EAAEvN,SAASvH,OAAS8U,EAAE+b,oBACtB/b,EAAEvN,SAASvH,OAAS8U,EAAE+b,kBAC1B,EAEG,SAAS3gB,GAAOyM,EAAIC,IACvB/F,EAAAA,EAAAA,KAAaC,EAAAA,EAAAA,IAA6B6F,IAAK7F,EAAAA,EAAAA,IAA6B8F,IAC5EgU,GAAejU,GACfiU,GAAehU,EACnB,CCVO,SAASkU,GAAiBnU,EAAIC,EAAI7V,EAAO+C,GAC5C,OAAQ6S,EAAG1a,QAAQyuB,WAAWrb,MAC1B,IAAK,UFKN,SAAgBsH,EAAIC,EAAI7V,EAAO+C,GAClC,MAAM0mB,EAAK7T,EAAG3R,YAAaylB,EAAK7T,EAAG5R,iBACxB/K,IAAPuwB,QAA2BvwB,IAAPwwB,EACpB9T,EAAG/a,eAES3B,IAAPuwB,QAA2BvwB,IAAPwwB,EACzB7T,EAAGhb,eAES3B,IAAPuwB,QAA2BvwB,IAAPwwB,IACrBD,GAAMC,EACNF,GAAa5T,EAAI6T,EAAI5T,EAAI6T,EAAI1pB,EAAO+C,GAGpCymB,GAAa3T,EAAI6T,EAAI9T,EAAI6T,EAAIzpB,EAAO+C,GAGhD,CEpBY6mB,CAAOhU,EAAIC,EAAI7V,EAAO+C,GACtB,MAEJ,IAAK,SACDoG,GAAOyM,EAAIC,GACX,MAEJ,IAAK,WCZN,SAAiBD,EAAIC,GACnBD,EAAGoU,aAAgBnU,EAAGmU,aACvB7gB,GAAOyM,EAAIC,QAEQ3c,IAAnB0c,EAAG3R,kBAAgD/K,IAAnB2c,EAAG5R,YACnC2R,EAAG/a,eAEqB3B,IAAnB0c,EAAG3R,kBAAgD/K,IAAnB2c,EAAG5R,YACxC4R,EAAGhb,eAEqB3B,IAAnB0c,EAAG3R,kBAAgD/K,IAAnB2c,EAAG5R,cACxB2R,EAAG3R,aAAe4R,EAAG5R,YAAc4R,EAAKD,GAChD/a,SAEhB,CDDYA,CAAQ+a,EAAIC,GAIxB,CEhBO,MAAMoU,WAAiBhB,GAC1B3uB,WAAAA,CAAYoC,GACRlC,MAAMkC,EACV,CACAgS,KAAAA,GACA,CACA/T,IAAAA,GACA,CACA,cAAMgU,CAASiH,EAAI5V,GACf,GAAI4V,EAAGvS,WAAauS,EAAGxO,SACnB,OAEJ,MAAM1K,EAAYjC,KAAKiC,UAAWoa,EAAOlB,EAAGlT,cAAewnB,EAAUtU,EAAG3R,YAAa4J,EAAQnR,EAAUG,UAAUiR,SAAS4E,YAAYoE,EAAgB,EAAVoT,GAC5I,IAAK,MAAMrU,KAAMhI,EAAO,CACpB,GAAI+H,IAAOC,IACNA,EAAG3a,QAAQyuB,WAAWrsB,QACvBsY,EAAG1a,QAAQyuB,WAAWrb,OAASuH,EAAG3a,QAAQyuB,WAAWrb,MACrDuH,EAAGxS,WACHwS,EAAGzO,SACH,SAEJ,MAAM2P,EAAOlB,EAAGnT,cAAeynB,EAAUtU,EAAG5R,YAC5C,GAAIlC,KAAK0C,IAAI1C,KAAKqoB,MAAMtT,EAAKuT,GAAKtoB,KAAKqoB,MAAMrT,EAAKsT,IAAMH,EAAUC,EAC9D,UAESxnB,EAAAA,EAAAA,IAAYmU,EAAMC,GAAemT,EAAUC,GAIxDJ,GAAiBnU,EAAIC,EAAI7V,EAAOtD,EAAUoG,OAAOC,WACrD,CACJ,CACAK,SAAAA,CAAUzD,GACN,OAAOA,EAASzE,QAAQyuB,WAAWrsB,MACvC,CACAuK,KAAAA,GACA,ECrCG,MAAMyiB,WAAmB9c,EAAAA,EAC5BlT,WAAAA,CAAYqG,EAAGC,EAAGuC,EAAQ0F,GACtBrO,MAAMmG,EAAGC,EAAGuC,GACZ1I,KAAKoO,WAAaA,EAClBpO,KAAKoO,WAAa,IAAKA,EAC3B,CACAsM,QAAAA,CAASoV,GACL,MAAM,MAAE7uB,EAAK,OAAED,GAAWhB,KAAKoO,YACzB,EAAElI,EAAC,EAAEC,GAAM2pB,EACjB,OAAQ/vB,MAAM2a,SAASoV,IACnB/vB,MAAM2a,SAAS,CAAExU,EAAGA,EAAIjF,EAAOkF,OAC/BpG,MAAM2a,SAAS,CAAExU,EAAGA,EAAIjF,EAAOkF,EAAGA,EAAInF,KACtCjB,MAAM2a,SAAS,CAAExU,IAAGC,EAAGA,EAAInF,GACnC,CACA+uB,UAAAA,CAAW1P,GACP,GAAItgB,MAAMgwB,WAAW1P,GACjB,OAAO,EAEX,MAAM2P,EAAO3P,EAAO4P,EAAS5P,EAAOhQ,EAAS,CACzCnK,EAAGma,EAAMjZ,SAASlB,EAAIlG,KAAKoO,WAAWnN,MACtCkF,EAAGka,EAAMjZ,SAASjB,EAAInG,KAAKoO,WAAWpN,QAE1C,QAAsBvC,IAAlBwxB,EAAOvnB,OAAsB,CAC7B,MAAMwnB,EAAe,IAAInd,EAAAA,EAAO1C,EAAOnK,EAAGmK,EAAOlK,EAAmB,EAAhB8pB,EAAOvnB,QAC3D,OAAO3I,MAAMgwB,WAAWG,EAC5B,CACK,QAAkBzxB,IAAduxB,EAAKxsB,KAAoB,CAC9B,MAAM2sB,EAAS,IAAI3a,EAAAA,EAAUnF,EAAOnK,EAAGmK,EAAOlK,EAAqB,EAAlB6pB,EAAKxsB,KAAKvC,MAA8B,EAAnB+uB,EAAKxsB,KAAKxC,QAChF,OAAOjB,MAAMgwB,WAAWI,EAC5B,CACA,OAAO,CACX,EC/BG,MAAMC,GACTvwB,WAAAA,GACIG,KAAKqwB,KAAO,EACZrwB,KAAK8C,MAAQ,IAAIiU,EAAAA,EACjB/W,KAAK8C,MAAMC,MAAQ,OACnB/C,KAAK6C,QAAS,CAClB,CACAX,IAAAA,CAAKmL,GACIA,SAGa5O,IAAd4O,EAAKgjB,OACLrwB,KAAKqwB,KAAOhjB,EAAKgjB,MAErBrwB,KAAK8C,MAAQiU,EAAAA,EAAajH,OAAO9P,KAAK8C,MAAOuK,EAAKvK,YAC9BrE,IAAhB4O,EAAKxK,SACL7C,KAAK6C,OAASwK,EAAKxK,QAE3B,EClBG,MAAMytB,GACTzwB,WAAAA,GACIG,KAAK6C,QAAS,EACd7C,KAAKuwB,UAAY,CACrB,CACAruB,IAAAA,CAAKmL,GACIA,SAGc5O,IAAf4O,EAAKvK,QACL9C,KAAK8C,MAAQiU,EAAAA,EAAajH,OAAO9P,KAAK8C,MAAOuK,EAAKvK,aAElCrE,IAAhB4O,EAAKxK,SACL7C,KAAK6C,OAASwK,EAAKxK,aAEApE,IAAnB4O,EAAKkjB,YACLvwB,KAAKuwB,UAAYljB,EAAKkjB,gBAEL9xB,IAAjB4O,EAAKL,UACLhN,KAAKgN,QAAUK,EAAKL,SAE5B,ECnBG,MAAMwjB,GACT3wB,WAAAA,GACIG,KAAKud,OAAQ,EACbvd,KAAK8C,MAAQ,IAAIiU,EAAAA,EACjB/W,KAAK8C,MAAMC,MAAQ,OACnB/C,KAAKwd,SAAU,EACfxd,KAAKiD,SAAW,IAChBjD,KAAK6C,QAAS,EACd7C,KAAKuwB,UAAY,EACjBvwB,KAAKgN,QAAU,EACfhN,KAAKywB,OAAS,IAAIL,GAClBpwB,KAAK0wB,UAAY,IAAIJ,GACrBtwB,KAAKiB,MAAQ,EACbjB,KAAKoQ,MAAO,CAChB,CACAlO,IAAAA,CAAKmL,GACIA,SAGW5O,IAAZ4O,EAAKxM,KACLb,KAAKa,GAAKwM,EAAKxM,SAEApC,IAAf4O,EAAKkQ,QACLvd,KAAKud,MAAQlQ,EAAKkQ,OAEtBvd,KAAK8C,MAAQiU,EAAAA,EAAajH,OAAO9P,KAAK8C,MAAOuK,EAAKvK,YAC7BrE,IAAjB4O,EAAKmQ,UACLxd,KAAKwd,QAAUnQ,EAAKmQ,cAEF/e,IAAlB4O,EAAKpK,WACLjD,KAAKiD,SAAWoK,EAAKpK,eAELxE,IAAhB4O,EAAKxK,SACL7C,KAAK6C,OAASwK,EAAKxK,aAEApE,IAAnB4O,EAAKkjB,YACLvwB,KAAKuwB,UAAYljB,EAAKkjB,gBAEL9xB,IAAjB4O,EAAKL,UACLhN,KAAKgN,QAAUK,EAAKL,SAExBhN,KAAKywB,OAAOvuB,KAAKmL,EAAKojB,QACtBzwB,KAAK0wB,UAAUxuB,KAAKmL,EAAKqjB,gBACNjyB,IAAf4O,EAAKpM,QACLjB,KAAKiB,MAAQoM,EAAKpM,YAEJxC,IAAd4O,EAAK+C,OACLpQ,KAAKoQ,KAAO/C,EAAK+C,MAEzB,ECjDJ,SAASugB,GAAgBtU,EAAMC,EAAMsU,EAAaxiB,EAAYgC,GAC1D,MAAM,GAAExG,EAAE,GAAEC,EAAE,SAAE5G,IAAa6G,EAAAA,EAAAA,IAAauS,EAAMC,GAChD,IAAKlM,GAAQnN,GAAY2tB,EACrB,OAAO3tB,EAEX,MAAM4tB,EAAW,CACb3qB,EAAGoB,KAAK0C,IAAIJ,GACZzD,EAAGmB,KAAK0C,IAAIH,IACbinB,EACIxpB,KAAK7D,IAAIotB,EAAS3qB,EAAGkI,EAAWnN,MAAQ4vB,EAAS3qB,GADrD4qB,EAEIxpB,KAAK7D,IAAIotB,EAAS1qB,EAAGiI,EAAWpN,OAAS6vB,EAAS1qB,GAEzD,OAAOmB,KAAKypB,KAAKD,GAAmB,EAAIA,GAAmB,EAC/D,CACO,MAAME,WAAexC,GACxB3uB,WAAAA,CAAYoC,GACRlC,MAAMkC,GACNjC,KAAKixB,UAAa9V,IACd,IAAKA,EAAG1a,QAAQuC,MACZ,OAEJ,MAAMf,EAAYjC,KAAKkxB,cAAe3S,EAAepD,EAAG1a,QAAQuC,MAChE,IAAImuB,OAAgC1yB,IAApB8f,EAAa1d,GACvBoB,EAAUG,UAAUgvB,WACpBnvB,EAAUG,UAAUivB,YAAYC,IAAI/S,EAAa1d,IACvD,GAAIswB,EACA,OAEJ,MAAM9S,EAAWE,EAAazb,MAC9BquB,GAAY3S,EAAAA,EAAAA,IAAmBH,EAAUE,EAAahB,MAAOgB,EAAaf,cAClD/e,IAApB8f,EAAa1d,GACboB,EAAUG,UAAUgvB,WAAaD,EAGjClvB,EAAUG,UAAUivB,YAAY3uB,IAAI6b,EAAa1d,GAAIswB,EACzD,EAEJnxB,KAAKkxB,cAAgBjvB,CACzB,CACAgS,KAAAA,GACA,CACA/T,IAAAA,GACIF,KAAKkxB,cAAc9uB,UAAUgvB,gBAAa3yB,EAC1CuB,KAAKkxB,cAAc9uB,UAAUivB,YAAc,IAAIE,GACnD,CACA,cAAMrd,CAASiH,GACX,IAAKA,EAAG1a,QAAQuC,MACZ,OAEJmY,EAAGnY,MAAQ,GACX,MAAMqZ,EAAOlB,EAAGlT,cAAehG,EAAYjC,KAAKiC,UAAWmM,EAAanM,EAAU8F,OAAOvE,KACzF,GAAI6Y,EAAKnW,EAAI,GAAKmW,EAAKlW,EAAI,GAAKkW,EAAKnW,EAAIkI,EAAWnN,OAASob,EAAKlW,EAAIiI,EAAWpN,OAC7E,OAEJ,MAAMwwB,EAAWrW,EAAG1a,QAAQuC,MAAO+W,EAAayX,EAASxkB,QAAS4jB,EAAczV,EAAG9S,OAAOopB,eAAiB,EAAGrhB,EAAOohB,EAASphB,KAAMiQ,EAAQjQ,EACtI,IAAIyf,GAAWxT,EAAKnW,EAAGmW,EAAKlW,EAAGyqB,EAAaxiB,GAC5C,IAAI2E,EAAAA,EAAOsJ,EAAKnW,EAAGmW,EAAKlW,EAAGyqB,GAAcxd,EAAQnR,EAAUG,UAAUiR,SAASD,MAAMiN,GAC1F,IAAK,MAAMjF,KAAMhI,EAAO,CACpB,MAAMse,EAAWtW,EAAG3a,QAAQuC,MAC5B,GAAImY,IAAOC,IACNsW,GAAU7uB,QACX2uB,EAAS3wB,KAAO6wB,EAAS7wB,IACzBua,EAAGzO,UACHyO,EAAGxS,YACFwS,EAAGpY,OACJmY,EAAGnY,MAAM2uB,MAAMxa,GAAMA,EAAEya,cAAgBxW,KACvCA,EAAGpY,MAAM2uB,MAAMxa,GAAMA,EAAEya,cAAgBzW,IACvC,SAEJ,MAAMmB,EAAOlB,EAAGnT,cAChB,GAAIqU,EAAKpW,EAAI,GAAKoW,EAAKnW,EAAI,GAAKmW,EAAKpW,EAAIkI,EAAWnN,OAASqb,EAAKnW,EAAIiI,EAAWpN,OAC7E,SAEJ,MAAMiC,EAAW0tB,GAAgBtU,EAAMC,EAAMsU,EAAaxiB,EAAYgC,GAAQshB,EAASthB,MACvF,GAAInN,EAAW2tB,EACX,SAEJ,MAAMxS,GAAe,EAAInb,EAAW2tB,GAAe7W,EACnD/Z,KAAKixB,UAAU9V,GACfA,EAAGnY,MAAMmc,KAAK,CACVyS,YAAaxW,EACbpO,QAASoR,GAEjB,CACJ,CACAzV,SAAAA,CAAUzD,GACN,QAASA,EAASzE,QAAQuC,OAAOH,MACrC,CACAgvB,oBAAAA,CAAqBpxB,GACZA,EAAQuC,QACTvC,EAAQuC,MAAQ,IAAIwtB,IACvB,QAAA1b,EAAAvW,UAAAC,OAH4BuW,EAAO,IAAA7V,MAAA4V,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAPD,EAAOC,EAAA,GAAAzW,UAAAyW,GAIpC,IAAK,MAAMC,KAAUF,EACjBtU,EAAQuC,MAAMd,KAAK+S,GAAQjS,OAASiS,GAAQ8F,YAAc9F,GAAQ+F,YAE1E,CACA5N,KAAAA,GACA,EChBG,SAAS0kB,GAAiB1vB,EAAW2vB,GACxC,MAAMjzB,IALiBoY,EAKA9U,EAAUyB,KAAKsT,GAAMA,EAAEtW,MAJ1CmxB,MAAK,CAAC7N,EAAGnB,IAAMmB,EAAInB,IAChB9L,EAAI+a,KAAK,MAFb,IAAoB/a,EAMvB,IAAIwQ,EAAMqK,EAAWT,IAAIxyB,GAKzB,YAJYL,IAARipB,IACAA,GAAMjd,EAAAA,EAAAA,MACNsnB,EAAWrvB,IAAI5D,EAAK4oB,IAEjBA,CACX,CC1FO,MAAMwK,GACTryB,WAAAA,CAAYoC,GACRjC,KAAKiC,UAAYA,EACjBjC,KAAKmyB,cAAgB,CAAChX,EAAIiX,KACtB,MAAMC,EAAiBlX,EAAG1a,QAAQuC,MAClC,IAAKqvB,GAAgBxvB,OACjB,OAEJ,MAAMZ,EAAYjC,KAAKiC,UAAWxB,EAAUwB,EAAUkR,cAAeiI,EAAKgX,EAAKR,YAAavV,EAAOlB,EAAGlT,cAAeqU,EAAOlB,EAAGnT,cAC/H,IAAI+E,EAAUolB,EAAKplB,QACnB/K,EAAU8F,OAAO6C,MAAMsQ,IACnB,IAAI2C,EACJ,MAAMyU,EAAUnX,EAAG1a,QAAQ6xB,SAASC,MACpC,GAAID,GAASzvB,OAAQ,CACjB,MAAM2vB,EAAcF,EAAQ/B,UAAWkC,GAAaC,EAAAA,EAAAA,IAAgBJ,EAAQxvB,QAAoB2H,EAAAA,EAAAA,MAAc+nB,GAC7FC,IACb5U,EAAY4U,EACZzlB,GAAU5E,EAAAA,EAAAA,IAAckqB,EAAQtlB,SAExC,CACA,IAAK6Q,EAAW,CACZ,MAAMsT,OAAkC1yB,IAAtB4zB,EAAexxB,GAC3BoB,EAAUG,UAAUivB,YAAYC,IAAIe,EAAexxB,IACnDoB,EAAUG,UAAUgvB,WAC1BvT,GAAYY,EAAAA,EAAAA,IAAatD,EAAIC,EAAI+V,EACrC,CACA,IAAKtT,EACD,OAEJ,MAAM5c,EAAQka,EAAG9S,OAAOyU,YAAc,EAAG5S,EAAciR,EAAG9S,OAAOopB,eAAiB,GAAG,eAAEkB,GAAmBlyB,GD9BnH,SAAsBC,GACzB,IAAIkyB,GAAQ,EACZ,MAAM,MAAErW,EAAK,IAAEC,EAAG,YAAEtS,EAAW,QAAEW,EAAO,WAAEuD,EAAU,MAAEnN,EAAK,eAAE0xB,EAAc,UAAE9U,EAAS,QAAE7Q,EAAO,MAAEhK,GAAUtC,EAC3G,IAAIwH,EAAAA,EAAAA,IAAYqU,EAAOC,IAAQtS,GAC3BuS,EAAAA,EAAAA,IAAS5R,EAAS0R,EAAOC,GACzBoW,GAAQ,OAEP,GAAI5vB,EAAMoN,KAAM,CACjB,IAAIyiB,EACAC,EACJ,MAAMC,EAAQ,CACV7sB,EAAGsW,EAAItW,EAAIkI,EAAWnN,MACtBkF,EAAGqW,EAAIrW,GAEL6sB,GAAKlpB,EAAAA,EAAAA,IAAayS,EAAOwW,GAC/B,GAAIC,EAAG/vB,UAAYiH,EAAa,CAC5B,MAAM+oB,EAAK1W,EAAMpW,EAAK6sB,EAAGnpB,GAAKmpB,EAAGppB,GAAM2S,EAAMrW,EAC7C2sB,EAAM,CAAE3sB,EAAG,EAAGC,EAAG8sB,GACjBH,EAAM,CAAE5sB,EAAGkI,EAAWnN,MAAOkF,EAAG8sB,EACpC,KACK,CACD,MAAMC,EAAQ,CACVhtB,EAAGsW,EAAItW,EACPC,EAAGqW,EAAIrW,EAAIiI,EAAWpN,QAEpBmyB,GAAKrpB,EAAAA,EAAAA,IAAayS,EAAO2W,GAC/B,GAAIC,EAAGlwB,UAAYiH,EAAa,CAC5B,MACMkpB,IADK7W,EAAMpW,EAAKgtB,EAAGtpB,GAAKspB,EAAGvpB,GAAM2S,EAAMrW,IAC3BitB,EAAGtpB,GAAKspB,EAAGvpB,IAC7BipB,EAAM,CAAE3sB,EAAGktB,EAAIjtB,EAAG,GAClB2sB,EAAM,CAAE5sB,EAAGktB,EAAIjtB,EAAGiI,EAAWpN,OACjC,KACK,CACD,MAAMqyB,EAAQ,CACVntB,EAAGsW,EAAItW,EAAIkI,EAAWnN,MACtBkF,EAAGqW,EAAIrW,EAAIiI,EAAWpN,QAEpBsyB,GAAKxpB,EAAAA,EAAAA,IAAayS,EAAO8W,GAC/B,GAAIC,EAAGrwB,UAAYiH,EAAa,CAC5B,MAAM+oB,EAAK1W,EAAMpW,EAAKmtB,EAAGzpB,GAAKypB,EAAG1pB,GAAM2S,EAAMrW,EAE7C2sB,EAAM,CAAE3sB,GADI+sB,GAAMK,EAAGzpB,GAAKypB,EAAG1pB,IACdzD,EAAG8sB,GAClBH,EAAM,CAAE5sB,EAAG2sB,EAAI3sB,EAAIkI,EAAWnN,MAAOkF,EAAG0sB,EAAI1sB,EAAIiI,EAAWpN,OAC/D,CACJ,CACJ,CACI6xB,GAAOC,KACPrW,EAAAA,EAAAA,IAAS5R,EAAS0R,EAAOsW,IACzBpW,EAAAA,EAAAA,IAAS5R,EAAS2R,EAAKsW,GACvBF,GAAQ,EAEhB,CACA,IAAKA,EACD,OAEJ/nB,EAAQ6R,UAAYzb,EAChB0xB,EAAe9vB,SACfgI,EAAQ0oB,yBAA2BZ,EAAea,WAEtD3oB,EAAQ8R,aAAcV,EAAAA,EAAAA,IAAgB4B,EAAW7Q,GACjD,MAAM,OAAEyjB,GAAWztB,EACnB,GAAIytB,EAAO5tB,OAAQ,CACf,MAAM4wB,GAAcf,EAAAA,EAAAA,IAAgBjC,EAAO3tB,OACvC2wB,IACA5oB,EAAQ6oB,WAAajD,EAAOJ,KAC5BxlB,EAAQ4oB,aAAcxX,EAAAA,EAAAA,IAAgBwX,GAE9C,CACA5oB,EAAQ+R,QACZ,CCtCgB+W,CAAa,CACT9oB,QAASqQ,EACTja,QACAsb,MAAOF,EACPG,IAAKF,EACLpS,cACAkE,WAAYnM,EAAU8F,OAAOvE,KAC7BR,MAAOqvB,EACPM,eAAgBA,EAChB9U,YACA7Q,WACF,GACJ,EAENhN,KAAK4zB,kBAAoB,CAACzY,EAAI0Y,EAAOC,KACjC,MAAMvV,EAAepD,EAAG1a,QAAQuC,MAChC,IAAKub,GAAc1b,OACf,OAEJ,MAAMkxB,EAAkBxV,EAAamS,UACrC,IAAKqD,EAAgBlxB,OACjB,OAEJ,MAAMZ,EAAYjC,KAAKiC,UAAWxB,EAAUwB,EAAUkR,cAAeiI,EAAKyY,EAAMjC,YAAaoC,EAAKF,EAAMlC,YAAaqC,EAAkBF,EAAgB/mB,UAAY6mB,EAAM7mB,QAAU8mB,EAAM9mB,SAAW,EAChMinB,GAAmB,GAGvBhyB,EAAU8F,OAAO6C,MAAMsQ,IACnB,MAAMmB,EAAOlB,EAAGlT,cAAeqU,EAAOlB,EAAGnT,cAAeisB,EAAOF,EAAG/rB,cAAewpB,EAAgBtW,EAAG9S,OAAOopB,eAAiB,EAC5H,IAAIvpB,EAAAA,EAAAA,IAAYmU,EAAMC,GAAQmV,IAC1BvpB,EAAAA,EAAAA,IAAYgsB,EAAM5X,GAAQmV,IAC1BvpB,EAAAA,EAAAA,IAAYgsB,EAAM7X,GAAQoV,EAC1B,OAEJ,IAAI0C,GAAgBzB,EAAAA,EAAAA,IAAgBqB,EAAgBjxB,OACpD,IAAKqxB,EAAe,CAChB,MAAMhD,OAAgC1yB,IAApB8f,EAAa1d,GACzBoB,EAAUG,UAAUivB,YAAYC,IAAI/S,EAAa1d,IACjDoB,EAAUG,UAAUgvB,WAC1B+C,GAAgB1V,EAAAA,EAAAA,IAAatD,EAAIC,EAAI+V,EACzC,CACKgD,GDFd,SAA0BzzB,GAC7B,MAAM,QAAEmK,EAAO,KAAEwR,EAAI,KAAEC,EAAI,KAAE4X,EAAI,eAAEvB,EAAc,cAAEwB,EAAa,gBAAEF,GAAoBvzB,GACtF0zB,EAAAA,EAAAA,IAAavpB,EAASwR,EAAMC,EAAM4X,GAC9BvB,EAAe9vB,SACfgI,EAAQ0oB,yBAA2BZ,EAAea,WAEtD3oB,EAAQwpB,WAAYpY,EAAAA,EAAAA,IAAgBkY,EAAeF,GACnDppB,EAAQmhB,MACZ,CCHgBsI,CAAiB,CACbzpB,QAASqQ,EACTmB,OACAC,OACA4X,OACAvB,eAAgBlyB,EAAQkyB,eACxBwB,gBACAF,mBACF,GACJ,EAENj0B,KAAKu0B,eAAiB,CAAC9zB,EAAS0a,EAAIiX,EAAMoC,KACtC,MAAMpZ,EAAKgX,EAAKR,YAChB,IAAMnxB,EAAQuC,OAAO0tB,UAAU7tB,SAAUuY,EAAG3a,QAAQuC,OAAO0tB,UAAU7tB,OACjE,OAEJ,MAAM4xB,EAAWrZ,EAAGpY,OAAOnE,QAAQsY,IAC/B,MAAMud,EAAW10B,KAAK20B,kBAAkBvZ,EAAIjE,EAAEya,aAC9C,OAAQxW,EAAG3a,QAAQuC,OACf0xB,GAAYtZ,EAAG3a,QAAQuC,MAAMutB,WAC7BiE,EAAQI,WAAWnoB,GAAMA,EAAEmlB,cAAgBza,EAAEya,eAAgB,CAAC,IAEtE,GAAK6C,GAAUj2B,OAGf,IAAK,MAAMq2B,KAAUJ,EAAU,CAC3B,MAAMT,EAAKa,EAAOjD,YAA4B5xB,KAAK80B,sBAAsB3Z,EAAIC,EAAI4Y,GAC9DvzB,EAAQuC,MAAM0tB,UAAUH,WAG3CvwB,KAAK4zB,kBAAkBzY,EAAIiX,EAAMyC,EACrC,GAEJ70B,KAAK20B,kBAAoB,CAACxZ,EAAIC,IACnB0W,GAAiB,CAAC3W,EAAIC,GAAKpb,KAAK+0B,OAAO/xB,OAElDhD,KAAK80B,sBAAwB,CAAC3Z,EAAIC,EAAI4Y,IAC3BlC,GAAiB,CAAC3W,EAAIC,EAAI4Y,GAAKh0B,KAAK+0B,OAAOrE,WAEtD1wB,KAAK+0B,OAAS,CACV/xB,MAAO,IAAIuuB,IACXb,UAAW,IAAIa,IAEvB,CACAyD,YAAAA,CAAanqB,EAAS3F,GAClB,MAAM,MAAElC,EAAK,QAAEvC,GAAYyE,EAC3B,IAAKlC,GAASA,EAAMxE,QAAU,EAC1B,OAEJ,MAAMg2B,EAAUxxB,EAAMnE,QAAQ4N,GAAMhM,EAAQuC,OAAShD,KAAK20B,kBAAkBzvB,EAAUuH,EAAEmlB,cAAgBnxB,EAAQuC,MAAMutB,YACtH,IAAK,MAAM6B,KAAQoC,EACfx0B,KAAKu0B,eAAe9zB,EAASyE,EAAUktB,EAAMoC,GACzCpC,EAAKplB,QAAU,IAAM9H,EAASmD,OAAOyU,YAAc,GAAK,GACxD9c,KAAKmyB,cAAcjtB,EAAUktB,EAGzC,CACA,UAAMlyB,GACFF,KAAK+0B,OAAO/xB,MAAQ,IAAIuuB,IACxBvxB,KAAK+0B,OAAOrE,UAAY,IAAIa,GAChC,CACA0D,eAAAA,CAAgB/vB,GAEZ,GADAA,EAASlC,MAAQ,IACZkC,EAASzE,QAAQuC,MAClB,OAEJ,MAAM0U,EAAQ1X,KAAKiC,UAAUoG,OAAOC,YAAY,OAAED,GAAWnD,GAAU,SAAEjC,EAAQ,MAAEhC,GAAUiE,EAASzE,QAAQuC,MAC9GqF,EAAOopB,cAAgBxuB,EAAWyU,EAClCrP,EAAOyU,WAAa7b,EAAQyW,CAChC,CACAwd,iBAAAA,CAAkBhwB,GACdA,EAASlC,MAAQ,EACrB,ECnJJ,MAAMmyB,GACFt1B,WAAAA,GACIG,KAAKa,GAAK,OACd,CACAurB,SAAAA,CAAUnqB,GACN,OAAO,IAAIiwB,GAAajwB,EAC5B,CACAoqB,WAAAA,GACA,CACAG,WAAAA,GACI,OAAO,CACX,ECVG7qB,eAAeyzB,GAA8B9wB,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SCD5DoD,eAAoC2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SAChD+F,EAAO+wB,cAAc,kBAAmBpzB,GAAc,IAAI+uB,GAAO/uB,IAAYX,EACvF,CDAUg0B,CAAqBhxB,EAAQhD,SDWhCK,eAA+B2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACjD,MAAMwP,EAAS,IAAIonB,SACb7wB,EAAOsoB,UAAU7e,EAAQzM,EACnC,CCbUi0B,CAAgBjxB,EAAQhD,EAClC,CEJO,MAAMk0B,GACT5qB,IAAAA,CAAKC,EAAS3F,EAAUwD,GACpB,MAAM+sB,EAAQz1B,KAAK01B,UAAUxwB,EAAUwD,GAASitB,EAAO31B,KAAK41B,aAAa1wB,EAAUwD,GAASmtB,EAAYF,EAAKrjB,MAAMwjB,UAAYH,EAAKrjB,MAAMyjB,YAAaC,EAAeL,EAAKrjB,MAAMwjB,UAAYH,EAAKrjB,MAAMyjB,YAAaE,EAAwB,KAAOD,EAAe,GAAMA,EAAcE,EAAgB5uB,KAAKyD,GAAMzD,KAAKyD,GAAKkrB,EAAwB,IACpV,GAAKprB,EAAL,CAGAA,EAAQsrB,YACRtrB,EAAQurB,UAAUX,EAAMvvB,EAAGuvB,EAAMtvB,GACjC0E,EAAQ8iB,OAAO,EAAG,GAClB,IAAK,IAAIpuB,EAAI,EAAGA,EAAIs2B,EAAWt2B,IAC3BsL,EAAQ+iB,OAAO+H,EAAKn3B,OAAQ,GAC5BqM,EAAQurB,UAAUT,EAAKn3B,OAAQ,GAC/BqM,EAAQ6jB,OAAOwH,EAPnB,CASJ,CACAjrB,aAAAA,CAAc/F,GACV,MAAMmxB,EAAUnxB,EAASiG,UACzB,OAAO7D,KAAKqoB,OAAMvnB,EAAAA,EAAAA,IAAciuB,GAASC,OAASD,GAASE,UAAY,GAC3E,EClBG,MAAMC,WAAsBhB,GAC/BE,SAAAA,CAAUxwB,EAAUwD,GAChB,MAAO,CACHxC,GAAIwC,GAAUxD,EAASoxB,MAAQ,KAC/BnwB,GAAIuC,EAAS,IAErB,CACAktB,YAAAA,CAAa1wB,EAAUwD,GACnB,MAAM4tB,EAAQpxB,EAASoxB,MACvB,MAAO,CACHhkB,MAAO,CACHyjB,YAAa,EACbD,UAAWQ,GAEf93B,OAAkB,KAATkK,GAAkB4tB,EAAQ,GAE3C,EChBG,MAAMG,WAAuBjB,GAChCE,SAAAA,CAAUxwB,EAAUwD,GAChB,MAAO,CACHxC,GAAIwC,EACJvC,EAAGuC,EAAS,KAEpB,CACAuC,aAAAA,GACI,OAAO,CACX,CACA2qB,YAAAA,CAAa1wB,EAAUwD,GACnB,MAAO,CACH4J,MAAO,CACHyjB,YAAa,EACbD,UAAW,GAEft3B,OAAiB,EAATkK,EAEhB,ECXG/G,eAAe+0B,GAAiBpyB,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SAN/CoD,eAAuC2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SACnD+F,EAAOgN,SAAS,UAAW,IAAIklB,GAAiBl1B,EAC1D,CAKUq1B,CAAwBryB,EAAQhD,SAJnCK,eAAiC2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SAC7C+F,EAAOgN,SAAS,WAAY,IAAImlB,GAAkBn1B,EAC5D,CAGUs1B,CAAkBtyB,EAAQhD,EACpC,CCVO,MAAMu1B,GACTh3B,WAAAA,GACIG,KAAK6C,QAAS,EACd7C,KAAKqD,MAAQ,EACbrD,KAAK2G,MAAQ,EACb3G,KAAKmN,MAAO,CAChB,CACAjL,IAAAA,CAAKmL,GACIA,SAGe5O,IAAhB4O,EAAKxK,SACL7C,KAAK6C,OAASwK,EAAKxK,aAEJpE,IAAf4O,EAAKhK,QACLrD,KAAKqD,OAAQ2b,EAAAA,EAAAA,IAAc3R,EAAKhK,aAEjB5E,IAAf4O,EAAK1G,QACL3G,KAAK2G,OAAQqY,EAAAA,EAAAA,IAAc3R,EAAK1G,aAElBlI,IAAd4O,EAAKF,OACLnN,KAAKmN,KAAOE,EAAKF,MAEzB,ECtBG,MAAM2pB,WAAehK,GAAAA,GACxBjtB,WAAAA,GACIE,QACAC,KAAKoM,UAAY,IAAIyqB,GACrB72B,KAAKwI,UAAY,YACjBxI,KAAK0F,MAAO,EACZ1F,KAAK+C,MAAQ,CACjB,CACAb,IAAAA,CAAKmL,GACIA,IAGLtN,MAAMmC,KAAKmL,QACY5O,IAAnB4O,EAAK7E,YACLxI,KAAKwI,UAAY6E,EAAK7E,WAE1BxI,KAAKoM,UAAUlK,KAAKmL,EAAKjB,gBACP3N,IAAd4O,EAAK3H,OACL1F,KAAK0F,KAAO2H,EAAK3H,MAEzB,ECQG,MAAMqxB,GACTl3B,WAAAA,CAAYoC,GACRjC,KAAKiC,UAAYA,CACrB,CACA/B,IAAAA,CAAKgF,GACD,MAAM8xB,EAAgB9xB,EAASzE,QAAQiuB,OACvC,IAAKsI,EACD,OAEJ9xB,EAASwpB,OAAS,CACd7rB,OAAQm0B,EAAc5qB,UAAUvJ,OAChCE,OAAQqF,EAAAA,EAAAA,IAAc4uB,EAAcj0B,OAASuE,KAAKyD,GAAM,KAE5D7F,EAAS+xB,aAAeD,EAActxB,KACtC,IAAIwxB,EAAkBF,EAAcxuB,UACpC,GAAwB,WAApB0uB,EAA8B,CAE9BA,EADc5vB,KAAKyI,MAAoB,GAAdtF,EAAAA,EAAAA,OACC,EAAI,oBAAsB,WACxD,CACA,OAAQysB,GACJ,IAAK,oBACL,IAAK,mBACDhyB,EAASwpB,OAAO5iB,OAAS,aACzB,MACJ,IAAK,YACD5G,EAASwpB,OAAO5iB,OAAS,aAGjC,MAAMqrB,EAAkBH,EAAc5qB,UAClC+qB,EAAgBt0B,SAChBqC,EAASwpB,OAAO/nB,MAAQ,GAAIyB,EAAAA,EAAAA,IAAc+uB,EAAgBxwB,OAC1DzB,EAASwpB,OAAO3oB,UACXqC,EAAAA,EAAAA,IAAc+uB,EAAgB9zB,OAAS,IAAOrD,KAAKiC,UAAUoG,OAAOe,aACpE+tB,EAAgBhqB,OACjBjI,EAASwpB,OAAO3oB,WAAY0E,EAAAA,EAAAA,QAGpCvF,EAASkyB,SAAWlyB,EAASwpB,OAAO3rB,KACxC,CACA4F,SAAAA,CAAUzD,GACN,MAAMwpB,EAASxpB,EAASzE,QAAQiuB,OAChC,QAAKA,KAGGxpB,EAAS0D,YAAc1D,EAASyH,UAAY+hB,EAAOtiB,UAAUvJ,SAAW6rB,EAAOhpB,KAC3F,CACA2mB,WAAAA,CAAY5rB,GACHA,EAAQiuB,SACTjuB,EAAQiuB,OAAS,IAAIoI,IACxB,QAAAhiB,EAAAvW,UAAAC,OAHmBuW,EAAO,IAAA7V,MAAA4V,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAPD,EAAOC,EAAA,GAAAzW,UAAAyW,GAI3B,IAAK,MAAMC,KAAUF,EACjBtU,EAAQiuB,OAAOxsB,KAAK+S,GAAQyZ,OAEpC,CACA9hB,MAAAA,CAAO1H,EAAUK,GACRvF,KAAK2I,UAAUzD,MAnF5B,SAAsBA,EAAUK,GAC5B,MAAMmpB,EAASxpB,EAASwpB,OAAQsI,EAAgB9xB,EAASzE,QAAQiuB,OACjE,IAAKA,IAAWsI,EACZ,OAEJ,MAAMG,EAAkBH,EAAc5qB,UAAW/I,GAASqrB,EAAO3oB,UAAY,GAAKR,EAAMkB,OAAQ/C,EAAM,EAAI4D,KAAKyD,GAAIpE,EAAQ+nB,EAAO/nB,OAAS,EACtIwwB,EAAgBt0B,SAIZ,eADD6rB,EAAO5iB,QAEP4iB,EAAO3rB,OAASM,EACZqrB,EAAO3rB,MAAQW,IACfgrB,EAAO3rB,OAASW,KAKpBgrB,EAAO3rB,OAASM,EACZqrB,EAAO3rB,MAAQ,IACf2rB,EAAO3rB,OAASW,IAIxBgrB,EAAO3oB,UAAsB,IAAVY,IACnB+nB,EAAO3oB,UAAYY,GAE3B,CA2DQ0wB,CAAanyB,EAAUK,GACvBL,EAASkyB,SAAWlyB,EAASwpB,QAAQ3rB,OAAS,EAClD,EC1FJ,MAAMu0B,GAAYhwB,KAAKypB,KAAK,GACrB,MAAMwG,GACT3sB,IAAAA,CAAKC,EAAS3F,EAAUwD,GACpB,MAAM8uB,EAAc9uB,EAAS4uB,GAAWG,EAA8B,EAAdD,EACxD3sB,EAAQmlB,MAAMwH,GAAcA,EAAaC,EAAeA,EAC5D,CACAxsB,aAAAA,GACI,OAAO,CACX,ECPG,MAAMysB,GACT9sB,IAAAA,CAAKC,EAAS3F,EAAUwD,GACpB,MAAM4tB,EAAQpxB,EAASoxB,MAAOqB,EAAQzyB,EAAS0yB,WAAa,EAC5D/sB,EAAQ8iB,OAAO,EAAG,EAAIjlB,GACtB,IAAK,IAAInJ,EAAI,EAAGA,EAAI+2B,EAAO/2B,IACvBsL,EAAQ6jB,OAAOpnB,KAAKyD,GAAKurB,GACzBzrB,EAAQ+iB,OAAO,EAAG,EAAIllB,EAASivB,GAC/B9sB,EAAQ6jB,OAAOpnB,KAAKyD,GAAKurB,GACzBzrB,EAAQ+iB,OAAO,EAAG,EAAIllB,EAE9B,CACAuC,aAAAA,CAAc/F,GACV,MAAM2yB,EAAO3yB,EAASiG,UACtB,OAAO7D,KAAKqoB,OAAMvnB,EAAAA,EAAAA,IAAcyvB,GAAMvB,OAASuB,GAAMtB,UAAY,GACrE,CACArrB,YAAAA,CAAajJ,EAAWiD,GACpB,MAAM2yB,EAAO3yB,EAASiG,UAAWwsB,GAAQvvB,EAAAA,EAAAA,IAAcyvB,GAAMF,OAAS,GACtEzyB,EAAS0yB,UAAYD,CACzB,EClBJ,SAASvsB,GAAiB7F,EAAO8F,EAAYC,EAAgB5H,EAAK6H,GAC9D,IAAKF,IACAC,EAAezI,SACdwI,EAAWG,UAAY,GAAK,IAAMH,EAAWI,OAAS,IAAMJ,EAAWG,UAAY,GACrF,OAQJ,GANKH,EAAWK,OACZL,EAAWK,KAAO,IAEjBL,EAAWM,WAAa,GAAK,GAAKN,EAAWK,MAAQL,EAAWM,WAAa,KAC9EN,EAAWK,MAAQnG,EAAMxC,QAExBsI,EAAWM,WAAa,GAAK,GAAKN,EAAWK,MAAQL,EAAWM,WAAa,GAC9E,OAEJ,MAAMC,GAASC,EAAAA,EAAAA,IAAcP,EAAeM,QAAS7F,GAAYsF,EAAWtF,UAAY,GAAKR,EAAMkB,OAAkB,IAATmF,EAAcjF,EAAQ0E,EAAW1E,OAAS,EACjJ4E,GAAkC,eAAtBF,EAAWS,QAcxBT,EAAWtI,OAASgD,EAChBsF,EAAWtI,MAAQ,IACdsI,EAAWI,QACZJ,EAAWI,MAAQ,GAEvBJ,EAAWI,QACXJ,EAAWS,OAAS,aACpBT,EAAWtI,OAASsI,EAAWtI,SApBnCsI,EAAWtI,OAASgD,EAChBsF,EAAWtI,MAAQW,IACd2H,EAAWI,QACZJ,EAAWI,MAAQ,GAEvBJ,EAAWI,QACPF,IACAF,EAAWS,OAAS,aACpBT,EAAWtI,OAASsI,EAAWtI,MAAQW,KAe/C2H,EAAWtF,UAAsB,IAAVY,IACvB0E,EAAWtF,UAAYY,GAEvB0E,EAAWtI,MAAQW,IACnB2H,EAAWtI,OAASW,EAE5B,CC7CO,MAAMo0B,GACTj4B,WAAAA,CAAYoC,GACRjC,KAAKiC,UAAYA,CACrB,CACA/B,IAAAA,CAAKgF,GACD,MAAMjD,EAAYjC,KAAKiC,UAAWxB,EAAUyE,EAASzE,QAC/Cmc,GAASnD,EAAAA,EAAAA,IAAyBhZ,EAAQmc,OAAQ1X,EAASrE,GAAIJ,EAAQyL,kBAC7EhH,EAAS6yB,aAAc3vB,EAAAA,EAAAA,IAAcwU,EAAO3b,OAASgB,EAAUoG,OAAOC,WACtEpD,EAAS8yB,eAAgB5vB,EAAAA,EAAAA,IAAcwU,EAAO5P,SAAW,GACzD9H,EAAS+yB,gBAAkBrb,EAAO9Z,OAAOsJ,UACzC,MAAM8rB,GAAiBjsB,EAAAA,EAAAA,IAAgB2Q,EAAO9Z,QAAUoC,EAASyU,eAC7Due,IACAhzB,EAASizB,aAAchsB,EAAAA,EAAAA,IAAuB+rB,EAAgBhzB,EAAS+yB,gBAAiBh2B,EAAUoG,OAAOe,cAEjH,CACAT,SAAAA,CAAUzD,GACN,MAAMpC,EAAQoC,EAAS+yB,iBAAiB,YAAEE,GAAgBjzB,EAC1D,OAASA,EAAS0D,YACb1D,EAASyH,YACR7J,SACyBrE,IAAzB05B,GAAa9rB,EAAEtJ,OAAuBo1B,EAAY9rB,EAAExJ,aACxBpE,IAAzB05B,GAAa5rB,EAAExJ,OAAuBo1B,EAAY5rB,EAAE1J,aAC3BpE,IAAzB05B,GAAa1rB,EAAE1J,OAAuBo1B,EAAY1rB,EAAE5J,OACjE,CACA+J,MAAAA,CAAO1H,EAAUK,GACRvF,KAAK2I,UAAUzD,IDqBrB,SAA2BA,EAAUK,GACxC,IAAKL,EAASizB,cAAgBjzB,EAAS+yB,gBACnC,OAEJ,MAAM,EAAE5rB,EAAC,EAAEE,EAAC,EAAEE,GAAMvH,EAASizB,aAAe9rB,EAAGC,EAAYC,EAAGC,EAAYC,EAAGC,GAAexH,EAAS+yB,gBACjG5rB,GACAjB,GAAiB7F,EAAO8G,EAAGC,EAAY,KAAK,GAE5CC,GACAnB,GAAiB7F,EAAOgH,EAAGC,EAAY,KAAK,GAE5CC,GACArB,GAAiB7F,EAAOkH,EAAGC,EAAY,KAAK,EAEpD,CChCQ0rB,CAAkBlzB,EAAUK,EAChC,EC9BG,MAAM8yB,GAAa,CAAC,OAAQ,YAAa,QACzC,MAAMC,GACT1tB,IAAAA,CAAKC,EAAS3F,EAAUwD,EAAQsE,GAC5B,MAAMurB,EAAYrzB,EAASiG,UAC3B,QAAkB1M,IAAd85B,EACA,OAEJ,MAAMC,EAAWD,EAAUx1B,MAC3B,QAAiBtE,IAAb+5B,EACA,YAEkB/5B,IAAlByG,EAASuhB,OACTvhB,EAASuhB,MAAOhN,EAAAA,EAAAA,IAAyB+e,EAAUtzB,EAASuzB,kBAEhE,MAAMhS,EAAOvhB,EAASuhB,KAAMvlB,EAAQq3B,EAAUr3B,OAAS,GAAIw3B,EAASH,EAAUG,QAAU,MAAOl1B,EAA4B,EAArB8D,KAAKqoB,MAAMjnB,GAAaiwB,EAAOJ,EAAUI,MAAQ,UAAW3M,EAAO9mB,EAAS8mB,KAAM4M,EAAWnS,EAAKjoB,OAASkK,EAAU,EAC3NmC,EAAQ8tB,KAAO,GAAGz3B,KAASw3B,KAAUl1B,QAAWm1B,KAChD,MAAM3wB,EAAM,CACR9B,GAAI0yB,EACJzyB,EAAGuC,EAAS,GAEhBmC,EAAQggB,YAAc7d,EAClBgf,EACAnhB,EAAQguB,SAASpS,EAAMze,EAAI9B,EAAG8B,EAAI7B,GAGlC0E,EAAQiuB,WAAWrS,EAAMze,EAAI9B,EAAG8B,EAAI7B,GAExC0E,EAAQggB,YAAc,CAC1B,CACA5f,aAAAA,GACI,OAAO,EACX,CACA,UAAM/K,CAAK+B,GACP,MAAMxB,EAAUwB,EAAUkR,cAC1B,GAAIklB,GAAWtM,MAAM5U,IAAMvC,EAAAA,EAAAA,IAAUuC,EAAG1W,EAAQ2B,UAAU0pB,MAAMha,QAAQ,CACpE,MAAMinB,EAAeV,GAChBx0B,KAAKsT,GAAM1W,EAAQ2B,UAAU0pB,MAAMrrB,QAAQ0W,KAC3C4U,MAAM5U,KAAQA,IAAI6hB,EAAW,IAClCliB,EAAAA,EAAAA,IAA0BiiB,GAAejN,IACrCkN,EAAS7Z,MAAK8Z,EAAAA,EAAAA,IAASnN,EAAM6M,KAAM7M,EAAM4M,QAAQ,UAE/C7R,QAAQqS,IAAIF,EACtB,CACJ,CACA9tB,YAAAA,CAAajJ,EAAWiD,GACpB,IAAKA,EAAS4mB,QAAUuM,GAAWxqB,SAAS3I,EAAS4mB,OACjD,OAEJ,MAAMyM,EAAYrzB,EAASiG,UAC3B,QAAkB1M,IAAd85B,EACA,OAEJ,MAAMC,EAAWD,EAAUx1B,WACVtE,IAAb+5B,IAGJtzB,EAASuhB,MAAOhN,EAAAA,EAAAA,IAAyB+e,EAAUtzB,EAASuzB,iBAChE,EChCG92B,eAAew3B,GAAS70B,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAC1C8F,EAAQC,SC1BL3C,eAAiC2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SAC7C+F,EAAO8M,SAAS,YAAY,IAAM,IAAI2c,IAAiBzsB,EACjE,CDyBU83B,CAAkB90B,GAAQ,SE3B7B3C,eAA8C2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SAC1D+F,EAAO+wB,cAAc,mBAAoBpzB,GAAc,IAAIiQ,EAAU5N,EAAQrC,IAAYX,EACnG,CF0BU+3B,CAA+B/0B,GAAQ,SG5B1C3C,eAA6C2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SACzD+F,EAAO+wB,cAAc,kBAAmBpzB,GAAc,IAAIkT,EAAQlT,IAAYX,EACxF,CH2BUg4B,CAA8Bh1B,GAAQ,SI7BzC3C,eAA6C2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SACzD+F,EAAO+wB,cAAc,kBAAmBpzB,GAAc,IAAI0V,EAAQ1V,IAAYX,EACxF,CJ4BUi4B,CAA8Bj1B,GAAQ,SK9BzC3C,eAA8C2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SAC1D+F,EAAO+wB,cAAc,mBAAoBpzB,GAAc,IAAI8a,EAAU9a,IAAYX,EAC3F,CL6BUk4B,CAA+Bl1B,GAAQ,SM/B1C3C,eAA2C2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SACvD+F,EAAO+wB,cAAc,gBAAiBpzB,GAAc,IAAI8b,EAAQ9b,IAAYX,EACtF,CN8BUm4B,CAA4Bn1B,GAAQ,SOhCvC3C,eAA4C2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SACxD+F,EAAO+wB,cAAc,iBAAkBpzB,GAAc,IAAIyc,EAAOzc,IAAYX,EACtF,CP+BUo4B,CAA6Bp1B,GAAQ,SQjCxC3C,eAA2C2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SACvD+F,EAAO+wB,cAAc,gBAAiBpzB,GAAc,IAAIgd,EAAOhd,IAAYX,EACrF,CRgCUq4B,CAA4Br1B,GAAQ,SSlCvC3C,eAA6C2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SACzD+F,EAAO+wB,cAAc,kBAAmBpzB,GAAc,IAAIud,EAAQvd,IAAYX,EACxF,CTiCUs4B,CAA8Bt1B,GAAQ,SUnCzC3C,eAA8C2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SAC1D+F,EAAO+wB,cAAc,mBAAoBpzB,GAAc,IAAI6d,GAASxb,EAAQrC,IAAYX,EAClG,CVkCUu4B,CAA+Bv1B,GAAQ,SWpC1C3C,eAA2C2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SACvD+F,EAAO+wB,cAAc,gBAAiBpzB,GAAc,IAAIgf,GAAOhf,IAAYX,EACrF,CXmCUw4B,CAA4Bx1B,GAAQ,SYrCvC3C,eAA+C2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SAC3D+F,EAAO+wB,cAAc,oBAAqBpzB,GAAc,IAAIiQ,GAAUjQ,IAAYX,EAC5F,CZoCUy4B,CAAgCz1B,GAAQ,SatC3C3C,eAAkD2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SAC9D+F,EAAO+wB,cAAc,uBAAwBpzB,GAAc,IAAIutB,GAASvtB,IAAYX,EAC9F,CbqCU04B,CAAmC11B,GAAQ,SAC3C8wB,GAA8B9wB,GAAQ,ScxCzC3C,kBACHs4B,EAAAA,EAAAA,IAAU,gBAAiBl3B,GAAUA,GAAS,KAC9Ck3B,EAAAA,EAAAA,IAAU,iBAAkBl3B,GAAU,GAAK,EAAIA,IAAU,KACzDk3B,EAAAA,EAAAA,IAAU,oBAAqBl3B,GAAWA,EAAQ,GAAM,EAAIA,GAAS,EAAI,IAAM,EAAIA,EAAQ,IAAM,EAAI,GACzG,CdqCUm3B,SACAxP,GAAepmB,GAAQ,Se1C1B3C,eAA6B2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SACzC+F,EAAOgN,SAAS,OAAQ,IAAIoc,GAAcpsB,EACpD,CfyCU64B,CAAc71B,GAAQ,SACtBoyB,GAAiBpyB,GAAQ,SgB5C5B3C,eAA+B2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SAC3C+F,EAAOgN,SAAS,CAAC,OAAQ,UAAW,IAAIimB,GAAgBj2B,EAClE,ChB2CU84B,CAAgB91B,GAAQ,SiB7C3B3C,eAA6B2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SACzC+F,EAAOgN,SAAS,OAAQ,IAAIomB,GAAcp2B,EACpD,CjB4CU+4B,CAAc/1B,GAAQ,SkB9CzB3C,eAA6B2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SACzC+F,EAAOgN,SAAS+mB,GAAY,IAAIC,GAAch3B,EACxD,ClB6CUg5B,CAAch2B,GAAQ,SmB/CzB3C,eAA+B2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SAC3C+F,EAAOkN,mBAAmB,QAASvP,GAAc,IAAImrB,GAAYnrB,IAAYX,EACvF,CnB8CUi5B,CAAgBj2B,GAAQ,SoBhD3B3C,eAAiC2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SAC7C+F,EAAOkN,mBAAmB,UAAWvP,GAAc,IAAI80B,GAAc90B,IAAYX,EAC3F,CpB+CUk5B,CAAkBl2B,GAAQ,SqBjD7B3C,eAAsC2C,GAAwB,IAAhBhD,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,SAClD+F,EAAOkN,mBAAmB,eAAgBvP,GAAc,IAAI61B,GAAmB71B,IAAYX,EACrG,CrBgDUm5B,CAAuBn2B,GAAQ,SAC/B6M,EAAU7M,EAAQhD,EAC5B,C,kCsBrDO,MAAMo5B,EACT76B,WAAAA,CAAYqG,EAAGC,GACXnG,KAAKoH,SAAW,CACZlB,EAAGA,EACHC,EAAGA,EAEX,E,oECHG,MAAM4M,UAAe2nB,EAAAA,EACxB76B,WAAAA,CAAYqG,EAAGC,EAAGuC,GACd3I,MAAMmG,EAAGC,GACTnG,KAAK0I,OAASA,CAClB,CACAgS,QAAAA,CAASoV,GACL,OAAO5nB,EAAAA,EAAAA,IAAY4nB,EAAO9vB,KAAKoH,WAAapH,KAAK0I,MACrD,CACAqnB,UAAAA,CAAW1P,GACP,MAAMhE,EAAOrc,KAAKoH,SAAUkV,EAAO+D,EAAMjZ,SAAUuzB,EAAerzB,KAAK0C,IAAIsS,EAAKpW,EAAImW,EAAKnW,GAAtCy0B,EAA6CrzB,KAAK0C,IAAIsS,EAAKnW,EAAIkW,EAAKlW,GAAM2c,EAAI9iB,KAAK0I,OACtI,GAAI2X,aAAiBtN,EAAQ,CAEzB,OADa+P,EAAIzC,EAAM3X,OAAepB,KAAKypB,KAAK4J,GAAa,EAAIA,GAAa,EAElF,CACK,GAAIta,aAAiB7K,EAAAA,EAAW,CACjC,MAAM,MAAEvU,EAAK,OAAED,GAAWqf,EAAM7c,KAChC,OAD8C8D,KAAK8Y,IAAIua,EAAY15B,EAAO,GAAKqG,KAAK8Y,IAAIua,EAAY35B,EAAQ,IAC3F8hB,GAAK,GACjB6X,GAAa7X,EAAI7hB,GAAS05B,GAAa7X,EAAI9hB,GAC5C25B,GAAa15B,GACb05B,GAAa35B,CACrB,CACA,OAAO,CACX,E,oNCvBJ,IAAI45B,EAAUtzB,KAAK0lB,OACnB,MAAM6N,EAAU,IAAItJ,IACb,SAAS0I,EAAUxV,EAAMxS,GACxB4oB,EAAQvJ,IAAI7M,IAGhBoW,EAAQn4B,IAAI+hB,EAAMxS,EACtB,CACO,SAASuB,EAAUiR,GACtB,OAAOoW,EAAQvJ,IAAI7M,IAAS,CAAE1hB,GAAUA,EAC5C,CAIO,SAAS0H,IACZ,OAAOxE,EAAM20B,IAAW,EAAG,EAAI,MACnC,CACO,SAAS30B,EAAM60B,EAAKr3B,EAAKC,GAC5B,OAAO4D,KAAK7D,IAAI6D,KAAK5D,IAAIo3B,EAAKr3B,GAAMC,EACxC,CACO,SAASkT,EAAImkB,EAAOC,EAAOC,EAASC,GACvC,OAAO5zB,KAAKyI,OAAOgrB,EAAQE,EAAUD,EAAQE,IAAYD,EAAUC,GACvE,CACO,SAASrvB,EAAciX,GAC1B,MAAMpf,EAAM6F,EAAYuZ,GACxB,IAAIrf,EAAM03B,EAAYrY,GAItB,OAHIpf,IAAQD,IACRA,EAAM,GAEHgH,KAAe/G,EAAMD,GAAOA,CACvC,CACO,SAAS2E,EAAcrF,GAC1B,OAAOq4B,EAAAA,EAAAA,IAASr4B,GAASA,EAAQ8I,EAAc9I,EACnD,CACO,SAASo4B,EAAYp4B,GACxB,OAAOq4B,EAAAA,EAAAA,IAASr4B,GAASA,EAAQA,EAAMU,GAC3C,CACO,SAAS8F,EAAYxG,GACxB,OAAOq4B,EAAAA,EAAAA,IAASr4B,GAASA,EAAQA,EAAMW,GAC3C,CACO,SAASsb,EAAc/J,EAAQlS,GAClC,GAAIkS,IAAWlS,QAAoBtE,IAAVsE,IAAuBq4B,EAAAA,EAAAA,IAASnmB,GACrD,OAAOA,EAEX,MAAMxR,EAAM03B,EAAYlmB,GAASvR,EAAM6F,EAAY0L,GACnD,YAAiBxW,IAAVsE,EACD,CACEU,IAAK6D,KAAK7D,IAAIA,EAAKV,GACnBW,IAAK4D,KAAK5D,IAAIA,EAAKX,IAErBic,EAAcvb,EAAKC,EAC7B,CACO,SAAS+K,EAAShO,GACrB,MAAMusB,EAASvsB,EAAQusB,QAAQ,OAAEnqB,EAAM,aAAEoqB,IAAiBoO,EAAAA,EAAAA,IAAUrO,GAC9D,CACEnqB,OAAQmqB,EACRC,aAAc,GAEhBD,EACN,OAAgB5kB,EAATvF,EAAuBmc,EAAcve,EAAQsC,MAAOkqB,GAA+BxsB,EAAQsC,MACtG,CACO,SAAS+G,EAAawxB,EAAQC,GACjC,MAAM3xB,EAAK0xB,EAAOp1B,EAAIq1B,EAAOr1B,EAAG2D,EAAKyxB,EAAOn1B,EAAIo1B,EAAOp1B,EACvD,MAAO,CAAEyD,GAAIA,EAAIC,GAAIA,EAAI5G,SAAUqE,KAAKypB,KAAKnnB,GAAM,EAAIC,GAAM,GACjE,CACO,SAAS3B,EAAYozB,EAAQC,GAChC,OAAOzxB,EAAawxB,EAAQC,GAAQt4B,QACxC,CACO,SAASu4B,EAA0BhzB,EAAWpB,EAAUmB,GAC3D,IAAI6yB,EAAAA,EAAAA,IAAS5yB,GACT,OAAQA,EAAYlB,KAAKyD,GAAM,IAEnC,OAAQvC,GACJ,IAAK,MACD,OAAQlB,KAAKyD,GAAK,EACtB,IAAK,YACD,OAAQzD,KAAKyD,GAAK,EACtB,IAAK,QACD,OAAO,EACX,IAAK,eACD,OAAOzD,KAAKyD,GAAK,EACrB,IAAK,SACD,OAAOzD,KAAKyD,GAAK,EACrB,IAAK,cACD,OAAQ,EAAIzD,KAAKyD,GAAM,EAC3B,IAAK,OACD,OAAOzD,KAAKyD,GAChB,IAAK,WACD,OAAS,EAAIzD,KAAKyD,GAAM,EAC5B,IAAK,SACD,OAAOzD,KAAK4I,MAAM3H,EAAOpC,EAAIiB,EAASjB,EAAGoC,EAAOrC,EAAIkB,EAASlB,GACjE,IAAK,UACD,OAAOoB,KAAK4I,MAAM9I,EAASjB,EAAIoC,EAAOpC,EAAGiB,EAASlB,EAAIqC,EAAOrC,GACjE,QACI,OAAOuE,IAAcnD,KAAKyD,GAAK,EAE3C,CACO,SAAS0wB,EAAwBjzB,GACpC,MAAMkzB,EAAetsB,EAAAA,EAAOC,OAG5B,OAFAqsB,EAAal9B,OAAS,EACtBk9B,EAAajzB,MAAQD,EACdkzB,CACX,CACO,SAASC,EAAkBC,EAAIC,EAAIC,EAAIC,GAC1C,OAAO3sB,EAAAA,EAAOU,OAAQ8rB,EAAG11B,GAAK41B,EAAKC,IAAQD,EAAKC,GAAc,EAAPF,EAAG31B,EAAQ61B,GAAOD,EAAKC,GAAKH,EAAGz1B,EAC1F,CAsBO,SAAS61B,EAAkC3uB,GAC9C,MAAO,CACHnH,EAAGmH,EAAKjG,UAAUlB,GAAKuE,IAAc4C,EAAK7J,KAAKvC,MAC/CkF,EAAGkH,EAAKjG,UAAUjB,GAAKsE,IAAc4C,EAAK7J,KAAKxC,OAEvD,CAQO,SAASi7B,EAAWC,GACvB,OAAOA,EAASA,EAAMC,SAAS,KAAOC,WAAWF,GAAS,IAAME,WAAWF,GAAU,CACzF,C,0DC9IO,MAAM1mB,UAAkBklB,EAAAA,EAC3B76B,WAAAA,CAAYqG,EAAGC,EAAGlF,EAAOD,GACrBjB,MAAMmG,EAAGC,GACTnG,KAAKwD,KAAO,CACRxC,OAAQA,EACRC,MAAOA,EAEf,CACAyZ,QAAAA,CAASoV,GACL,MAAMuM,EAAIr8B,KAAKwD,KAAKvC,MAAOoL,EAAIrM,KAAKwD,KAAKxC,OAAQgH,EAAMhI,KAAKoH,SAC5D,OAAO0oB,EAAM5pB,GAAK8B,EAAI9B,GAAK4pB,EAAM5pB,GAAK8B,EAAI9B,EAAIm2B,GAAKvM,EAAM3pB,GAAK6B,EAAI7B,GAAK2pB,EAAM3pB,GAAK6B,EAAI7B,EAAIkG,CAC9F,CACA0jB,UAAAA,CAAW1P,GACHA,aAAiBtN,EAAAA,GACjBsN,EAAM0P,WAAW/vB,MAErB,MAAMq8B,EAAIr8B,KAAKwD,KAAKvC,MAAOoL,EAAIrM,KAAKwD,KAAKxC,OAAQqb,EAAOrc,KAAKoH,SAAUkV,EAAO+D,EAAMjZ,SAAUk1B,EAAQjc,aAAiB7K,EAAY6K,EAAM7c,KAAO,CAAEvC,MAAO,EAAGD,OAAQ,GAAKu7B,EAAKD,EAAMr7B,MAAOu7B,EAAKF,EAAMt7B,OACtM,OAAOsb,EAAKpW,EAAImW,EAAKnW,EAAIm2B,GAAK/f,EAAKpW,EAAIq2B,EAAKlgB,EAAKnW,GAAKoW,EAAKnW,EAAIkW,EAAKlW,EAAIkG,GAAKiQ,EAAKnW,EAAIq2B,EAAKngB,EAAKlW,CACpG,E,+ICpBG,MAAMs2B,EAAqB,YACrBC,EAAiB,cACjBC,EAAe,YACfvjB,EAAkB,eAClBwjB,EAAgB,aAChBxoB,EAAiB,cACjByoB,EAAkB,aAClBC,EAAgB,WAChBC,EAAiB,YACjBC,EAAmB,cACnBC,EAAc,SACdC,EAAwB,mBACxB7V,EAAc,qB,4RCV3B,MAAM8V,EAAU,CACZC,MAAOC,QAAQD,MACf7Y,MAAO8Y,QAAQ9Y,MACf+Y,KAAMD,QAAQC,KACdC,IAAKF,QAAQE,IACbC,QAASH,QAAQE,IACjBE,QAASJ,QAAQK,MAUd,SAAStW,IACZ,OAAO+V,CACX,CACA,SAASQ,EAAetwB,GACpB,MAAMqa,EAAM,CAAEnZ,SAAS,IAAS,MAAEqvB,EAAK,WAAEC,EAAU,SAAEC,EAAQ,cAAEC,EAAa,SAAEh4B,EAAQ,OAAEU,GAAW4G,EACnG,OAAIwwB,EAAWp6B,IAAMs6B,EAAct6B,KAC/Bo6B,EAAWp6B,IAAMs6B,EAAcr6B,KAC/Bm6B,EAAWn6B,IAAMq6B,EAAct6B,KAC/Bo6B,EAAWn6B,IAAMq6B,EAAcr6B,MAG9Bk6B,EAAMl6B,KAAOo6B,EAASr6B,KAAOm6B,EAAMl6B,MAAQo6B,EAASp6B,IAAMo6B,EAASr6B,KAAO,GAAKsC,EAAW,GAC1F63B,EAAMn6B,KAAOq6B,EAASp6B,KAAOk6B,EAAMn6B,KAAOq6B,EAASp6B,IAAMo6B,EAASr6B,KAAO,GAAKsC,EAAW,KAC1F2hB,EAAI3hB,SAAWA,GAAYU,EAC3BihB,EAAInZ,SAAU,GALPmZ,CAQf,CAOO,SAASsG,IACZ,MAAyB,qBAAX/oB,SAA2BA,QAAqC,qBAApBA,OAAOzC,WAA6ByC,OAAOzC,QACzG,CAIO,SAASw7B,EAAe5qB,GAC3B,IAHQ4a,KAAiC,qBAAfiQ,WAM1B,OAAOA,WAAW7qB,EACtB,CACO,SAAS8qB,EAAqBv5B,GACjC,IAAIqpB,KAAuC,qBAArBmQ,iBAGtB,OAAO,IAAIA,iBAAiBx5B,EAChC,CACO,SAASiQ,EAAU7R,EAAOq7B,GAC7B,OAAOr7B,IAAUq7B,GAAUj/B,EAAQi/B,IAAUA,EAAMzU,QAAQ5mB,IAAU,CACzE,CACOpB,eAAes3B,EAASN,EAAMD,GACjC,UACUl2B,SAAS67B,MAAMn8B,KAAK,GAAGw2B,GAAU,eAAeC,GAAQ,aAClE,CACA,MACA,CACJ,CAIO,SAAStZ,EAAc+e,EAAOna,GACjC,OAAOma,OAAgB3/B,IAAVwlB,MADmC1lB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,IACD0lB,EAAQma,EAAM5/B,OAJ1D,SAA0B4/B,GAC7B,OAAO92B,KAAKyI,OAAMtF,EAAAA,EAAAA,MAAc2zB,EAAM5/B,OAC1C,CAE0E8/B,CAAiBF,GAC3F,CACO,SAASjvB,EAAc2gB,EAAOtsB,EAAMoI,EAAQlD,EAAQF,GACvD,OAEG,SAAyB0F,EAAQ1K,EAAMoI,EAAQpD,GAClD,IAAI+1B,GAAS,EACR/1B,GAA2B,WAAdA,IACd+1B,EAASrwB,EAAOY,IAAMtL,EAAKxC,OAAS4K,EAAO1F,IAE3Cq4B,GAAY/1B,GAA2B,SAAdA,IACzB+1B,EAASrwB,EAAOG,MAAQzC,EAAO1F,IAE/Bq4B,GAAY/1B,GAA2B,UAAdA,IACzB+1B,EAASrwB,EAAOI,KAAO9K,EAAKvC,MAAQ2K,EAAOzF,IAE3Co4B,GAAY/1B,GAA2B,QAAdA,IACzB+1B,EAASrwB,EAAOW,OAASjD,EAAOzF,GAEpC,OAAOo4B,CACX,CAjBWC,CAAgBrwB,EAAgB2hB,EAAOpnB,GAAU,GAAIlF,EAAMoI,EAAQpD,EAC9E,CAiBO,SAAS2F,EAAgB2hB,EAAOpnB,GACnC,MAAO,CACHmG,OAAQihB,EAAM3pB,EAAIuC,EAClB4F,KAAMwhB,EAAM5pB,EAAIwC,EAChB2F,MAAOyhB,EAAM5pB,EAAIwC,EACjBoG,IAAKghB,EAAM3pB,EAAIuC,EAEvB,CACO,SAAS+1B,EAAW7M,GAAyB,QAAA9c,EAAAvW,UAAAC,OAATuW,EAAO,IAAA7V,MAAA4V,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAPD,EAAOC,EAAA,GAAAzW,UAAAyW,GAC9C,IAAK,MAAMC,KAAUF,EAAS,CAC1B,QAAetW,IAAXwW,GAAmC,OAAXA,EACxB,SAEJ,IAAKhX,EAASgX,GAAS,CACnB2c,EAAc3c,EACd,QACJ,CACA,MAAMypB,EAAgBx/B,MAAMC,QAAQ8V,IAChCypB,IAAkBzgC,EAAS2zB,IAAiBA,GAAgB1yB,MAAMC,QAAQyyB,GAGpE8M,IAAkBzgC,EAAS2zB,IAAiBA,IAAe1yB,MAAMC,QAAQyyB,KAC/EA,EAAc,CAAC,GAHfA,EAAc,GAKlB,IAAK,MAAM9yB,KAAOmW,EAAQ,CACtB,GAAY,cAARnW,EACA,SAEJ,MAA2BiE,EAARkS,EAA2BnW,GAAM6/B,EAAW/M,EAC/D+M,EAAS7/B,GACLb,EAAS8E,IAAU7D,MAAMC,QAAQ4D,GAC3BA,EAAMc,KAAK+6B,GAAMH,EAAWE,EAAS7/B,GAAM8/B,KAC3CH,EAAWE,EAAS7/B,GAAMiE,EACxC,CACJ,CACA,OAAO6uB,CACX,CACO,SAASlb,EAAiB7C,EAAM0C,GACnC,QAASsoB,EAA6BtoB,GAAOY,GAAMA,EAAEtU,QAAU+R,EAAUf,EAAMsD,EAAEtD,OACrF,CACO,SAAS4C,EAAe5C,EAAM0C,EAAM5R,GACvCmS,EAA0BP,GAAOT,IAC7B,MAAM6E,EAAU7E,EAAIjC,KAAmBiC,EAAIjT,QACzB+R,EAAUf,EAAM8G,IAKnC,SAA8B7E,EAAKnR,GACtC,MAAMsS,EAAYnB,EAAImB,UACtBH,EAA0BG,GAAY5U,IAClCsC,EAAStC,EAAUyT,EAAI,GAE/B,CATYgpB,CAAqBhpB,EAAKnR,EAC9B,GAER,CAOO,SAASgW,EAAQpE,EAAM2Q,GAC1B,GAAKA,GAAY3Q,EAGjB,OAAOsoB,EAA6BtoB,GAAOT,GArH/C,SAAuBoR,EAASjQ,GAC5B,MAAMyQ,EAAM5Q,EAA0BG,GAAY5U,GACvC6kB,EAAQ6X,QAAQ18B,KAE3B,OAAOlD,EAAQuoB,GAAOA,EAAIiK,MAAMxa,GAAMA,IAAKuQ,CAC/C,CAiHesX,CAAc9X,EAASpR,EAAImB,YAE1C,CACO,SAAS3B,EAA6BhC,GACzC,MAAO,CACHlM,SAAUkM,EAAErL,cACZS,OAAQ4K,EAAE9J,YACV+L,KAAMjC,EAAE2rB,UACRl5B,SAAUuN,EAAEvN,SACZU,OAAQ2I,EAAAA,EAAOU,QAAOrB,EAAAA,EAAAA,IAAS6E,EAAE7S,QAAQiO,OAAOtE,aAAaqE,EAAAA,EAAAA,IAAS6E,EAAE7S,QAAQiO,OAAOpE,WAE/F,CACO,SAAS+K,EAAa8F,EAAIC,GAC7B,MAAQlV,EAAGg5B,EAAe/4B,EAAGg5B,GAAkBhkB,EAAGpV,SAASq5B,IAAIhkB,EAAGrV,WAAYsW,EAAMC,GAAQ,CAACnB,EAAG/T,SAAUgU,EAAGhU,WAAawC,GAAIy1B,EAAOx1B,GAAIy1B,IAAUx1B,EAAAA,EAAAA,IAAawS,EAAMD,GACtK,GAAI6iB,EAAgBG,EAAQF,EAAgBG,EAAQ,EAChD,OAEJ,MAAM72B,GAASnB,KAAK4I,MAAMovB,EAAOD,GAAQvD,EAAK3gB,EAAG5F,KAAMwmB,EAAK3gB,EAAG7F,KAAMgqB,EAAKpkB,EAAGpV,SAAS2oB,OAAOjmB,GAAQ+2B,EAAKpkB,EAAGrV,SAAS2oB,OAAOjmB,GAAQmzB,GAAKD,EAAAA,EAAAA,IAAkB4D,EAAIC,EAAI1D,EAAIC,GAAKF,GAAKF,EAAAA,EAAAA,IAAkB6D,EAAID,EAAIzD,EAAIC,GAAK0D,EAAU7D,EAAGlN,QAAQjmB,GAAQi3B,EAAU7D,EAAGnN,QAAQjmB,GACvQ0S,EAAGpV,SAASG,EAAIu5B,EAAQv5B,EAAIiV,EAAG1U,OAAOP,EACtCiV,EAAGpV,SAASI,EAAIs5B,EAAQt5B,EAAIgV,EAAG1U,OAAON,EACtCiV,EAAGrV,SAASG,EAAIw5B,EAAQx5B,EAAIkV,EAAG3U,OAAOP,EACtCkV,EAAGrV,SAASI,EAAIu5B,EAAQv5B,EAAIiV,EAAG3U,OAAON,CAC1C,CACO,SAASsP,EAAWvQ,EAAUy6B,GACjC,MAAkEzxB,EAASC,EAA9DjJ,EAAS+C,cAAsB/C,EAASsE,aAAmDo2B,EAAOjC,EAAe,CAC1HC,MAAO,CACHn6B,IAAKyK,EAAOI,KACZ5K,IAAKwK,EAAOG,OAEhBwvB,WAAY,CACRp6B,IAAKyK,EAAOY,IACZpL,IAAKwK,EAAOW,QAEhBivB,SAAU,CACNr6B,IAAKk8B,EAAUrxB,KACf5K,IAAKi8B,EAAUtxB,OAEnB0vB,cAAe,CACXt6B,IAAKk8B,EAAU7wB,IACfpL,IAAKi8B,EAAU9wB,QAEnB9I,SAAUb,EAASa,SAASG,EAC5BO,QAAQgI,EAAAA,EAAAA,IAASvJ,EAASzE,QAAQiO,OAAOtE,cAEzCw1B,EAAKrxB,eACiB9P,IAAlBmhC,EAAK75B,WACLb,EAASa,SAASG,EAAI05B,EAAK75B,eAETtH,IAAlBmhC,EAAKx4B,WACLlC,EAASkC,SAASlB,EAAI05B,EAAKx4B,WAGnC,MAAMy4B,EAAOlC,EAAe,CACxBC,MAAO,CACHn6B,IAAKyK,EAAOY,IACZpL,IAAKwK,EAAOW,QAEhBgvB,WAAY,CACRp6B,IAAKyK,EAAOI,KACZ5K,IAAKwK,EAAOG,OAEhByvB,SAAU,CACNr6B,IAAKk8B,EAAU7wB,IACfpL,IAAKi8B,EAAU9wB,QAEnBkvB,cAAe,CACXt6B,IAAKk8B,EAAUrxB,KACf5K,IAAKi8B,EAAUtxB,OAEnBtI,SAAUb,EAASa,SAASI,EAC5BM,QAAQgI,EAAAA,EAAAA,IAASvJ,EAASzE,QAAQiO,OAAOpE,YAEzCu1B,EAAKtxB,eACiB9P,IAAlBohC,EAAK95B,WACLb,EAASa,SAASI,EAAI05B,EAAK95B,eAETtH,IAAlBohC,EAAKz4B,WACLlC,EAASkC,SAASjB,EAAI05B,EAAKz4B,UAGvC,CACO,SAAS0P,EAA0BgpB,EAAKn7B,GAC3C,OAAOxF,EAAQ2gC,GAAOA,EAAIj8B,KAAI,CAACoS,EAAMgO,IAAUtf,EAASsR,EAAMgO,KAAUtf,EAASm7B,EAAK,EAC1F,CACO,SAASrmB,EAAyBqmB,EAAK7b,EAAO8b,GACjD,OAAO5gC,EAAQ2gC,GAAOzgB,EAAcygB,EAAK7b,EAAO8b,GAAYD,CAChE,CACO,SAASjB,EAA6BiB,EAAKn7B,GAC9C,OAAOxF,EAAQ2gC,GAAOA,EAAI/T,MAAK,CAAC5U,EAAG8M,IAAUtf,EAASwS,EAAG8M,KAAUtf,EAASm7B,EAAK,GAAKA,OAAMrhC,CAChG,CACO,SAASwO,EAAkCxM,EAASqI,GACvD,MAAMk3B,EAAav/B,EAAQsC,MAAOk9B,EAAmBx/B,EAAQ2L,UAAWsb,EAAM,CAC1E/b,UAAmD,KAAxCvD,EAAAA,EAAAA,IAAc63B,EAAiB9S,OAC1CtqB,OAAQo9B,EAAiBp9B,OACzBE,OAAOqF,EAAAA,EAAAA,IAAc3H,EAAQsC,OAAS+F,EACtCpF,KAAK6F,EAAAA,EAAAA,IAAYy2B,GAAcl3B,EAC/BrF,KAAK03B,EAAAA,EAAAA,IAAY6E,GAAcl3B,EAC/B2C,MAAO,EACPD,UAAUpD,EAAAA,EAAAA,IAAc63B,EAAiB3tB,OACzC5G,KAAM,GAEV,GAAIu0B,EAAiBp9B,OAAQ,CAEzB,OADA6kB,EAAI/gB,MAAQ,GAAIyB,EAAAA,EAAAA,IAAc63B,EAAiBt5B,OACvCs5B,EAAiBpsB,MACrB,IAAK,WACD6T,EAAI5b,OAAS,aACb,MACJ,IAAK,WACD4b,EAAI5b,OAAS,aACb,MACJ,IAAK,SACD4b,EAAI5b,QAASrB,EAAAA,EAAAA,OAAe,GAAM,aAAe,aAGzD,MAAMy1B,EAAuC,SAA1BD,EAAiBpsB,KACpC,OAAQosB,EAAiBE,YACrB,IAAK,MACDzY,EAAI3kB,MAAQ2kB,EAAIjkB,IACZy8B,IACAxY,EAAI5b,OAAS,cAEjB,MACJ,IAAK,MACD4b,EAAI3kB,MAAQ2kB,EAAIhkB,IACZw8B,IACAxY,EAAI5b,OAAS,cAEjB,MAEJ,QACI4b,EAAI3kB,OAAQ8I,EAAAA,EAAAA,IAAc6b,GACtBwY,IACAxY,EAAI5b,QAASrB,EAAAA,EAAAA,OAAe,GAAM,aAAe,cAIjE,CAEA,OADAid,EAAI0Y,aAAe1Y,EAAI3kB,MAChB2kB,CACX,CACA,SAAS2Y,EAAkBC,EAAgBlyB,GAEvC,KAD0C,YAAxBkyB,EAAezsB,MACjB,CACZ,MAAQA,KAAM0sB,KAAMC,GAASF,EAC7B,OAAOE,CACX,CAEA,MADmB,MAAOF,EAEf,CACHp6B,EAAIo6B,EAAep6B,EAAI,IAAOkI,EAAWnN,MACzCkF,EAAIm6B,EAAen6B,EAAI,IAAOiI,EAAWpN,QAItC,CACHC,MAAQq/B,EAAer/B,MAAQ,IAAOmN,EAAWnN,MACjDD,OAASs/B,EAAet/B,OAAS,IAAOoN,EAAWpN,OAG/D,CACO,SAASiH,EAAYb,EAAUgH,GAClC,OAAOiyB,EAAkBj5B,EAAUgH,EACvC,CAIO,SAASitB,EAAUoF,GACtB,MAAsB,mBAARA,CAClB,CACO,SAASC,EAASD,GACrB,MAAsB,kBAARA,CAClB,CACO,SAASrF,EAASqF,GACrB,MAAsB,kBAARA,CAClB,CACO,SAASE,EAAWF,GACvB,MAAsB,oBAARA,CAClB,CACO,SAASxiC,EAASwiC,GACrB,MAAsB,kBAARA,GAA4B,OAARA,CACtC,CACO,SAASthC,EAAQshC,GACpB,OAAOvhC,MAAMC,QAAQshC,EACzB,C,gFC7UA,SAASG,EAAkBn6B,EAAQo6B,EAAW/hC,GAC1C,MAAM6pB,EAAWkY,EAAU/hC,QACVL,IAAbkqB,IACAliB,EAAO3H,IAAQ2H,EAAO3H,IAAQ,GAAK6pB,EAE3C,CACO,MAAMmY,EACTjhC,WAAAA,CAAYoC,GACRjC,KAAKiC,UAAYA,EACjBjC,KAAK+gC,uBAA0B77B,IAC3B,IAAK,MAAMwL,KAAW1Q,KAAKghC,kBACvBtwB,EAAQuwB,WAAavwB,EAAQuwB,UAAU/7B,EAC3C,EAEJlF,KAAKkhC,sBAAwB,CAAChmB,EAAKhW,EAAUwD,EAAQy4B,EAAUC,EAAaC,KACxE,IAAK,MAAM3wB,KAAW1Q,KAAKshC,iBAAkB,CACzC,GAAI5wB,EAAQ6wB,eAAgB,CACxB,MAAM,KAAEvV,EAAI,OAAEpP,GAAWlM,EAAQ6wB,eAAer8B,EAAUgW,EAAKxS,EAAQy4B,GACnEnV,IACAoV,EAAYpV,KAAOA,GAEnBpP,IACAwkB,EAAYxkB,OAASA,EAE7B,CACA,GAAIlM,EAAQ8wB,mBAAoB,CAC5B,MAAMC,EAAmB/wB,EAAQ8wB,mBAAmBt8B,GACpD,IAAK,MAAMpG,KAAO2iC,EACdb,EAAkBS,EAAWI,EAAkB3iC,EAEvD,CACA4R,EAAQgxB,YAAchxB,EAAQgxB,WAAWx8B,EAC7C,GAEJlF,KAAK2hC,oBAAsB,KACvB,IAAK,MAAM5zB,KAAU/N,KAAK4hC,eACtB7zB,EAAO8zB,QAAU9zB,EAAO8zB,QAC5B,EAEJ7hC,KAAK8hC,yBAA4B58B,IAC7B,IAAI68B,EAAQC,EACZ,IAAK,MAAMj0B,KAAU/N,KAAKiiC,cAOtB,IANKF,GAAUh0B,EAAOm0B,oBAClBH,GAAS91B,EAAAA,EAAAA,IAAgB8B,EAAOm0B,kBAAkBh9B,MAEjD88B,GAAUj0B,EAAOo0B,sBAClBH,GAAS/1B,EAAAA,EAAAA,IAAgB8B,EAAOo0B,oBAAoBj9B,KAEpD68B,GAAUC,EACV,MAGR,MAAO,CAACD,EAAQC,EAAO,EAE3BhiC,KAAKoiC,WAAa,KACd,MAA8CC,EAA9BriC,KAAKiC,UAAUkR,cAA+Bwf,eAAe0P,MAAOv/B,EAAQu/B,EAAMv/B,MAAOw/B,GAAW5P,EAAAA,EAAAA,IAAgB5vB,GACpI,GAAIw/B,EAAU,CACV,MAAMC,EAAa,IACZD,EACHne,EAAGke,EAAMr1B,SAEbhN,KAAKwiC,kBAAmBvmB,EAAAA,EAAAA,IAAgBsmB,EAAYA,EAAWpe,EACnE,GAEJnkB,KAAKyiC,WAAa,KACd,MAAMvb,EAAUlnB,KAAKknB,QAASzmB,EAAUT,KAAKiC,UAAUkR,cACvD,GAAK+T,EAAL,CAGIlnB,KAAK0iC,aACL1iC,KAAK2iC,gBAAiBlE,EAAAA,EAAAA,IAAW,CAAC,EAAGvX,EAAQhmB,OAC7ClB,KAAK4iC,uBAGL5iC,KAAK6iC,sBAET,IAAK,MAAM/jC,KAAO2B,EAAQS,MAAO,CAC7B,IAAKpC,IAAQ2B,EAAQS,MACjB,SAEJ,MAAM6B,EAAQtC,EAAQS,MAAMpC,GACvBiE,GAGLmkB,EAAQhmB,MAAM4hC,YAAYhkC,EAAKiE,EAAO,YAC1C,CAjBA,CAiBA,EAEJ/C,KAAK+iC,WAAaphC,UACd,MAAMlB,EAAUT,KAAKiC,UAAUkR,cAAe6vB,EAAQviC,EAAQ2B,UAAUgB,KAAK4/B,MAAOC,EAAYD,EAAMhX,KACtG,GAAKgX,EAAMngC,OAGX,GAAIogC,EAAUngC,MAAO,CACjB,MAAMogC,GAAYxQ,EAAAA,EAAAA,IAAgBuQ,EAAUngC,OAC5C,IAAKogC,EACD,OAEJ,MAAMF,EAAQviC,EAAQ2B,UAAUgB,KAAK4/B,MACrChjC,KAAKmjC,WAAa,CACdrgC,MAAO,IACAogC,GAEPl2B,QAAS,EAAIg2B,EAAMxkC,OAE3B,YAEU,IAAIqoB,SAAQ,CAACC,EAASsc,KACxB,IAAKH,EAAU7e,MACX,OAEJ,MAAM4C,EAAMxkB,SAAS6gC,cAAc,OACnCrc,EAAIG,iBAAiB,QAAQ,KACzBnnB,KAAKmjC,WAAa,CACd/e,MAAO4C,EACPha,QAAS,EAAIg2B,EAAMxkC,QAEvBsoB,GAAS,IAEbE,EAAIG,iBAAiB,SAAUmc,IAC3BF,EAAOE,EAAI/e,MAAM,IAErByC,EAAIM,IAAM2b,EAAU7e,KAAK,GAEjC,EAEJpkB,KAAKujC,WAAcC,IACfxjC,KAAK4K,MAAMsQ,IAAQuoB,EAAAA,EAAAA,IAAUvoB,EAAKlb,KAAKwD,KAAMggC,IAAW,EAE5DxjC,KAAK0jC,YAAc,CAACtf,EAAOpX,KACvBhN,KAAK4K,MAAMsQ,IAAQyoB,EAAAA,EAAAA,IAAWzoB,EAAKlb,KAAKwD,KAAM4gB,EAAOpX,IAAS,EAElEhN,KAAK4jC,aAAe,KAChB,MAAM1c,EAAUlnB,KAAKknB,QAChBA,IAGLlnB,KAAK6jC,uBAAuBC,GAAaA,EAASC,eAClD/jC,KAAKyiC,aACLziC,KAAKgkC,iBACLhkC,KAAK6jC,uBAAuBC,GAAaA,EAASG,QAAQ/c,EAAS,CAAEgd,YAAY,MAAQ,EAE7FlkC,KAAK6iC,oBAAsB,KACvB,MAAM3b,EAAUlnB,KAAKknB,QAASid,EAAgBnkC,KAAK2iC,eACnD,IAAMzb,IAAWid,EACb,OAEJ,MAAMjjC,EAAQgmB,EAAQhmB,MACtBA,EAAMkG,SAAW+8B,EAAc/8B,SAC/BlG,EAAM8F,OAASm9B,EAAcn9B,OAC7B9F,EAAM4N,IAAMq1B,EAAcr1B,IAC1B5N,EAAMoN,KAAO61B,EAAc71B,KAC3BpN,EAAMD,MAAQkjC,EAAcljC,MAC5BC,EAAMF,OAASmjC,EAAcnjC,MAAM,EAEvChB,KAAK6jC,sBAAyBl/B,IACrB3E,KAAKokC,mBAGVz/B,EAAS3E,KAAKokC,kBAAkB,EAEpCpkC,KAAK4iC,oBAAsB,KACvB,MAAM1b,EAAUlnB,KAAKknB,QACrB,IAAKA,EACD,OAEJ,MAAMmd,EAAW,YAAanjC,EAAQgmB,EAAQhmB,MAC9CA,EAAM4hC,YAAY,WAAY,QAASuB,GACvCnjC,EAAM4hC,YAAY,UAAW9iC,KAAKiC,UAAUkR,cAAcvQ,WAAWoE,OAAOs9B,SAAS,IAAKD,GAC1FnjC,EAAM4hC,YAAY,MAAO,IAAKuB,GAC9BnjC,EAAM4hC,YAAY,OAAQ,IAAKuB,GAC/BnjC,EAAM4hC,YAAY,QAAS,OAAQuB,GACnCnjC,EAAM4hC,YAAY,SAAU,OAAQuB,EAAS,EAEjDrkC,KAAKwD,KAAO,CACRxC,OAAQ,EACRC,MAAO,GAEXjB,KAAKukC,SAAW,KAChBvkC,KAAKwkC,YAAa,EAClBxkC,KAAKshC,iBAAmB,GACxBthC,KAAKghC,kBAAoB,GACzBhhC,KAAK4hC,eAAiB,GACtB5hC,KAAKiiC,cAAgB,EACzB,CACA,eAAIS,GACA,OAAO1iC,KAAKiC,UAAUkR,cAAcvQ,WAAWC,MACnD,CACAoR,KAAAA,GACI,MAAMxT,EAAUT,KAAKiC,UAAUkR,cAAe6vB,EAAQviC,EAAQ2B,UAAUgB,KAAK4/B,MAAOC,EAAYjjC,KAAKmjC,WACjG1iC,EAAQkyB,eAAe9vB,OACvB7C,KAAKykC,QAEAzB,EAAMngC,QAAUmgC,EAAMxkC,OAAS,GAAKykC,EACrCA,EAAUngC,MACV9C,KAAKujC,YAAWtnB,EAAAA,EAAAA,IAAgBgnB,EAAUngC,MAAOmgC,EAAUj2B,UAEtDi2B,EAAU7e,OACfpkB,KAAK0jC,YAAYT,EAAU7e,MAAO6e,EAAUj2B,SAIhDhN,KAAK4K,MAAMsQ,KACPjH,EAAAA,EAAAA,IAAMiH,EAAKlb,KAAKwD,KAAK,GAGjC,CACApD,OAAAA,GAEI,GADAJ,KAAK0kC,OACD1kC,KAAKwkC,WAAY,CACjB,MAAMtd,EAAUlnB,KAAKknB,QACrBA,GAAWA,EAAQzX,QACvB,MAEIzP,KAAK6iC,sBAET7iC,KAAKshC,iBAAmB,GACxBthC,KAAKghC,kBAAoB,GACzBhhC,KAAK4hC,eAAiB,GACtB5hC,KAAKiiC,cAAgB,EACzB,CACAr3B,IAAAA,CAAK+5B,GACD,MAAMzpB,EAAMlb,KAAKukC,SACjB,GAAKrpB,EAGL,OAAOypB,EAAGzpB,EACd,CACA8Z,YAAAA,CAAa9vB,EAAUK,GACnB,GAAIL,EAASyH,UAAYzH,EAAS0D,UAC9B,OAEJ,MAAMF,EAASxD,EAASsE,YACxB,GAAId,GAAU,EACV,OAEJ,MAAMk8B,EAAU1/B,EAASyU,eAAgBkrB,EAAU3/B,EAAS4/B,kBAAoBF,EAChF,IAAK7C,EAAQC,GAAUhiC,KAAK8hC,yBAAyB58B,GAChD68B,IACDA,EAAS6C,GAER5C,IACDA,EAAS6C,IAER9C,GAAWC,IAGhBhiC,KAAK4K,MAAMsQ,IACP,MAAMjZ,EAAYjC,KAAKiC,UAAWxB,EAAUwB,EAAUkR,cAAepM,EAAgB7B,EAASzE,QAAQuG,OAAQ+9B,GAAkB,EAAI7/B,EAASgC,eAAiBH,EAAci+B,YAAah4B,EAAU9H,EAAS6S,OAAO/K,SAAW9H,EAAS8H,SAASjK,OAAS,EAAsDo+B,EAAWn0B,EAAU+3B,EAAgBE,GAAxE//B,EAAS8yB,eAAiBhrB,GAA+E+3B,EAAgB1D,EAAY,CAAC,EAAGD,EAAc,CAC/ZpV,KAAM+V,GAAS/lB,EAAAA,EAAAA,IAAgB+lB,EAAQZ,QAAY1iC,GAEvD2iC,EAAYxkB,OAASolB,GAAShmB,EAAAA,EAAAA,IAAgBgmB,EAAQiD,GAAkB7D,EAAYpV,KACpFhsB,KAAKkhC,sBAAsBhmB,EAAKhW,EAAUwD,EAAQy4B,EAAUC,EAAaC,IACzErM,EAAAA,EAAAA,IAAa,CACT/yB,YACA4I,QAASqQ,EACThW,WACAK,QACA67B,cACAzO,eAAgBlyB,EAAQkyB,eAAe9vB,OACvC2wB,UAAW/yB,EAAQkyB,eAAea,UAClC9qB,OAAQA,GAAU,EAAIxD,EAASgC,eAAiBH,EAAcm+B,SAC9Dl4B,QAASm0B,EACT1Q,OAAQvrB,EAASzE,QAAQgwB,OACzB4Q,cAEJrhC,KAAK+gC,uBAAuB77B,EAAS,GAE7C,CACAigC,kBAAAA,CAAmBp3B,EAAQ7I,EAAUK,GACjCvF,KAAK4K,MAAMsQ,IAAQiqB,EAAAA,EAAAA,IAAmBjqB,EAAKnN,EAAQ7I,EAAUK,IACjE,CACA6/B,UAAAA,CAAWr3B,EAAQxI,GACfvF,KAAK4K,MAAMsQ,IAAQkqB,EAAAA,EAAAA,IAAWlqB,EAAKnN,EAAQxI,IAC/C,CACA,UAAMrF,GACFF,KAAK6jC,uBAAuBwB,GAAQA,EAAItB,eACxC/jC,KAAKokC,mBAAoBlG,EAAAA,EAAAA,KAAsBoH,IAC3C,IAAK,MAAMC,KAAUD,EACG,eAAhBC,EAAOzzB,MAAkD,UAAzByzB,EAAOC,eACvCxlC,KAAK4jC,cAEb,IAEJ5jC,KAAK6hC,SACL7hC,KAAKyiC,aACLziC,KAAKoiC,aACL,UACUpiC,KAAK+iC,YACf,CACA,MAAO0C,IACHre,EAAAA,EAAAA,MAAY7C,MAAMkhB,EACtB,CACAzlC,KAAKgkC,iBACLhkC,KAAK6jC,uBAAuBwB,IACnBrlC,KAAKknB,SAGVme,EAAIpB,QAAQjkC,KAAKknB,QAAS,CAAEgd,YAAY,GAAO,IAEnDlkC,KAAK0lC,eACL1lC,KAAK2lC,cACL3lC,KAAKykC,OACT,CACAT,cAAAA,GACI,MAA8C4B,EAA9B5lC,KAAKiC,UAAUkR,cAAoCyyB,WAAY1e,EAAUlnB,KAAKknB,QAC9F,IAAKA,EACD,OAEJ,MAAM2e,EAAe3e,EAAQhmB,MAC7B,GAAK2kC,EAAL,CAGA,GAAID,EAAW9iC,MAAO,CAClB,MAAMA,GAAQ4vB,EAAAA,EAAAA,IAAgBkT,EAAW9iC,OACzC+iC,EAAarf,gBAAkB1jB,GAAQmZ,EAAAA,EAAAA,IAAgBnZ,EAAO8iC,EAAW54B,SAAW,EACxF,MAEI64B,EAAarf,gBAAkB,GAEnCqf,EAAa3d,gBAAkB0d,EAAWxhB,OAAS,GACnDyhB,EAAaC,mBAAqBF,EAAWx+B,UAAY,GACzDy+B,EAAaE,iBAAmBH,EAAWI,QAAU,GACrDH,EAAaI,eAAiBL,EAAWpiC,MAAQ,EAXjD,CAYJ,CACAmiC,WAAAA,GACI3lC,KAAK4hC,eAAiB,GACtB,IAAK,MAAO,CAAE7zB,KAAW/N,KAAKiC,UAAU+L,QAChCD,EAAO8zB,QACP7hC,KAAK4hC,eAAeziB,KAAKpR,IAEzBA,EAAOm0B,mBAAqBn0B,EAAOo0B,sBACnCniC,KAAKiiC,cAAc9iB,KAAKpR,EAGpC,CACA23B,YAAAA,GACI1lC,KAAKshC,iBAAmB,GACxBthC,KAAKghC,kBAAoB,GACzB,IAAK,MAAMtwB,KAAW1Q,KAAKiC,UAAUG,UAAUuO,SACvCD,EAAQuwB,WACRjhC,KAAKghC,kBAAkB7hB,KAAKzO,IAE5BA,EAAQ6wB,gBAAkB7wB,EAAQ8wB,oBAAsB9wB,EAAQgxB,aAChE1hC,KAAKshC,iBAAiBniB,KAAKzO,EAGvC,CACAw1B,UAAAA,CAAWn+B,GACH/H,KAAKwkC,YAAcxkC,KAAKknB,SACxBlnB,KAAKknB,QAAQzX,SAEjBzP,KAAKwkC,WACDz8B,EAAOo+B,SAAW1J,EAAAA,MAAsB10B,EAAOo+B,QACF,SAAvCp+B,EAAOo+B,QAAQ1J,EAAAA,IACfz8B,KAAKwkC,WACfxkC,KAAKknB,QAAUnf,EACf/H,KAAKknB,QAAQkf,WAAa,OAC1BpmC,KAAK2iC,gBAAiBlE,EAAAA,EAAAA,IAAW,CAAC,EAAGz+B,KAAKknB,QAAQhmB,OAClDlB,KAAKwD,KAAKxC,OAAS+G,EAAOuO,aAC1BtW,KAAKwD,KAAKvC,MAAQ8G,EAAOqO,YACzBpW,KAAKukC,SAAWvkC,KAAKknB,QAAQ+D,WAAW,MACxCjrB,KAAK6jC,uBAAuBwB,IACnBrlC,KAAKknB,SAGVme,EAAIpB,QAAQjkC,KAAKknB,QAAS,CAAEgd,YAAY,GAAO,IAEnDlkC,KAAKiC,UAAUoG,OAAOnI,OACtBF,KAAKgkC,gBACT,CACAS,KAAAA,GACI,MAAMhkC,EAAUT,KAAKiC,UAAUkR,cAC/BnT,KAAK4K,MAAMsQ,IACHza,EAAQkyB,eAAe9vB,QAAUpC,EAAQkyB,eAAe0P,QACxDpuB,EAAAA,EAAAA,IAAMiH,EAAKlb,KAAKwD,MAChBxD,KAAKujC,WAAWvjC,KAAKwiC,mBAGrBxiC,KAAKujC,YACT,GAER,CACA1B,MAAAA,GACI,IAAK7hC,KAAKknB,QACN,OAAO,EAEX,MAAMjlB,EAAYjC,KAAKiC,UAAW6G,EAAU7G,EAAUoG,OAAOC,WAAY9E,EAAOvB,EAAU8F,OAAOvE,KAAM6iC,EAC5FrmC,KAAKknB,QAAQ9Q,YAActN,EADiEu9B,EAE3FrmC,KAAKknB,QAAQ5Q,aAAexN,EAExC,GAAIu9B,IAAmB7iC,EAAKxC,QACxBqlC,IAAkB7iC,EAAKvC,OACvBolC,IAAmBrmC,KAAKknB,QAAQlmB,QAChCqlC,IAAkBrmC,KAAKknB,QAAQjmB,MAC/B,OAAO,EAEX,MAAMqlC,EAAU,IAAK9iC,GASrB,OARAxD,KAAKknB,QAAQjmB,MAAQuC,EAAKvC,MAAQjB,KAAKknB,QAAQ9Q,YAActN,EAC7D9I,KAAKknB,QAAQlmB,OAASwC,EAAKxC,OAAShB,KAAKknB,QAAQ5Q,aAAexN,EAC5D9I,KAAKiC,UAAUskC,UACfvmC,KAAKwmC,aAAe,CAChBvlC,MAAOuC,EAAKvC,MAAQqlC,EAAQrlC,MAC5BD,OAAQwC,EAAKxC,OAASslC,EAAQtlC,UAG/B,CACX,CACA0jC,IAAAA,GACI1kC,KAAK6jC,uBAAuBwB,GAAQA,EAAItB,eACxC/jC,KAAKokC,uBAAoB3lC,EACzBuB,KAAK4K,MAAMsQ,IAAQjH,EAAAA,EAAAA,IAAMiH,EAAKlb,KAAKwD,OACvC,CACA,kBAAMijC,GACF,IAAKzmC,KAAKknB,UAAYlnB,KAAK6hC,SACvB,OAEJ,MAAM5/B,EAAYjC,KAAKiC,UAAWykC,EAAezkC,EAAU0kC,sBAC3D1kC,EAAUG,UAAUwkC,aACpB5mC,KAAK2hC,sBACD+E,SACMzkC,EAAUX,SAExB,ECxaJ,SAASulC,EAAe3f,EAAS4f,EAAOC,EAASC,EAAKvmC,GAClD,GAAIumC,EAAK,CACL,IAAIC,EAAa,CAAEC,SAAS,IACxB7L,EAAAA,EAAAA,IAAU56B,GACVwmC,EAAWE,QAAU1mC,OAEJhC,IAAZgC,IACLwmC,EAAaxmC,GAEjBymB,EAAQC,iBAAiB2f,EAAOC,EAASE,EAC7C,KACK,CACD,MAAMG,EAAgB3mC,EACtBymB,EAAQmgB,oBAAoBP,EAAOC,EAASK,EAChD,CACJ,CACO,MAAME,EACTznC,WAAAA,CAAYoC,GACRjC,KAAKiC,UAAYA,EACjBjC,KAAKunC,mBAAsB9B,IACvB,MAAMxjC,EAAYjC,KAAKiC,UAAWxB,EAAUwB,EAAUkR,cACtD,GAAInT,KAAKwnC,SAAU,CACf,MAAMC,EAAqBxlC,EAAUwQ,cAAcC,MAAOF,EAAWi1B,EAAmBrgC,SACxF,IAAKoL,EACD,OAEJi1B,EAAmB90B,cAAgB,IAAKH,GACxCi1B,EAAmBlvB,WAAY,IAAIF,MAAOC,UAC1C,MAAM5D,EAAUjU,EAAQgS,cAAc4B,OAAOK,SAC7CoC,EAAAA,EAAAA,IAA0BpC,EAAQb,MAAOA,GAAS7T,KAAKiC,UAAU2R,gBAAgBC,IACrF,CACe,aAAX4xB,EAAE3zB,MACFkC,YAAW,IAAMhU,KAAK0nC,qBAAqB,IAC/C,EAEJ1nC,KAAK2nC,mBAAsBlC,IACvB,MAAMmC,EAAanC,EAAGxjC,EAAYjC,KAAKiC,UAAWxB,EAAUwB,EAAUxB,QAASonC,EAAgBpnC,EAAQonC,cAAeC,EAAYF,EAAW7I,QAAU8I,EAAcE,KAAOF,EAAcG,MAAOC,EAAQxnC,EAAQynC,OAAOnc,MAAMkc,GAAUA,EAAMxjB,OAASqjB,IACnPG,GAASA,EAAMp3B,QAAQs3B,MACvBlmC,EAAUmmC,UAAUN,EACxB,EAEJ9nC,KAAKqoC,wBAA0B,KAC3B,MAAMpmC,EAAYjC,KAAKiC,UAAWxB,EAAUwB,EAAUkR,cACtDnT,KAAK0nC,oBACAjnC,EAAQ6nC,cAGT9lC,UAAYA,SAAS+lC,QACrBtmC,EAAUumC,YAAa,EACvBvmC,EAAUiC,UAGVjC,EAAUumC,YAAa,EACnBvmC,EAAU0c,qBACV1c,EAAUmC,MAAK,GAGfnC,EAAU2I,MAAK,IAEvB,EAEJ5K,KAAKyoC,oBAAsB9mC,UACnB3B,KAAK0oC,iBACLC,aAAa3oC,KAAK0oC,uBACX1oC,KAAK0oC,gBAEhB1oC,KAAK0oC,eAAiB10B,YAAWrS,UAC7B,MAAMoG,EAAS/H,KAAKiC,UAAU8F,OAC9BA,SAAiBA,EAAO0+B,cAAe,GACyB,IAAjEzmC,KAAKiC,UAAUkR,cAAcV,cAAc4B,OAAOwtB,OAAO1U,MAAa,EAE7EntB,KAAK4oC,8BAAgC,CAACC,EAAoB7B,KACtD,MAAM8B,EAAW9oC,KAAK+oC,UAAW9mC,EAAYjC,KAAKiC,UAAWxB,EAAUwB,EAAUkR,cAC3E61B,EAAkB/mC,EAAUwQ,cAAcyU,QAChD,IAAK8hB,EACD,OAEJ,MAAMC,EAAOD,EAAiBE,EAAWjnC,EAAU8F,OAAOmf,QACtDgiB,IACAA,EAAShoC,MAAMioC,cAAgBF,IAASC,EAAW,UAAY,SAE7DzoC,EAAQgS,cAAc4B,OAAOE,QAAQ1R,QAAUpC,EAAQgS,cAAc4B,OAAOK,QAAQ7R,UAG1FgkC,EAAemC,EAAiB50B,EAAAA,GAAgB00B,EAASM,UAAWpC,GACpEH,EAAemC,EAAiBnM,EAAAA,GAAiBiM,EAASO,WAAYrC,GACtEH,EAAemC,EAAiBjM,EAAAA,GAAgB+L,EAASQ,UAAWtC,GAC/DvmC,EAAQgS,cAAc4B,OAAOK,QAAQ7R,QAItCgkC,EAAemC,EAAiBlM,EAAAA,GAAegM,EAASS,cAAevC,GACvEH,EAAemC,EAAiBrM,EAAAA,GAAcmM,EAASU,QAASxC,GAChEH,EAAemC,EAAiBtM,EAAAA,GAAgBoM,EAASW,UAAWzC,IALpEH,EAAemC,EAAiBlM,EAAAA,GAAegM,EAASY,SAAU1C,GAOtEH,EAAemC,EAAiBH,EAAoBC,EAASa,WAAY3C,GACzEH,EAAemC,EAAiBhM,EAAAA,GAAkB8L,EAASc,YAAa5C,GAAI,EAEhFhnC,KAAK6pC,iBAAoB7C,IACrB,MAAM8B,EAAW9oC,KAAK+oC,UAAW9mC,EAAYjC,KAAKiC,UAA8C6nC,EAAzB7nC,EAAUkR,cAAoCV,cAAcs3B,UAAWb,EAAWjnC,EAAU8F,OAAOmf,QAC1K,IAAI2hB,EAAqBzvB,EAAAA,GACN,WAAf0wB,GACA7nC,EAAUwQ,cAAcyU,QAAUjiB,OAClC4jC,EAAqBjM,EAAAA,IAGrB36B,EAAUwQ,cAAcyU,QADJ,WAAf4iB,GAA2BZ,EACEA,EAASc,eAAiBd,EAASe,WAGnCf,EAEtClpC,KAAKkqC,kBAAkBlD,GACvBhnC,KAAKmqC,cAAcnD,GACnBhnC,KAAK4oC,8BAA8BC,EAAoB7B,GACnDxkC,UACAqkC,EAAerkC,SAAU06B,EAAAA,GAAuB4L,EAASsB,iBAAkBpD,GAAK,EACpF,EAEJhnC,KAAKkqC,kBAAqBlD,IACtB,MAAM8B,EAAW9oC,KAAK+oC,UAAWsB,GAAarM,EAAAA,EAAAA,IAAe,gCACxDqM,SAG+B5rC,IAAhC4rC,EAAWljB,sBAIgB1oB,IAA3B4rC,EAAWC,cAGXtD,EACAqD,EAAWC,YAAYxB,EAASyB,gBAGhCF,EAAWG,eAAe1B,EAASyB,iBAVnC1D,EAAewD,EAAY,SAAUvB,EAAS2B,YAAazD,GAW/D,EAEJhnC,KAAKmqC,cAAiBnD,IAClB,MAAM8B,EAAW9oC,KAAK+oC,UAAW9mC,EAAYjC,KAAKiC,UAClD,IADuEA,EAAUkR,cACpEV,cAAc4B,OAAOwtB,OAC9B,OAEJ,GAA8B,qBAAnB6I,eAEP,YADA7D,EAAe5hC,OAAQg4B,EAAAA,GAAa6L,EAASjH,OAAQmF,GAGzD,MAAMkC,EAAWjnC,EAAU8F,OAAOmf,QAC9BlnB,KAAK2qC,kBAAoB3D,GACrBkC,GACAlpC,KAAK2qC,gBAAgBC,UAAU1B,GAEnClpC,KAAK2qC,gBAAgB5G,oBACd/jC,KAAK2qC,kBAEN3qC,KAAK2qC,iBAAmB3D,GAAOkC,IACrClpC,KAAK2qC,gBAAkB,IAAID,gBAAe/oC,UACxBkpC,EAAQ9e,MAAM0Z,GAAMA,EAAEqF,SAAW5B,WAIzClpC,KAAKyoC,qBAAqB,IAEpCzoC,KAAK2qC,gBAAgB1G,QAAQiF,GACjC,EAEJlpC,KAAK+qC,WAAa,KACd,MAAM,cAAEt4B,GAAkBzS,KAAKiC,UAC/B,IAAKwQ,EACD,OAEJ,MAAM,MAAEC,GAAUD,EAClBC,EAAMH,UAAW,EACjBG,EAAMs4B,aAAet4B,EAAMtL,QAAQ,EAEvCpH,KAAKirC,iBAAoBxF,IACrB,MAAMxjC,EAAYjC,KAAKiC,UAAWxB,EAAUwB,EAAUkR,eAAe,MAAET,GAAUzQ,EAAUwQ,cAC3FC,EAAM6rB,QAAS,EACf,IAAIzwB,GAAU,EACd,MAAMo9B,EAAgBx4B,EAAMtL,SAC5B,GAAK8jC,GAAkBzqC,EAAQgS,cAAc4B,OAAOK,QAAQ7R,OAA5D,CAGA,IAAK,MAAO,CAAEkL,KAAW9L,EAAU+L,QAC/B,GAAKD,EAAOo9B,qBAGZr9B,EAAUC,EAAOo9B,mBAAmBD,GAChCp9B,GACA,MAGHA,GACD9N,KAAKunC,mBAAmB9B,GAE5B/yB,EAAMH,UAAW,CAbjB,CAasB,EAE1BvS,KAAK0nC,kBAAoB,KACrB,MAAMj1B,EAAgBzS,KAAKiC,UAAUwQ,cACrC,IAAKA,EACD,OAEJ,MAAMC,EAAQD,EAAcC,aACrBA,EAAMtL,gBACNsL,EAAMC,qBACND,EAAMs4B,aACbv4B,EAAc3G,OAASsN,EAAAA,GACvB1G,EAAM6rB,QAAS,EACf7rB,EAAMH,UAAW,CAAK,EAE1BvS,KAAKorC,gBAAmB3F,IACpB,MAAMxjC,EAAYjC,KAAKiC,UAAWxB,EAAUwB,EAAUkR,cAAeV,EAAgBxQ,EAAUwQ,cAAey2B,EAAWjnC,EAAU8F,OAAOmf,QAC1I,IAAKzU,IAAkBA,EAAcyU,QACjC,OAGJ,IAAIlf,EACJ,GAFAyK,EAAcC,MAAM6rB,QAAS,EAEzBkH,EAAE3zB,KAAK1Q,WAAW,WAAY,CAC9BpB,KAAKwnC,UAAW,EAChB,MAAM6D,EAAa5F,EACnB,GAAIhzB,EAAcyU,UAAYjiB,QAC1B,GAAIikC,EAAU,CACV,MAAMoC,EAAapC,EAASqC,wBAC5BvjC,EAAM,CACF9B,EAAGmlC,EAAWG,QAAUF,EAAWh9B,KACnCnI,EAAGklC,EAAWI,QAAUH,EAAWx8B,IAE3C,OAEC,GAAwC,WAApCrO,EAAQgS,cAAcs3B,UAAwB,CACnD,MAAM90B,EAASo2B,EAAWP,OAAQA,EAASO,EAAWK,cACtD,GAAIz2B,GAAU61B,GAAU5B,EAAU,CAC9B,MAAMyC,EAAa12B,EAAOs2B,wBAAyBK,EAAad,EAAOS,wBAAyBM,EAAa3C,EAASqC,wBACtHvjC,EAAM,CACF9B,EAAGmlC,EAAWzS,QAAU,EAAI+S,EAAWr9B,MAAQs9B,EAAWt9B,KAAOu9B,EAAWv9B,MAC5EnI,EAAGklC,EAAWS,QAAU,EAAIH,EAAW78B,KAAO88B,EAAW98B,IAAM+8B,EAAW/8B,KAElF,MAEI9G,EAAM,CACF9B,EAAGmlC,EAAWzS,SAAWyS,EAAWG,QACpCrlC,EAAGklC,EAAWS,SAAWT,EAAWI,QAGhD,MACSJ,EAAWP,SAAW5B,IAC3BlhC,EAAM,CACF9B,EAAGmlC,EAAWzS,SAAWyS,EAAWG,QACpCrlC,EAAGklC,EAAWS,SAAWT,EAAWI,SAGhD,MAGI,GADAzrC,KAAKwnC,SAAsB,cAAX/B,EAAE3zB,KACdo3B,EAAU,CACV,MAAM6C,EAAatG,EAAGuG,EAAYD,EAAWE,QAAQF,EAAWE,QAAQztC,OAAS,GAAIqtC,EAAa3C,EAASqC,wBAC3GvjC,EAAM,CACF9B,EAAG8lC,EAAUR,SAAWK,EAAWv9B,MAAQ,GAC3CnI,EAAG6lC,EAAUP,SAAWI,EAAW/8B,KAAO,GAElD,CAEJ,MAAMhG,EAAU7G,EAAUoG,OAAOC,WAC7BN,IACAA,EAAI9B,GAAK4C,EACTd,EAAI7B,GAAK2C,GAEb2J,EAAcC,MAAMtL,SAAWY,EAC/ByK,EAAc3G,OAASsI,EAAAA,EAAc,EAEzCpU,KAAKksC,UAAazG,IACd,MAAMnC,EAAMmC,EAAGwG,EAAU/sC,MAAMitC,KAAK7I,EAAI8I,gBACxC,IAAK,MAAMC,KAASJ,EAChBjsC,KAAKssC,SAASC,OAAOF,EAAMpmB,YAE/BjmB,KAAK0nC,mBAAmB,EAE5B1nC,KAAKwsC,eAAkB/G,IACnB,MAAMnC,EAAMmC,EAAGwG,EAAU/sC,MAAMitC,KAAK7I,EAAI8I,gBACxC,IAAK,MAAMC,KAASJ,EAChBjsC,KAAKssC,SAASC,OAAOF,EAAMpmB,YAE/BjmB,KAAKirC,iBAAiBxF,EAAE,EAE5BzlC,KAAKysC,YAAehH,IAChB,MAAMnC,EAAMmC,EAAGwG,EAAU/sC,MAAMitC,KAAK7I,EAAI8I,gBACxC,IAAK,MAAMC,KAASJ,EAChBjsC,KAAKssC,SAAS5pC,IAAI2pC,EAAMpmB,WAAYymB,YAAYC,OAEpD3sC,KAAKorC,gBAAgB3F,EAAE,EAE3BzlC,KAAKwnC,UAAW,EAChBxnC,KAAKssC,SAAW,IAAI/a,IACpBvxB,KAAK+oC,UAAY,CACbU,UAAWA,IAAMzpC,KAAK+qC,aACtBpB,WAAYA,IAAM3pC,KAAK0nC,oBACvB0B,UAAY3D,GAAMzlC,KAAKorC,gBAAgB3F,GACvC+D,QAAU/D,GAAMzlC,KAAKirC,iBAAiBxF,GACtC4D,WAAa5D,GAAMzlC,KAAKysC,YAAYhH,GACpC6D,UAAY7D,GAAMzlC,KAAKorC,gBAAgB3F,GACvCiE,SAAWjE,GAAMzlC,KAAKksC,UAAUzG,GAChCmE,YAAcnE,GAAMzlC,KAAKksC,UAAUzG,GACnC8D,cAAgB9D,GAAMzlC,KAAKwsC,eAAe/G,GAC1C2E,iBAAkBA,IAAMpqC,KAAKqoC,0BAC7BoC,YAAchF,GAAMzlC,KAAK2nC,mBAAmBlC,GAC5C8E,eAAiB9E,GAAMzlC,KAAK2nC,mBAAmBlC,GAC/C5D,OAAQA,KACJ7hC,KAAKyoC,qBAAqB,EAGtC,CACAmE,YAAAA,GACI5sC,KAAK6pC,kBAAiB,EAC1B,CACAgD,eAAAA,GACI7sC,KAAK6pC,kBAAiB,EAC1B,E,cC5TG,MAAMiD,EACTjtC,WAAAA,GACIG,KAAK8C,MAAQ,IAAIiU,EAAAA,EACjB/W,KAAK8C,MAAMC,MAAQ,GACnB/C,KAAKokB,MAAQ,GACbpkB,KAAKoH,SAAW,GAChBpH,KAAKgmC,OAAS,GACdhmC,KAAKwD,KAAO,GACZxD,KAAKgN,QAAU,CACnB,CACA9K,IAAAA,CAAKmL,GACIA,SAGc5O,IAAf4O,EAAKvK,QACL9C,KAAK8C,MAAQiU,EAAAA,EAAajH,OAAO9P,KAAK8C,MAAOuK,EAAKvK,aAEnCrE,IAAf4O,EAAK+W,QACLpkB,KAAKokB,MAAQ/W,EAAK+W,YAEA3lB,IAAlB4O,EAAKjG,WACLpH,KAAKoH,SAAWiG,EAAKjG,eAEL3I,IAAhB4O,EAAK24B,SACLhmC,KAAKgmC,OAAS34B,EAAK24B,aAELvnC,IAAd4O,EAAK7J,OACLxD,KAAKwD,KAAO6J,EAAK7J,WAEA/E,IAAjB4O,EAAKL,UACLhN,KAAKgN,QAAUK,EAAKL,SAE5B,EChCG,MAAM+/B,EACTltC,WAAAA,GACIG,KAAK8C,MAAQ,IAAIiU,EAAAA,EACjB/W,KAAK8C,MAAMC,MAAQ,OACnB/C,KAAKgN,QAAU,CACnB,CACA9K,IAAAA,CAAKmL,GACIA,SAGc5O,IAAf4O,EAAKvK,QACL9C,KAAK8C,MAAQiU,EAAAA,EAAajH,OAAO9P,KAAK8C,MAAOuK,EAAKvK,aAEjCrE,IAAjB4O,EAAKL,UACLhN,KAAKgN,QAAUK,EAAKL,SAE5B,ECfG,MAAMggC,EACTntC,WAAAA,GACIG,KAAKwzB,UAAY,kBACjBxzB,KAAKqiC,MAAQ,IAAI0K,EACjB/sC,KAAK6C,QAAS,CAClB,CACAX,IAAAA,CAAKmL,GACD,GAAKA,EAAL,CAMA,QAHuB5O,IAAnB4O,EAAKmmB,YACLxzB,KAAKwzB,UAAYnmB,EAAKmmB,gBAEP/0B,IAAf4O,EAAKg1B,MAAqB,CAC1B,MAAMA,EAAQh1B,EAAKg1B,MACbv/B,GAAS49B,EAAAA,EAAAA,IAASrzB,EAAKg1B,OAAS,CAAEv/B,MAAOuK,EAAKg1B,OAAUh1B,EAAKg1B,MACnEriC,KAAKqiC,MAAMngC,UAAqBzD,IAAhB4jC,EAAMv/B,MAAsBu/B,EAAQ,CAAEv/B,MAAOA,GACjE,MACoBrE,IAAhB4O,EAAKxK,SACL7C,KAAK6C,OAASwK,EAAKxK,OAVvB,CAYJ,ECvBG,MAAMoqC,EACTptC,WAAAA,GACIG,KAAK6C,QAAS,EACd7C,KAAKgH,OAAS,CAClB,CACA9E,IAAAA,CAAKmL,GACIA,SAGe5O,IAAhB4O,EAAKxK,SACL7C,KAAK6C,OAASwK,EAAKxK,aAEHpE,IAAhB4O,EAAKrG,SACLhH,KAAKgH,OAASqG,EAAKrG,QAE3B,ECfG,MAAMkmC,EACTrtC,WAAAA,GACIG,KAAK6C,QAAS,EACd7C,KAAK6T,KAAO,EAChB,CACA3R,IAAAA,CAAKmL,GACIA,SAGe5O,IAAhB4O,EAAKxK,SACL7C,KAAK6C,OAASwK,EAAKxK,aAELpE,IAAd4O,EAAKwG,OACL7T,KAAK6T,KAAOxG,EAAKwG,MAEzB,ECdG,MAAMs5B,EACTttC,WAAAA,GACIG,KAAKiX,UAAY,GACjBjX,KAAK6C,QAAS,EACd7C,KAAK6T,KAAO,GACZ7T,KAAK8R,KAAO,QAChB,CACA,MAAIvP,GACA,OAAOvC,KAAKotC,SAChB,CACA,MAAI7qC,CAAGQ,GACH/C,KAAKotC,UAAYrqC,CACrB,CACA,aAAIqqC,GACA,OAAOptC,KAAKkX,GAChB,CACA,aAAIk2B,CAAUrqC,GACV/C,KAAKkX,IAAMnU,CACf,CACA,OAAImU,GACA,OAAOJ,EAAAA,EAAAA,IAA0B9W,KAAKiX,WAAYE,GAAMA,EAAExU,QAAQ,IAAK,KAC3E,CACA,OAAIuU,CAAInU,GACJ/C,KAAKiX,WAAYH,EAAAA,EAAAA,IAA0B/T,GAAQoU,GAAM,IAAIA,KACjE,CACAjV,IAAAA,CAAKmL,GACD,IAAKA,EACD,OAEJ,MAAM6J,EAAM7J,EAAK6J,KAAO7J,EAAK+/B,WAAa//B,EAAK9K,QACnC9D,IAARyY,IACAlX,KAAKkX,IAAMA,QAEQzY,IAAnB4O,EAAK4J,YACLjX,KAAKiX,UAAY5J,EAAK4J,gBAENxY,IAAhB4O,EAAKxK,SACL7C,KAAK6C,OAASwK,EAAKxK,aAELpE,IAAd4O,EAAKwG,OACL7T,KAAK6T,KAAOxG,EAAKwG,WAEHpV,IAAd4O,EAAKyE,OACL9R,KAAK8R,KAAOzE,EAAKyE,KAEzB,EC9CG,MAAMu7B,EACTxtC,WAAAA,GACIG,KAAK6C,QAAS,EACd7C,KAAK4a,MAAQ,EACb5a,KAAKsuB,OAAS,EAClB,CACApsB,IAAAA,CAAKmL,GACIA,SAGe5O,IAAhB4O,EAAKxK,SACL7C,KAAK6C,OAASwK,EAAKxK,aAEJpE,IAAf4O,EAAKuN,QACL5a,KAAK4a,MAAQvN,EAAKuN,YAEFnc,IAAhB4O,EAAKihB,SACLtuB,KAAKsuB,OAASjhB,EAAKihB,QAE3B,EClBG,MAAMgf,EACTztC,WAAAA,GACIG,KAAK6C,QAAS,EACd7C,KAAK6T,KAAO,GACZ7T,KAAKiuB,SAAW,IAAIof,CACxB,CACAnrC,IAAAA,CAAKmL,GACIA,SAGe5O,IAAhB4O,EAAKxK,SACL7C,KAAK6C,OAASwK,EAAKxK,aAELpE,IAAd4O,EAAKwG,OACL7T,KAAK6T,KAAOxG,EAAKwG,MAErB7T,KAAKiuB,SAAS/rB,KAAKmL,EAAK4gB,UAC5B,EClBG,MAAMsf,EACT1tC,WAAAA,GACIG,KAAKmtB,MAAQ,GACbntB,KAAK6C,QAAS,CAClB,CACAX,IAAAA,CAAKmL,QACY5O,IAAT4O,SAGe5O,IAAf4O,EAAK8f,QACLntB,KAAKmtB,MAAQ9f,EAAK8f,YAEF1uB,IAAhB4O,EAAKxK,SACL7C,KAAK6C,OAASwK,EAAKxK,QAE3B,ECVG,MAAM2qC,EACT3tC,WAAAA,GACIG,KAAK0U,QAAU,IAAIw4B,EACnBltC,KAAKwW,MAAQ,IAAI22B,EACjBntC,KAAKuU,QAAU,IAAI+4B,EACnBttC,KAAK6hC,OAAS,IAAI0L,CACtB,CACA,WAAIE,GACA,OAAOztC,KAAK0U,OAChB,CACA,WAAI+4B,CAAQ1qC,GACR/C,KAAK0U,QAAU3R,CACnB,CACA,SAAI2qC,GACA,OAAO1tC,KAAKwW,KAChB,CACA,SAAIk3B,CAAM3qC,GACN/C,KAAKwW,MAAQzT,CACjB,CACA,WAAI4qC,GACA,OAAO3tC,KAAKuU,OAChB,CACA,WAAIo5B,CAAQ5qC,GACR/C,KAAKuU,QAAUxR,CACnB,CACAb,IAAAA,CAAKmL,GACD,IAAKA,EACD,OAEJrN,KAAK0U,QAAQxS,KAAKmL,EAAKqH,SAAWrH,EAAKogC,SACvC,MAAMj3B,EAAQnJ,EAAKmJ,OAASnJ,EAAKqgC,WACnBjvC,IAAV+X,IACAxW,KAAKwW,OAAQM,EAAAA,EAAAA,IAA0BN,GAAQW,IAC3C,MAAME,EAAM,IAAI81B,EAEhB,OADA91B,EAAInV,KAAKiV,GACFE,CAAG,KAGlBrX,KAAKuU,QAAQrS,KAAKmL,EAAKkH,SAAWlH,EAAKsgC,UACnCtS,EAAAA,EAAAA,IAAUhuB,EAAKw0B,QACf7hC,KAAK6hC,OAAOh/B,OAASwK,EAAKw0B,OAG1B7hC,KAAK6hC,OAAO3/B,KAAKmL,EAAKw0B,OAE9B,EClDG,MAAM+L,EACT/tC,WAAAA,CAAYyE,EAAQrC,GAChBjC,KAAK2T,QAAUrP,EACftE,KAAKgE,WAAa/B,CACtB,CACAC,IAAAA,CAAKmL,GACD,IAAKA,EACD,OAEJ,IAAKrN,KAAKgE,WACN,OAEJ,MAAM6pC,EAAc7tC,KAAK2T,QAAQ3F,QAAQ6/B,YAAYvc,IAAItxB,KAAKgE,YAC9D,GAAK6pC,EAGL,IAAK,MAAMC,KAAcD,EAChBC,EAAWj5B,iBAGhBi5B,EAAWj5B,gBAAgB7U,KAAMqN,EAEzC,ECpBG,MAAM0gC,EACTluC,WAAAA,CAAYyE,EAAQrC,GAChBjC,KAAK+pC,UAAY,SACjB/pC,KAAKqU,OAAS,IAAIm5B,EAClBxtC,KAAK2N,MAAQ,IAAIigC,EAAMtpC,EAAQrC,EACnC,CACA,aAAI+rC,GACA,OAAOhuC,KAAK+pC,SAChB,CACA,aAAIiE,CAAUjrC,GACV/C,KAAK+pC,UAAYhnC,CACrB,CACAb,IAAAA,CAAKmL,GACD,IAAKA,EACD,OAEJ,MAAM08B,EAAY18B,EAAK08B,WAAa18B,EAAK2gC,eACvBvvC,IAAdsrC,IACA/pC,KAAK+pC,UAAYA,GAErB/pC,KAAKqU,OAAOnS,KAAKmL,EAAKgH,QACtBrU,KAAK2N,MAAMzL,KAAKmL,EAAKM,MACzB,ECvBG,MAAMsgC,EACT/rC,IAAAA,CAAKmL,GACIA,IAGDA,EAAKjG,WACLpH,KAAKoH,SAAW,CACZlB,EAAGmH,EAAKjG,SAASlB,GAAK,GACtBC,EAAGkH,EAAKjG,SAASjB,GAAK,GACtB0N,KAAMxG,EAAKjG,SAASyM,MAAQ,YAGhCxG,EAAK5M,UACLT,KAAKS,SAAUg+B,EAAAA,EAAAA,IAAW,CAAC,EAAGpxB,EAAK5M,UAE3C,ECfG,MAAMytC,EACTruC,WAAAA,GACIG,KAAK8D,SAAW8kB,IAChB5oB,KAAKS,QAAU,CAAC,EAChBT,KAAK6T,KAAO,QAChB,CACA3R,IAAAA,CAAKmL,GACIA,SAGiB5O,IAAlB4O,EAAKvJ,WACL9D,KAAK8D,SAAWuJ,EAAKvJ,eAEPrF,IAAd4O,EAAKwG,OACa,WAAdxG,EAAKwG,KACL7T,KAAK6T,KAAO,SAGZ7T,KAAK6T,KAAO,eAGCpV,IAAjB4O,EAAK5M,UACLT,KAAKS,SAAUg+B,EAAAA,EAAAA,IAAW,CAAC,EAAGpxB,EAAK5M,UAE3C,ECzBG,MAAM0tC,EACTtuC,WAAAA,GACIG,KAAKmoC,MAAO,EACZnoC,KAAK6T,KAAO,MACZ7T,KAAK+C,OAAQ,CACjB,CACAb,IAAAA,CAAKmL,GACIA,SAGa5O,IAAd4O,EAAK86B,OACLnoC,KAAKmoC,KAAO96B,EAAK86B,WAEH1pC,IAAd4O,EAAKwG,OACL7T,KAAK6T,KAAOxG,EAAKwG,WAEFpV,IAAf4O,EAAKtK,QACL/C,KAAK+C,MAAQsK,EAAKtK,OAE1B,ECjBG,MAAMqrC,EACTvuC,WAAAA,GACIG,KAAKykB,KAAO,GACZzkB,KAAK6Q,QAAU,IAAIs9B,CACvB,CACAjsC,IAAAA,CAAKmL,GACIA,SAGa5O,IAAd4O,EAAKoX,OACLzkB,KAAKykB,KAAOpX,EAAKoX,MAErBzkB,KAAK6Q,QAAQ3O,KAAKmL,EAAKwD,cACFpS,IAAjB4O,EAAK5M,UACLT,KAAKS,SAAUg+B,EAAAA,EAAAA,IAAW,CAAC,EAAGpxB,EAAK5M,UAE3C,E,cCjBG,MAAM4tC,EACTxuC,WAAAA,GACIG,KAAKsS,MAAQ,EACbtS,KAAK6C,QAAS,EACd7C,KAAK4L,OAAS,EACd5L,KAAKqD,MAAQ,EACbrD,KAAKmtB,MAAQ,EACbntB,KAAK2G,MAAQ,EACb3G,KAAKmN,MAAO,CAChB,CACAjL,IAAAA,CAAKmL,GACIA,SAGc5O,IAAf4O,EAAKiF,QACLtS,KAAKsS,OAAQ0M,EAAAA,EAAAA,IAAc3R,EAAKiF,aAEhB7T,IAAhB4O,EAAKxK,SACL7C,KAAK6C,OAASwK,EAAKxK,aAEHpE,IAAhB4O,EAAKzB,SACL5L,KAAK4L,QAASoT,EAAAA,EAAAA,IAAc3R,EAAKzB,cAElBnN,IAAf4O,EAAKhK,QACLrD,KAAKqD,OAAQ2b,EAAAA,EAAAA,IAAc3R,EAAKhK,aAEjB5E,IAAf4O,EAAK1G,QACL3G,KAAK2G,OAAQqY,EAAAA,EAAAA,IAAc3R,EAAK1G,aAEjBlI,IAAf4O,EAAK8f,QACLntB,KAAKmtB,OAAQnO,EAAAA,EAAAA,IAAc3R,EAAK8f,aAElB1uB,IAAd4O,EAAKF,OACLnN,KAAKmN,KAAOE,EAAKF,MAEzB,ECnCG,MAAMmhC,EACTzuC,WAAAA,GACIG,KAAKqM,EAAI,IAAIgiC,EACbruC,KAAKuM,EAAI,IAAI8hC,EACbruC,KAAKyM,EAAI,IAAI4hC,CACjB,CACAnsC,IAAAA,CAAKmL,GACIA,IAGLrN,KAAKqM,EAAEnK,KAAKmL,EAAKhB,GACjBrM,KAAKuM,EAAErK,KAAKmL,EAAKd,GACjBvM,KAAKyM,EAAEvK,KAAKmL,EAAKZ,GACrB,ECXG,MAAM8hC,UAAwBx3B,EAAAA,EACjClX,WAAAA,GACIE,QACAC,KAAKoM,UAAY,IAAIkiC,CACzB,CACA,aAAOx+B,CAAOmF,EAAQ5H,GAClB,MAAMvK,EAAQ,IAAIyrC,EAUlB,OATAzrC,EAAMZ,KAAK+S,QACExW,IAAT4O,KACIqzB,EAAAA,EAAAA,IAASrzB,KAASlO,EAAAA,EAAAA,IAAQkO,GAC1BvK,EAAMZ,KAAK,CAAEa,MAAOsK,IAGpBvK,EAAMZ,KAAKmL,IAGZvK,CACX,CACAZ,IAAAA,CAAKmL,GAED,GADAtN,MAAMmC,KAAKmL,IACNA,EACD,OAEJ,MAAMmhC,EAAiBnhC,EAAKjB,eACL3N,IAAnB+vC,SAC8B/vC,IAA1B+vC,EAAe3rC,OACf7C,KAAKoM,UAAUC,EAAEnK,KAAKssC,GAGtBxuC,KAAKoM,UAAUlK,KAAKmL,EAAKjB,WAGrC,ECnCG,MAAMqiC,EACT5uC,WAAAA,GACIG,KAAKqD,MAAQ,CACjB,CACAnB,IAAAA,CAAKmL,GACIA,QAGc5O,IAAf4O,EAAKhK,QACLrD,KAAKqD,MAAQgK,EAAKhK,MAE1B,ECXG,MAAMqrC,EACT7uC,WAAAA,GACIG,KAAK6C,QAAS,EACd7C,KAAK2uC,QAAU,CACnB,CACAzsC,IAAAA,CAAKmL,GACIA,SAGe5O,IAAhB4O,EAAKxK,SACL7C,KAAK6C,OAASwK,EAAKxK,aAEFpE,IAAjB4O,EAAKshC,UACL3uC,KAAK2uC,QAAUthC,EAAKshC,SAE5B,E,cCdG,MAAMC,UAA8B9hB,EAAAA,GACvCjtB,WAAAA,GACIE,QACAC,KAAKgtB,OAAOC,aAAe,GAC3BjtB,KAAK+C,MAAQ,CACjB,ECLG,MAAM8rC,EACThvC,WAAAA,GACIG,KAAKoK,WAAa,IAAIwkC,EACtB5uC,KAAKsK,SAAW,IAAIskC,CACxB,CACA1sC,IAAAA,CAAKmL,GACIA,IAGLrN,KAAKoK,WAAWlI,KAAKmL,EAAKjD,YAC1BpK,KAAKsK,SAASpI,KAAKmL,EAAK/C,UAC5B,ECRG,MAAMwkC,EACTjvC,WAAAA,GACIG,KAAKmvB,OAAS,IAAIsf,EAClBzuC,KAAK0O,OAAS,IAAImgC,EAClB7uC,KAAK6C,QAAS,EACd7C,KAAKqF,SAAW,GAChBrF,KAAK6T,KAAO,SACZ7T,KAAK+uC,QAAU,IAAIL,CACvB,CACAxsC,IAAAA,CAAKmL,GACIA,IAGLrN,KAAKmvB,OAAOjtB,KAAKmL,EAAK8hB,QACtBnvB,KAAK0O,OAAOxM,KAAKmL,EAAKqB,aACFjQ,IAAhB4O,EAAKxK,SACL7C,KAAK6C,OAASwK,EAAKxK,aAEDpE,IAAlB4O,EAAKhI,WACLrF,KAAKqF,UAAW2Z,EAAAA,EAAAA,IAAc3R,EAAKhI,gBAErB5G,IAAd4O,EAAKwG,OACL7T,KAAK6T,KAAOxG,EAAKwG,MAErB7T,KAAK+uC,QAAQ7sC,KAAKmL,EAAK0hC,SAC3B,EC5BG,MAAMC,EACTnvC,WAAAA,GACIG,KAAK4L,OAAS,EACd5L,KAAK+C,MAAQ,EACjB,CACAb,IAAAA,CAAKmL,GACIA,SAGe5O,IAAhB4O,EAAKzB,SACL5L,KAAK4L,QAASoT,EAAAA,EAAAA,IAAc3R,EAAKzB,cAElBnN,IAAf4O,EAAKtK,QACL/C,KAAK+C,OAAQic,EAAAA,EAAAA,IAAc3R,EAAKtK,QAExC,ECfG,MAAMksC,EACTpvC,WAAAA,GACIG,KAAKiD,SAAW,IAChBjD,KAAK6C,QAAS,EACd7C,KAAK0uB,OAAS,CACVxoB,EAAG,IACHC,EAAG,IAEX,CACA,WAAI+oC,GACA,OAAOlvC,KAAK0uB,OAAOxoB,CACvB,CACA,WAAIgpC,CAAQnsC,GACR/C,KAAK0uB,OAAOxoB,EAAInD,CACpB,CACA,WAAIosC,GACA,OAAOnvC,KAAK0uB,OAAOvoB,CACvB,CACA,WAAIgpC,CAAQpsC,GACR/C,KAAK0uB,OAAOvoB,EAAIpD,CACpB,CACAb,IAAAA,CAAKmL,GACD,IAAKA,EACD,YAEkB5O,IAAlB4O,EAAKpK,WACLjD,KAAKiD,UAAW+b,EAAAA,EAAAA,IAAc3R,EAAKpK,gBAEnBxE,IAAhB4O,EAAKxK,SACL7C,KAAK6C,OAASwK,EAAKxK,QAEvB,MAAMqsC,EAAU7hC,EAAKqhB,QAAQxoB,GAAKmH,EAAK6hC,aACvBzwC,IAAZywC,IACAlvC,KAAK0uB,OAAOxoB,EAAIgpC,GAEpB,MAAMC,EAAU9hC,EAAKqhB,QAAQvoB,GAAKkH,EAAK8hC,aACvB1wC,IAAZ0wC,IACAnvC,KAAK0uB,OAAOvoB,EAAIgpC,EAExB,ECxCG,MAAMC,EACTvvC,WAAAA,GACIG,KAAKkG,EAAI,GACTlG,KAAKmG,EAAI,GACTnG,KAAK6T,KAAO,UACZ7T,KAAK0I,OAAS,CAClB,CACAxG,IAAAA,CAAKmL,GACIA,SAGU5O,IAAX4O,EAAKnH,IACLlG,KAAKkG,EAAImH,EAAKnH,QAEHzH,IAAX4O,EAAKlH,IACLnG,KAAKmG,EAAIkH,EAAKlH,QAEA1H,IAAd4O,EAAKwG,OACL7T,KAAK6T,KAAOxG,EAAKwG,WAEDpV,IAAhB4O,EAAK3E,SACL1I,KAAK0I,OAAS2E,EAAK3E,QAE3B,ECtBG,MAAM2mC,EACTxvC,WAAAA,GACIG,KAAK0G,aAAe,KACpB1G,KAAK6C,QAAS,EACd7C,KAAKwG,SAAU,EACfxG,KAAKqF,SAAW,EACpB,CACAnD,IAAAA,CAAKmL,GACIA,SAGqB5O,IAAtB4O,EAAK3G,eACL1G,KAAK0G,cAAesY,EAAAA,EAAAA,IAAc3R,EAAK3G,oBAEvBjI,IAAhB4O,EAAKxK,SACL7C,KAAK6C,OAASwK,EAAKxK,aAEFpE,IAAjB4O,EAAK7G,UACLxG,KAAKwG,QAAU6G,EAAK7G,cAEF/H,IAAlB4O,EAAKhI,WACLrF,KAAKqF,UAAW2Z,EAAAA,EAAAA,IAAc3R,EAAKhI,WAE3C,ECtBG,MAAMiqC,EACTzvC,WAAAA,GACIG,KAAKiG,OAAQ,EACbjG,KAAKmtB,MAAQ,IAAIL,EAAAA,GACjB9sB,KAAK6C,QAAS,EACd7C,KAAKS,QAAU,CAAC,CACpB,CACAyB,IAAAA,CAAKmL,GACIA,SAGc5O,IAAf4O,EAAKpH,QACLjG,KAAKiG,MAAQoH,EAAKpH,OAEtBjG,KAAKmtB,MAAMjrB,KAAKmL,EAAK8f,YACD1uB,IAAhB4O,EAAKxK,SACL7C,KAAK6C,OAASwK,EAAKxK,QAEvB7C,KAAKuvC,UAAYliC,EAAKkiC,UAClBliC,EAAK5M,UACLT,KAAKS,SAAUg+B,EAAAA,EAAAA,IAAWz+B,KAAKS,QAAS4M,EAAK5M,UAErD,ECvBG,MAAM+uC,EACTttC,IAAAA,CAAKmL,GACIA,SAGc5O,IAAf4O,EAAKvK,QACL9C,KAAK8C,MAAQiU,EAAAA,EAAajH,OAAO9P,KAAK8C,MAAOuK,EAAKvK,aAEnCrE,IAAf4O,EAAK+W,QACLpkB,KAAKokB,MAAQ/W,EAAK+W,OAE1B,ECXG,MAAMqrB,EACT5vC,WAAAA,GACIG,KAAK6C,QAAS,EACd7C,KAAKxB,OAAS,GACdwB,KAAKgsB,KAAO,IAAIwjB,CACpB,CACA,aAAItM,GACA,OAAOljC,KAAKgsB,KAAKlpB,KACrB,CACA,aAAIogC,CAAUngC,GACV/C,KAAKgsB,KAAK9pB,KAAK,CAAEY,MAAOC,GAC5B,CACAb,IAAAA,CAAKmL,GACIA,SAGe5O,IAAhB4O,EAAKxK,SACL7C,KAAK6C,OAASwK,EAAKxK,aAELpE,IAAd4O,EAAK2e,WAAyCvtB,IAAnB4O,EAAK61B,WAChCljC,KAAKgsB,KAAK9pB,KAAKmL,EAAK2e,MAAQ,CAAElpB,MAAOuK,EAAK61B,iBAE1BzkC,IAAhB4O,EAAK7O,SACLwB,KAAKxB,OAAS6O,EAAK7O,QAE3B,EC1BG,MAAMkxC,EACT7vC,WAAAA,GACIG,KAAK6Q,QAAU,KACnB,CACA3O,IAAAA,CAAKmL,GACIA,SAGgB5O,IAAjB4O,EAAKwD,UACL7Q,KAAK6Q,QAAUxD,EAAKwD,SAExB7Q,KAAK6O,OAASxB,EAAKwB,QAAUxB,EAAKwD,QAClC7Q,KAAKsO,KAAOjB,EAAKiB,MAAQjB,EAAKwD,QAC9B7Q,KAAKqO,MAAQhB,EAAKgB,OAAShB,EAAKwD,QAChC7Q,KAAK8O,IAAMzB,EAAKyB,KAAOzB,EAAKwD,QAChC,ECbG,MAAM8+B,EACT9vC,WAAAA,GACIG,KAAK0G,aAAe,EACpB1G,KAAK6C,QAAS,CAClB,CACAX,IAAAA,CAAKmL,GACIA,SAGqB5O,IAAtB4O,EAAK3G,eACL1G,KAAK0G,cAAesY,EAAAA,EAAAA,IAAc3R,EAAK3G,oBAEvBjI,IAAhB4O,EAAKxK,SACL7C,KAAK6C,OAASwK,EAAKxK,QAEnBwK,EAAKjG,WACLpH,KAAKoH,UAAWq3B,EAAAA,EAAAA,IAAW,CAAC,EAAGpxB,EAAKjG,WAE5C,ECVG,MAAMwoC,EACT/vC,WAAAA,GACIG,KAAKyI,MAAQ,IAAIumC,EACjBhvC,KAAKoS,QAAU,IAAI68B,EACnBjvC,KAAKuI,OAAS,IAAI6mC,EAClBpvC,KAAK2G,MAAQ,EACb3G,KAAKiD,SAAW,CAAC,EACjBjD,KAAKwI,UAAY,OACjBxI,KAAKqJ,MAAQ,EACbrJ,KAAK6C,QAAS,EACd7C,KAAKsG,QAAU,IAAI+oC,EACnBrvC,KAAK0F,KAAO,IAAI4pC,EAChBtvC,KAAK4Q,SAAW,IAAI8+B,EACpB1vC,KAAKgtB,QAAS,EACdhtB,KAAKwD,MAAO,EACZxD,KAAKqD,MAAQ,EACbrD,KAAK4H,KAAO,IAAI+nC,EAChB3vC,KAAK6vC,UAAW,EAChB7vC,KAAKgjC,MAAQ,IAAIyM,EACjBzvC,KAAKqH,SAAU,EACfrH,KAAKoQ,MAAO,CAChB,CACA,UAAI1B,GACA,OAAO1O,KAAKkvB,UAChB,CACA,UAAIxgB,CAAO3L,GACP/C,KAAKkvB,WAAansB,CACtB,CACA,cAAImsB,GACA,OAAO,CACX,CACA,cAAIA,CAAWqR,GACf,CACA,SAAIuP,GACA,OAAO9vC,KAAK0F,IAChB,CACA,SAAIoqC,CAAM/sC,GACN/C,KAAK0F,KAAO3C,CAChB,CACA,WAAI6K,GACA,OAAO5N,KAAK4Q,SAASC,OACzB,CACA,WAAIjD,CAAQ7K,GACR/C,KAAK4Q,SAASC,QAAU9N,CAC5B,CACA,YAAIgtC,GACA,OAAO/vC,KAAK4N,OAChB,CACA,YAAImiC,CAAShtC,GACT/C,KAAK4N,QAAU7K,CACnB,CACAb,IAAAA,CAAKmL,GACD,IAAKA,EACD,OAEJrN,KAAKyI,MAAMvG,MAAKk5B,EAAAA,EAAAA,IAAS/tB,EAAK5E,OAAS,CAAE1F,MAAOsK,EAAK5E,OAAU4E,EAAK5E,OACpEzI,KAAKoS,QAAQlQ,KAAKmL,EAAK+E,SACvBpS,KAAKuI,OAAOrG,KAAKmL,EAAK9E,aACH9J,IAAf4O,EAAK1G,QACL3G,KAAK2G,OAAQqY,EAAAA,EAAAA,IAAc3R,EAAK1G,aAEblI,IAAnB4O,EAAK7E,YACLxI,KAAKwI,UAAY6E,EAAK7E,gBAEJ/J,IAAlB4O,EAAKpK,WACLjD,KAAKiD,UAAWm4B,EAAAA,EAAAA,IAAS/tB,EAAKpK,UACxB,CACEmH,WAAYiD,EAAKpK,SACjBqH,SAAU+C,EAAKpK,UAEjB,IAAKoK,EAAKpK,gBAEDxE,IAAf4O,EAAKhE,QACLrJ,KAAKqJ,OAAQ2V,EAAAA,EAAAA,IAAc3R,EAAKhE,aAEhB5K,IAAhB4O,EAAKxK,SACL7C,KAAK6C,OAASwK,EAAKxK,QAEvB7C,KAAKsG,QAAQpE,KAAKmL,EAAK/G,SACvB,MAAMsK,EAAWvD,EAAKuD,UAAYvD,EAAKO,SAAWP,EAAK0iC,cACtCtxC,IAAbmS,KACI3S,EAAAA,EAAAA,IAAS2S,GACT5Q,KAAK4Q,SAAS1O,KAAK0O,GAGnB5Q,KAAK4Q,SAAS1O,KAAK,CACf2O,QAASD,KAIrB5Q,KAAK0F,KAAKxD,KAAKmL,EAAK3H,MAAQ2H,EAAKyiC,YACbrxC,IAAhB4O,EAAK2f,SACLhtB,KAAKgtB,OAAS3f,EAAK2f,aAELvuB,IAAd4O,EAAK7J,OACLxD,KAAKwD,KAAO6J,EAAK7J,WAEF/E,IAAf4O,EAAKhK,QACLrD,KAAKqD,OAAQ2b,EAAAA,EAAAA,IAAc3R,EAAKhK,QAEpCrD,KAAK4H,KAAK1F,KAAKmL,EAAKzF,WACEnJ,IAAlB4O,EAAKwiC,WACL7vC,KAAK6vC,SAAWxiC,EAAKwiC,UAEzB7vC,KAAKgjC,MAAM9gC,KAAKmL,EAAK21B,YACAvkC,IAAjB4O,EAAKhG,UACLrH,KAAKqH,QAAUgG,EAAKhG,cAEN5I,IAAd4O,EAAK+C,OACLpQ,KAAKoQ,KAAO/C,EAAK+C,KAEzB,E,cCxHG,MAAM4/B,UAAyBC,EAAAA,EAClCpwC,WAAAA,GACIE,QACAC,KAAKI,QAAU,OACfJ,KAAKqD,MAAQ,CACjB,CACA,eAAI6sC,GACA,OAAOlwC,KAAKitB,YAChB,CACA,eAAIijB,CAAYntC,GACZ/C,KAAKitB,aAAelqB,CACxB,CACAb,IAAAA,CAAKmL,QACyB5O,IAAtB4O,GAAM6iC,kBAAmDzxC,IAAtB4O,EAAK4f,eACxC5f,EAAK4f,aAAe5f,EAAK6iC,aAE7BnwC,MAAMmC,KAAKmL,GACNA,QAGgB5O,IAAjB4O,EAAKjN,UACLJ,KAAKI,QAAUiN,EAAKjN,QAE5B,ECrBG,MAAM+vC,UAAgBrjB,EAAAA,GACzBjtB,WAAAA,GACIE,QACAC,KAAKoM,UAAY,IAAI4jC,EACrBhwC,KAAKgtB,OAAOC,aAAe,GAC3BjtB,KAAK+C,MAAQ,CACjB,CACA,QAAIqtC,GACA,OAAOpwC,KAAKoM,SAChB,CACA,QAAIgkC,CAAKrtC,GACL/C,KAAKoM,UAAYrJ,CACrB,CACAb,IAAAA,CAAKmL,GACD,IAAKA,EACD,OAEJtN,MAAMmC,KAAKmL,GACX,MAAMjB,EAAYiB,EAAKjB,WAAaiB,EAAK+iC,UACvB3xC,IAAd2N,IACApM,KAAKoM,UAAUlK,KAAKkK,GACpBpM,KAAK+C,OAAQic,EAAAA,EAAAA,IAAchf,KAAK+C,MAAO/C,KAAKoM,UAAUvJ,OAAS7C,KAAKoM,UAAU6gB,kBAAexuB,GAErG,EC1BG,MAAM4xC,EACTxwC,WAAAA,GACIG,KAAK6C,QAAS,EACd7C,KAAKiB,MAAQ,KACbjB,KAAKgB,OAAS,IAClB,CACA,QAAIiS,GACA,OAAOjT,KAAKiB,KAChB,CACA,QAAIgS,CAAKlQ,GACL/C,KAAKiB,MAAQ8B,CACjB,CACA,UAAI0D,GACA,OAAOzG,KAAKgB,MAChB,CACA,UAAIyF,CAAO1D,GACP/C,KAAKgB,OAAS+B,CAClB,CACA,cAAIutC,GACA,OAAOtwC,KAAKiT,IAChB,CACA,cAAIq9B,CAAWvtC,GACX/C,KAAKiT,KAAOlQ,CAChB,CACAb,IAAAA,CAAKmL,GACD,IAAKA,EACD,YAEgB5O,IAAhB4O,EAAKxK,SACL7C,KAAK6C,OAASwK,EAAKxK,QAEvB,MAAM5B,EAAQoM,EAAKpM,OAASoM,EAAK4F,MAAQ5F,EAAKijC,gBAChC7xC,IAAVwC,IACAjB,KAAKiB,MAAQA,GAEjB,MAAMD,EAASqM,EAAKrM,QAAUqM,EAAK5G,YACpBhI,IAAXuC,IACAhB,KAAKgB,OAASA,EAEtB,ECtCG,MAAMuvC,EACT1wC,WAAAA,GACIG,KAAKwwC,QAAU,IAAIH,EACnBrwC,KAAKywC,MAAQ,EACbzwC,KAAK+C,MAAQ,CACjB,CACA,OAAIW,GACA,OAAO1D,KAAKywC,KAChB,CACA,OAAI/sC,CAAIX,GACJ/C,KAAKywC,MAAQ1tC,CACjB,CACAb,IAAAA,CAAKmL,GACD,IAAKA,EACD,OAEJrN,KAAKwwC,QAAQtuC,KAAKmL,EAAKmjC,SACvB,MAAMC,EAAQpjC,EAAKojC,OAASpjC,EAAK3J,SACnBjF,IAAVgyC,IACAzwC,KAAKywC,MAAQA,QAEEhyC,IAAf4O,EAAKtK,QACL/C,KAAK+C,MAAQsK,EAAKtK,MAE1B,ECxBG,MAAM2tC,EACT7wC,WAAAA,GACIG,KAAKqwB,KAAO,EACZrwB,KAAK8C,MAAQ,IAAIiU,EAAAA,EACjB/W,KAAK6C,QAAS,EACd7C,KAAK4L,OAAS,CACV1F,EAAG,EACHC,EAAG,GAEPnG,KAAK8C,MAAMC,MAAQ,MACvB,CACAb,IAAAA,CAAKmL,GACIA,SAGa5O,IAAd4O,EAAKgjB,OACLrwB,KAAKqwB,KAAOhjB,EAAKgjB,MAErBrwB,KAAK8C,MAAQiU,EAAAA,EAAajH,OAAO9P,KAAK8C,MAAOuK,EAAKvK,YAC9BrE,IAAhB4O,EAAKxK,SACL7C,KAAK6C,OAASwK,EAAKxK,aAEHpE,IAAhB4O,EAAKzB,cAGanN,IAAlB4O,EAAKzB,OAAO1F,IACZlG,KAAK4L,OAAO1F,EAAImH,EAAKzB,OAAO1F,QAEVzH,IAAlB4O,EAAKzB,OAAOzF,IACZnG,KAAK4L,OAAOzF,EAAIkH,EAAKzB,OAAOzF,IAEpC,EC/BJ,MAAMwqC,GAAU,YAAaC,GAAa,OAAQC,GAAW,QAASC,GAAc,SAAUC,GAAa,UAAWC,GAAgB,OAC/H,MAAMC,GACTpxC,WAAAA,GACIG,KAAK6rB,UAAY,CAAC5V,EAAMi7B,EAASC,EAAQC,KACrC,IAAKn7B,EACD,OAEJ,MAAMo7B,GAAclyC,EAAAA,EAAAA,IAAQ8W,GAAOq7B,EAAaD,EAAc,GAAK,CAAC,EAAGE,EAAsBF,KAAgBlyC,EAAAA,EAAAA,IAAQa,KAAKS,QAAQywC,IAAWM,EAAqBH,KAAgBlyC,EAAAA,EAAAA,IAAQa,KAAKS,QAAQ0wC,IACnMI,IACAvxC,KAAKS,QAAQywC,GAAWI,GAExBE,GAAsBJ,IACtBpxC,KAAKS,QAAQ0wC,GAAUG,GAE3BtxC,KAAKS,QAAQywC,IAAWzS,EAAAA,EAAAA,IAAWz+B,KAAKS,QAAQywC,IAAYI,EAAYr7B,GACnEjW,KAAKS,QAAQ0wC,KAAWC,IACzBpxC,KAAKS,QAAQ0wC,IAAU1S,EAAAA,EAAAA,IAAWz+B,KAAKS,QAAQ0wC,IAAWG,EAAYr7B,GAC1E,EAEJjW,KAAKisB,OAAQ,EACbjsB,KAAKgsB,MAAO,EACZhsB,KAAKS,QAAU,CAAC,EAChBT,KAAK8R,KAAO,QAChB,CACA,aAAIymB,GACA,OAAQv4B,KAAKS,QAAQkwC,KAAY3wC,KAAKS,QAAQmwC,GAClD,CACA,aAAIrY,CAAUx1B,GACV/C,KAAKS,QAAQmwC,IAAc5wC,KAAKS,QAAQkwC,IAAW5tC,CACvD,CACA,UAAI0uC,GACA,OAAOzxC,KAAKS,OAChB,CACA,UAAIgxC,CAAO1uC,GACP/C,KAAKS,QAAUsC,CACnB,CACA,SAAIqhB,GACA,OAAQpkB,KAAKS,QAAQowC,KAAa7wC,KAAKS,QAAQqwC,GACnD,CACA,SAAI1sB,CAAMrhB,GACN/C,KAAKS,QAAQqwC,IAAe9wC,KAAKS,QAAQowC,IAAY9tC,CACzD,CACA,UAAI6nB,GACA,OAAO5qB,KAAKokB,KAChB,CACA,UAAIwG,CAAO7nB,GACP/C,KAAKokB,MAAQrhB,CACjB,CACA,WAAIszB,GACA,OAAQr2B,KAAKS,QAAQswC,KAAe/wC,KAAKS,QAAQuwC,GACrD,CACA,WAAI3a,CAAQtzB,GACR/C,KAAKS,QAAQuwC,IAAiBhxC,KAAKS,QAAQswC,IAAchuC,CAC7D,CACA,UAAI6Z,GACA,MAAO,EACX,CACA,UAAIA,CAAO80B,GACX,CACAxvC,IAAAA,CAAKmL,GACD,IAAKA,EACD,OAEJ,MAAM5M,EAAU4M,EAAK5M,SAAW4M,EAAKokC,OACrC,QAAgBhzC,IAAZgC,EACA,IAAK,MAAMqrB,KAASrrB,EAAS,CACzB,MAAMwV,EAAOxV,EAAQqrB,GACjB7V,IACAjW,KAAKS,QAAQqrB,IAAS2S,EAAAA,EAAAA,IAAWz+B,KAAKS,QAAQqrB,IAAU,CAAC,EAAG7V,GAEpE,CAEJjW,KAAK6rB,UAAUxe,EAAKkrB,UAAWoY,GAASC,IAAY,GACpD5wC,KAAK6rB,UAAUxe,EAAKgpB,QAAS0a,GAAYC,IAAe,GACxDhxC,KAAK6rB,UAAUxe,EAAK+W,OAAS/W,EAAKud,OAAQimB,GAAUC,IAAa,QAC9CryC,IAAf4O,EAAK4e,QACLjsB,KAAKisB,MAAQ5e,EAAK4e,YAEJxtB,IAAd4O,EAAK2e,OACLhsB,KAAKgsB,KAAO3e,EAAK2e,WAEHvtB,IAAd4O,EAAKyE,OACL9R,KAAK8R,KAAOzE,EAAKyE,KAEzB,ECpFG,MAAM6/B,WAAsB1B,EAAAA,EAC/BpwC,WAAAA,GACIE,QACAC,KAAKI,QAAU,OACfJ,KAAKqD,MAAQ,CACjB,CACA,YAAIuuC,GACA,OAAO5xC,KAAKitB,YAChB,CACA,YAAI2kB,CAAS7uC,GACT/C,KAAKitB,aAAelqB,CACxB,CACAb,IAAAA,CAAKmL,QACsB5O,IAAnB4O,GAAMukC,eAAgDnzC,IAAtB4O,EAAK4f,eACrC5f,EAAK4f,aAAe5f,EAAKukC,UAE7B7xC,MAAMmC,KAAKmL,GACNA,QAGgB5O,IAAjB4O,EAAKjN,UACLJ,KAAKI,QAAUiN,EAAKjN,QAE5B,ECrBG,MAAMyxC,WAAa/kB,EAAAA,GACtBjtB,WAAAA,GACIE,QACAC,KAAKoM,UAAY,IAAIulC,GACrB3xC,KAAKgtB,OAAOC,aAAe,EAC3BjtB,KAAK+C,MAAQ,CACjB,CACA,QAAIqtC,GACA,OAAOpwC,KAAKoM,SAChB,CACA,QAAIgkC,CAAKrtC,GACL/C,KAAKoM,UAAYrJ,CACrB,CACAb,IAAAA,CAAKmL,GAED,GADAtN,MAAMmC,KAAKmL,IACNA,EACD,OAEJ,MAAMjB,EAAYiB,EAAKjB,WAAaiB,EAAK+iC,UACvB3xC,IAAd2N,IACApM,KAAKoM,UAAUlK,KAAKkK,GACpBpM,KAAK+C,OAAQic,EAAAA,EAAAA,IAAchf,KAAK+C,MAAO/C,KAAKoM,UAAUvJ,OAAS7C,KAAKoM,UAAU6gB,kBAAexuB,GAErG,ECxBG,MAAMqzC,GACTjyC,WAAAA,GACIG,KAAKiB,MAAQ,CACjB,CACAiB,IAAAA,CAAKmL,GACIA,SAGc5O,IAAf4O,EAAKvK,QACL9C,KAAK8C,MAAQyrC,EAAgBz+B,OAAO9P,KAAK8C,MAAOuK,EAAKvK,aAEtCrE,IAAf4O,EAAKpM,QACLjB,KAAKiB,OAAQ+d,EAAAA,EAAAA,IAAc3R,EAAKpM,aAEfxC,IAAjB4O,EAAKL,UACLhN,KAAKgN,SAAUgS,EAAAA,EAAAA,IAAc3R,EAAKL,UAE1C,EClBG,MAAM+kC,WAAejlB,EAAAA,GACxBjtB,WAAAA,GACIE,QACAC,KAAKglC,YAAc,EACnBhlC,KAAKklC,SAAW,EAChBllC,KAAKmH,aAAe,CACxB,CACAjF,IAAAA,CAAKmL,GACDtN,MAAMmC,KAAKmL,GACNA,SAGoB5O,IAArB4O,EAAK23B,cACLhlC,KAAKglC,YAAc33B,EAAK23B,kBAENvmC,IAAlB4O,EAAK63B,WACLllC,KAAKklC,SAAW73B,EAAK63B,eAECzmC,IAAtB4O,EAAKlG,eACLnH,KAAKmH,aAAekG,EAAKlG,cAEjC,ECVG,MAAM6qC,GACTnyC,WAAAA,CAAYyE,EAAQrC,GAChBjC,KAAK2T,QAAUrP,EACftE,KAAKgE,WAAa/B,EAClBjC,KAAK0O,OAAS,IAAImgC,EAClB7uC,KAAKkvB,WAAa,IAAI4f,EACtB9uC,KAAK8C,MAAQ,IAAIyrC,EACjBvuC,KAAK8C,MAAMC,MAAQ,OACnB/C,KAAK6e,OAAS,CAAC,EACf7e,KAAKoD,KAAO,IAAIwsC,EAChB5vC,KAAKsD,OAAS,IAAIitC,EAClBvwC,KAAKgN,QAAU,IAAImjC,EACnBnwC,KAAKkM,kBAAmB,EACxBlM,KAAKywB,OAAS,IAAIigB,EAClB1wC,KAAK8rB,MAAQ,IAAImlB,GACjBjxC,KAAKwD,KAAO,IAAIquC,GAChB7xC,KAAK4c,OAAS,IAAIk1B,GAClB9xC,KAAKgH,OAAS,IAAI+qC,EACtB,CACA7vC,IAAAA,CAAKmL,GACD,IAAKA,EACD,OAIJ,GAFArN,KAAK0O,OAAOxM,KAAKmL,EAAKqB,QACtB1O,KAAK8C,MAAMZ,KAAKqsC,EAAgBz+B,OAAO9P,KAAK8C,MAAOuK,EAAKvK,aACpCrE,IAAhB4O,EAAKwR,OACL,IAAK,MAAMO,KAAS/R,EAAKwR,OAAQ,CAC7B,MAAM5I,EAAO5I,EAAKwR,OAAOO,QACZ3gB,IAATwX,IACAjW,KAAK6e,OAAOO,IAASqf,EAAAA,EAAAA,IAAWz+B,KAAK6e,OAAOO,IAAU,CAAC,EAAGnJ,GAElE,CAEJjW,KAAKoD,KAAKlB,KAAKmL,EAAKjK,MACpBpD,KAAKsD,OAAOpB,KAAKmL,EAAK/J,QACtBtD,KAAKgN,QAAQ9K,KAAKmL,EAAKL,cACOvO,IAA1B4O,EAAKnB,mBACLlM,KAAKkM,iBAAmBmB,EAAKnB,kBAEjClM,KAAK8rB,MAAM5pB,KAAKmL,EAAKye,OACrB9rB,KAAKwD,KAAKtB,KAAKmL,EAAK7J,MACpBxD,KAAKywB,OAAOvuB,KAAKmL,EAAKojB,QACtBzwB,KAAKgH,OAAO9E,KAAKmL,EAAKrG,QACtB,MAAMkoB,EAAa7hB,EAAKjK,MAAM8rB,YAAc7hB,EAAKjK,MAAMsL,YACpCjQ,IAAfywB,IACAlvB,KAAKkvB,WAAWrsB,OAASqsB,GAE7BlvB,KAAKkvB,WAAWhtB,KAAKmL,EAAK6hB,iBACCzwB,IAAvB4O,EAAKoF,gBACLzS,KAAKyS,eAAgBgsB,EAAAA,EAAAA,IAAW,CAAC,EAAGpxB,EAAKoF,gBAE7C,MAAMw/B,EAAe5kC,EAAKuP,QAAUvP,EAAKye,OAAOlP,OAQhD,GAPIq1B,IACAjyC,KAAK4c,QAAS9F,EAAAA,EAAAA,IAA0Bm7B,GAAe96B,IACnD,MAAME,EAAM,IAAIy6B,GAEhB,OADAz6B,EAAInV,KAAKiV,GACFE,CAAG,KAGdrX,KAAKgE,WAAY,CACjB,MAAM2M,EAAW3Q,KAAK2T,QAAQ3F,QAAQ2C,SAAS2gB,IAAItxB,KAAKgE,YACxD,GAAI2M,EACA,IAAK,MAAMD,KAAWC,EACdD,EAAQ2b,aACR3b,EAAQ2b,YAAYrsB,KAAMqN,GAItC,MAAMwgC,EAAc7tC,KAAK2T,QAAQ3F,QAAQ6/B,YAAYvc,IAAItxB,KAAKgE,YAC9D,GAAI6pC,EACA,IAAK,MAAMC,KAAcD,EACjBC,EAAWjc,sBACXic,EAAWjc,qBAAqB7xB,KAAMqN,EAItD,CACJ,ECxFG,SAASgf,GAAY5rB,GAA8B,QAAAqU,EAAAvW,UAAAC,OAAlB0zC,EAAgB,IAAAhzC,MAAA4V,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAhBk9B,EAAgBl9B,EAAA,GAAAzW,UAAAyW,GACpD,IAAK,MAAMm9B,KAAiBD,EACxBzxC,EAAQyB,KAAKiwC,EAErB,CACO,SAAStgB,GAAqBvtB,EAAQrC,GACzC,MAAMxB,EAAU,IAAIuxC,GAAiB1tC,EAAQrC,GAAW,QAAAmwC,EAAA7zC,UAAAC,OADD0zC,EAAgB,IAAAhzC,MAAAkzC,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAhBH,EAAgBG,EAAA,GAAA9zC,UAAA8zC,GAGvE,OADAhmB,GAAY5rB,KAAYyxC,GACjBzxC,CACX,CCAO,MAAM6xC,GACTzyC,WAAAA,CAAYyE,EAAQrC,GAChBjC,KAAKuyC,kBAAqB1+B,GACd7T,KAAKkoC,OAAOnc,MAAMkc,GAAUA,EAAMp3B,QAAQ9N,OAASklC,EAAMp3B,QAAQgD,OAASA,KAC9E7T,KAAKkoC,OAAOnc,MAAMkc,GAAUA,EAAMp3B,QAAQ9N,OAAgC,QAAvBklC,EAAMp3B,QAAQgD,OAEzE7T,KAAKwyC,cAAiBC,IAClBzyC,KAAKkC,KAAKlC,KAAK2T,QAAQ3F,QAAQ0kC,UAAUD,GAAQ,EAErDzyC,KAAK2T,QAAUrP,EACftE,KAAKgE,WAAa/B,EAClBjC,KAAK2yC,UAAW,EAChB3yC,KAAK4lC,WAAa,IAAIkH,EACtB9sC,KAAK2yB,eAAiB,IAAIqa,EAC1BhtC,KAAK6nC,cAAgB,CAAC,EACtB7nC,KAAKmtB,MAAQ,EACbntB,KAAK4C,WAAa,IAAIqqC,EACtBjtC,KAAK4yC,cAAe,EACpB5yC,KAAKgS,SAAW,EAChBhS,KAAK6yC,SAAW,IAChB7yC,KAAKyS,cAAgB,IAAIs7B,EAAczpC,EAAQrC,GAC/CjC,KAAK8yC,gBAAkB,GACvB9yC,KAAKoC,UAAYyvB,GAAqB7xB,KAAK2T,QAAS3T,KAAKgE,YACzDhE,KAAKsoC,aAAc,EACnBtoC,KAAK+yC,wBAAyB,EAC9B/yC,KAAK4D,WAAa,GAClB5D,KAAKsuB,QAAS,EACdtuB,KAAKkB,MAAQ,CAAC,EACdlB,KAAKkoC,OAAS,GACdloC,KAAKgzC,QAAU,GACnB,CACA,kBAAIC,GACA,OAAOjzC,KAAK4C,UAChB,CACA,kBAAIqwC,CAAelwC,GACf/C,KAAK4C,WAAWV,KAAKa,EACzB,CACA,aAAImwC,GACA,OAAOlzC,KAAK6yC,QAChB,CACA,aAAIK,CAAUnwC,GACV/C,KAAK6yC,SAAW9vC,CACpB,CACA,iBAAIowC,GACA,OAAOnzC,KAAK4yC,YAChB,CACA,iBAAIO,CAAcpwC,GACd/C,KAAK4yC,aAAe7vC,CACxB,CACAb,IAAAA,CAAKmL,GACD,IAAKA,EACD,YAEgB5O,IAAhB4O,EAAKolC,SACL37B,EAAAA,EAAAA,IAA0BzJ,EAAKolC,QAASA,GAAWzyC,KAAKwyC,cAAcC,UAEpDh0C,IAAlB4O,EAAKslC,WACL3yC,KAAK2yC,SAAWtlC,EAAKslC,eAENl0C,IAAf4O,EAAK8f,QACLntB,KAAKmtB,OAAQnO,EAAAA,EAAAA,IAAc3R,EAAK8f,QAEpC,MAAMylB,EAAevlC,EAAKulC,cAAgBvlC,EAAK8lC,mBAC1B10C,IAAjBm0C,IACA5yC,KAAK4yC,aAAeA,QAEFn0C,IAAlB4O,EAAK2E,WACLhS,KAAKgS,UAAWgN,EAAAA,EAAAA,IAAc3R,EAAK2E,WAEvC,MAAM6gC,EAAWxlC,EAAKwlC,UAAYxlC,EAAK6lC,eACtBz0C,IAAbo0C,IACA7yC,KAAK6yC,SAAWA,QAEKp0C,IAArB4O,EAAKi7B,cACLtoC,KAAKsoC,YAAcj7B,EAAKi7B,kBAEQ7pC,IAAhC4O,EAAK0lC,yBACL/yC,KAAK+yC,uBAAyB1lC,EAAK0lC,6BAElBt0C,IAAjB4O,EAAK2lC,UACLhzC,KAAKgzC,QAAU3lC,EAAK2lC,SAExBhzC,KAAK4lC,WAAW1jC,KAAKmL,EAAKu4B,YAC1B,MAAMhjC,EAAayK,EAAKzK,YAAcyK,EAAK4lC,gBACvC5X,EAAAA,EAAAA,IAAUz4B,GACV5C,KAAK4C,WAAWC,OAASD,EAGzB5C,KAAK4C,WAAWV,KAAKU,GAEzB5C,KAAK2yB,eAAezwB,KAAKmL,EAAKslB,gBAC9B3yB,KAAKyS,cAAcvQ,KAAKmL,EAAKoF,eACzBpF,EAAKylC,kBACL9yC,KAAK8yC,gBAAkBzlC,EAAKylC,gBAAgBjvC,KAAKsT,IAC7C,MAAME,EAAM,IAAI42B,EAEhB,OADA52B,EAAInV,KAAKiV,GACFE,CAAG,KAGlBrX,KAAKoC,UAAUF,KAAKmL,EAAKjL,WACzBpC,KAAKkB,OAAQu9B,EAAAA,EAAAA,IAAWz+B,KAAKkB,MAAOmM,EAAKnM,OACzClB,KAAK2T,QAAQ3F,QAAQqe,YAAYrsB,KAAMqN,QACnB5O,IAAhB4O,EAAKihB,SACLtuB,KAAKsuB,OAASjhB,EAAKihB,QAEvB,MAAMuf,EAAc7tC,KAAK2T,QAAQ3F,QAAQ6/B,YAAYvc,IAAItxB,KAAKgE,YAC9D,GAAI6pC,EACA,IAAK,MAAMC,KAAcD,EACjBC,EAAWzhB,aACXyhB,EAAWzhB,YAAYrsB,KAAMqN,GAIzC,QAAwB5O,IAApB4O,EAAKzJ,WACL,IAAK,MAAMA,KAAcyJ,EAAKzJ,WAAY,CACtC,MAAMwvC,EAAgB,IAAIlF,EAC1BkF,EAAclxC,KAAK0B,GACnB5D,KAAK4D,WAAWub,KAAKi0B,EACzB,CAGJ,GADApzC,KAAK4D,WAAWouB,MAAK,CAAC7N,EAAGnB,IAAMmB,EAAErgB,SAAWkf,EAAElf,gBAC1BrF,IAAhB4O,EAAK66B,OACL,IAAK,MAAMD,KAAS56B,EAAK66B,OAAQ,CAC7B,MAAMmL,EAAgBrzC,KAAKkoC,OAAOnc,MAAM5U,GAAMA,EAAEsN,OAASwjB,EAAMxjB,OAC/D,GAAK4uB,EAMDA,EAAcnxC,KAAK+lC,OANH,CAChB,MAAMqL,EAAW,IAAIlF,EACrBkF,EAASpxC,KAAK+lC,GACdjoC,KAAKkoC,OAAO/oB,KAAKm0B,EACrB,CAIJ,CAEJtzC,KAAK6nC,cAAcE,KAAO/nC,KAAKuyC,kBAAkB,SAAS9tB,KAC1DzkB,KAAK6nC,cAAcG,MAAQhoC,KAAKuyC,kBAAkB,UAAU9tB,IAChE,CACA8uB,aAAAA,CAActyC,EAAO6H,EAAS0qC,GAC1BxzC,KAAKkC,KAAKsxC,GACV,MAAMC,EAAoBzzC,KAAK4D,WAAWmoB,MAAM5U,GAAiB,WAAXA,EAAEtD,MAAqB6/B,OAASv8B,EAAErT,SAAW4vC,OAAOC,WAAax8B,EAAErT,SAAWgF,EAAU7H,IAE9I,OADAjB,KAAKkC,KAAKuxC,GAAmBhzC,SACtBgzC,GAAmB3vC,QAC9B,CACA8vC,QAAAA,CAASnvB,GACL,GAAIA,EAAM,CACN,MAAMovB,EAAc7zC,KAAKkoC,OAAOnc,MAAMkc,GAAUA,EAAMxjB,OAASA,IAC3DovB,GACA7zC,KAAKkC,KAAK2xC,EAAYpzC,QAE9B,KACK,CACD,MAAM4pC,GAAarM,EAAAA,EAAAA,IAAe,gCAAiC8V,EAAiBzJ,GAAcA,EAAWtL,QAASgV,EAAe/zC,KAAKuyC,kBAAkBuB,EAAiB,OAAS,SAClLC,GACA/zC,KAAKkC,KAAK6xC,EAAatzC,QAE/B,CACJ,ECtKG,MAAMuzC,GACTn0C,WAAAA,CAAYyE,EAAQrC,GAChBjC,KAAKiC,UAAYA,EACjBjC,KAAK2T,QAAUrP,EACftE,KAAKi0C,aAAe3vC,EAAO0J,QAAQkmC,eAAel0C,KAAKiC,WAAW,GAClEjC,KAAKm0C,qBAAuB,GAC5Bn0C,KAAKo0C,qBAAuB,EAChC,CACA,sBAAMC,CAAiB9uC,GACnB,IAAK,MAAMuoC,KAAc9tC,KAAKm0C,qBAC1BrG,EAAWnlC,mBAAsBmlC,EAAW55B,SAAS3O,EAE7D,CACAqO,eAAAA,CAAgBC,GACZ,IAAK,MAAMi6B,KAAc9tC,KAAKm0C,qBAC1BrG,EAAWl6B,iBAAmBk6B,EAAWl6B,gBAAgBC,EAEjE,CACA3T,IAAAA,GACIF,KAAKm0C,qBAAuB,GAC5Bn0C,KAAKo0C,qBAAuB,GAC5B,IAAK,MAAMtG,KAAc9tC,KAAKi0C,aAAc,CACxC,OAAQnG,EAAWh8B,MACf,IAAK,WACD9R,KAAKm0C,qBAAqBh1B,KAAK2uB,GAC/B,MACJ,IAAK,YACD9tC,KAAKo0C,qBAAqBj1B,KAAK2uB,GAGvCA,EAAW5tC,MACf,CACJ,CACA,uBAAMo0C,CAAkBpvC,EAAUK,GAC9B,IAAK,MAAMuoC,KAAc9tC,KAAKm0C,qBAC1BrG,EAAW75B,MAAM/O,EAAUK,GAE/B,IAAK,MAAMuoC,KAAc9tC,KAAKo0C,qBAC1BtG,EAAWnlC,UAAUzD,UAAoB4oC,EAAW55B,SAAShP,EAAUK,EAE/E,CACA,WAAM6H,CAAMlI,GACR,IAAK,MAAM4oC,KAAc9tC,KAAKm0C,qBAC1BrG,EAAWnlC,aAAemlC,EAAW1gC,MAAMlI,GAE/C,IAAK,MAAM4oC,KAAc9tC,KAAKo0C,qBAC1BtG,EAAWnlC,UAAUzD,IAAa4oC,EAAW1gC,MAAMlI,EAE3D,E,0BCvCJ,MAAMqvC,GAAclnC,IAChB,KAAKuH,EAAAA,EAAAA,IAAUvH,EAAKO,QAASP,EAAKmnC,YAC9B,OAEJ,MAAMC,EAAyB,EAAdpnC,EAAK3E,OAClB2E,EAAKqnC,MAAQrnC,EAAKsnC,SAAWF,EAC7BpnC,EAAKunC,OAAOvnC,EAAK3E,QAEZ2E,EAAKqnC,MAAQD,GAClBpnC,EAAKunC,MAAMvnC,EAAK3E,OACpB,EAEG,MAAMmsC,GACTh1C,WAAAA,CAAYyE,EAAQzD,EAAIoB,EAAWmF,EAAU0tC,EAAiB11B,GAAO,IAAA21B,EAAA,KACjE/0C,KAAKiC,UAAYA,EACjBjC,KAAKg1C,cAAgB,SAAC/yC,EAAWmF,EAAUJ,GAAyB,IAAjBiuC,EAAQ12C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAC1D,IAAK,MAAO,CAAEwP,KAAW9L,EAAU+L,QAAS,CACxC,MAAMknC,OAAwCz2C,IAA5BsP,EAAOonC,iBAAiCpnC,EAAOonC,iBAAiB/tC,EAAU2tC,QAAQt2C,EACpG,GAAIy2C,EACA,OAAOE,GAAAA,EAAStlC,OAAOolC,EAAUhvC,EAAGgvC,EAAU/uC,EAAGa,EAEzD,CACA,MAAMoH,EAAanM,EAAU8F,OAAOvE,KAAM6xC,GAAgBrZ,EAAAA,EAAAA,IAAkC,CACxFx4B,KAAM4K,EACNhH,SAAUA,IACVY,EAAMotC,GAAAA,EAAStlC,OAAOulC,EAAcnvC,EAAGmvC,EAAclvC,EAAGa,GAAS0B,EAASqsC,EAAKvrC,YAAaoH,EAAWmkC,EAAKt0C,QAAQ2C,KAAKwN,SAAU0kC,EAAiB1nC,IACpJ2mC,GAAW,CACP3mC,UACA4mC,WAAY,CAAC,SAAU,qBACvBE,MAAO1sC,EAAI9B,EACXyuC,SAAU1yC,EAAU8F,OAAOvE,KAAKvC,MAChC2zC,MAAQ7xC,GAAWiF,EAAI9B,GAAKnD,EAC5B2F,UACF,EACH6sC,EAAe3nC,IACd2mC,GAAW,CACP3mC,UACA4mC,WAAY,CAAC,SAAU,mBACvBE,MAAO1sC,EAAI7B,EACXwuC,SAAU1yC,EAAU8F,OAAOvE,KAAKxC,OAChC4zC,MAAQ7xC,GAAWiF,EAAI7B,GAAKpD,EAC5B2F,UACF,EAMN,OAJA4sC,EAAc1kC,EAAStC,MAAQsC,EAASC,SACxCykC,EAAc1kC,EAASvC,OAASuC,EAASC,SACzC0kC,EAAY3kC,EAAS9B,KAAO8B,EAASC,SACrC0kC,EAAY3kC,EAAS/B,QAAU+B,EAASC,SACpCkkC,EAAKS,cAAcxtC,EAAKitC,GACjBF,EAAKC,cAAc/yC,OAAWxD,EAAWuI,EAAQiuC,EAAW,GAEhEjtC,CACX,EACAhI,KAAKy1C,mBAAqB,KACtB,MAA8D/tB,GAAzC+T,EAAAA,EAAAA,IAAwBz7B,KAAKwI,WAA+BktC,OAAQvwC,EAAcnF,KAAKS,QAAQ2C,KACpH,GAA8B,WAA1B+B,EAAYqD,WAAoD,YAA1BrD,EAAYqD,UAClD,OAAOkf,EAEX,MAAMiuB,EAAOruC,KAAKyD,GAAK,KAAO3C,EAAAA,EAAAA,IAAcjD,EAAYsD,MAAM1F,OAAQ6yC,EAAatuC,KAAKyD,GAAK,KAAO3C,EAAAA,EAAAA,IAAcjD,EAAYsD,MAAMmD,QAASyU,EAAQ,CACjJ/R,KAAMsnC,EAAYD,EAAM,EACxBtnC,MAAOunC,EAAYD,EAAM,GAQ7B,OANKxwC,EAAY0qC,WACbnoB,EAAIjf,QAASoD,EAAAA,EAAAA,KAAcmT,EAAAA,EAAAA,IAAcqB,EAAM/R,KAAM+R,EAAMhS,SAE3DlJ,EAAY6nB,QAAuC,kBAAtB7nB,EAAY9B,QACzCqkB,EAAIlpB,SAAUiM,EAAAA,EAAAA,OAEXid,CAAG,EAEd1nB,KAAKw1C,cAAgB,SAACxtC,GAAsB,IAAjBitC,EAAQ12C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAClC,MAAMs3C,EAAoBd,EAAKt0C,QAAQyuB,WAAYxmB,EAASqsC,EAAKvrC,YACjE,IAAKqsC,EAAkBhzC,OACnB,OAAO,EAEX,MAAMizC,EAAiBD,EAAkB9G,QACzC,GAAI+G,EAAejzC,OACf,OAAO,EAEX,MAAM8rC,EAAUmH,EAAenH,QAC/B,GAAIA,GAAW,GAAKsG,EAAWtG,EAC3B,MAAM,IAAIrsC,MAAM,GAAG+kB,EAAAA,kDAEvB,QAAS0tB,EAAK9yC,UAAUG,UAAU2pB,MAAM7mB,IAAagD,EAAAA,EAAAA,IAAYF,EAAK9C,EAASkC,UAAYsB,EAASxD,EAASsE,aACjH,EACAxJ,KAAK+1C,cAAiBjzC,IAClB,IAAKA,IAAU9C,KAAKg2C,OAAUh2C,KAAKi2C,YAAcj2C,KAAKg2C,KAAKE,MACvD,OAAOpzC,EAEX,MAAMqzC,EAAan2C,KAAKg2C,KAAK5rC,YAAcpK,KAAKg2C,KAAK1rC,SAAW,EAAI,EAAG8rC,EAAUp2C,KAAKg2C,KAAK5rC,WAAa9C,KAAKyD,GAAK,EAAI,EACtH,OADkIzD,KAAKyI,QAAQ/P,KAAKg2C,KAAKvtC,OAAS,GAAK2tC,IAAY9uC,KAAKyD,GAAKorC,IAAe,EAIxMn2C,KAAKi2C,UACEj2C,KAAKi2C,UAEZj2C,KAAKg2C,KAAKE,OACHG,EAAAA,EAAAA,IAASvzC,EAAO9C,KAAKg2C,KAAKE,MAAMpkC,KAAM9R,KAAKg2C,KAAKE,MAAMnzC,OAE1DD,EARIA,CAQC,EAEhB9C,KAAKs2C,cAAiBlvC,IAClB,MAAMnF,EAAYjC,KAAKiC,UAAWs0C,GAAcnuC,EAAAA,EAAAA,IAAcpI,KAAKS,QAAQuG,OAAOjE,OAClF/C,KAAKoH,SAAWpH,KAAKg1C,cAAc/yC,EAAWmF,GAAUnB,EAAAA,EAAAA,IAAMswC,EAAa,EAAGt0C,EAAU+wC,UACxFhzC,KAAK2J,gBAAkB3J,KAAKoH,SAASsuC,OACrC,MAAMtnC,EAAanM,EAAU8F,OAAOvE,KAOpC,OANAxD,KAAKsP,WAAa,KACXrH,EAAAA,EAAAA,IAAYjI,KAAKS,QAAQ2C,KAAKmF,OAAQ6F,GACzC1F,OAAQ1I,KAAKS,QAAQ2C,KAAKmF,OAAOG,QAAU,EAC3CmL,KAAM7T,KAAKS,QAAQ2C,KAAKmF,OAAOsL,MAAQ,WAE3C7T,KAAKwI,WAAYgzB,EAAAA,EAAAA,IAA0Bx7B,KAAKS,QAAQ2C,KAAKoF,UAAWxI,KAAKoH,SAAUpH,KAAKsP,YACpFtP,KAAKS,QAAQ2C,KAAKoF,WACtB,IAAK,SACDxI,KAAKkP,QAAU,SACf,MACJ,IAAK,UACDlP,KAAKkP,QAAU,UAGvBlP,KAAK4L,OAASwD,GAAAA,EAAOC,MAAM,EAE/BrP,KAAKw2C,eAAiB,CAACzd,EAAc7sB,KACjC,MAAMf,EAAY4tB,EAAat4B,QAAQT,KAAK8rB,OAC5C,GAAK3gB,EAGL,OAAOszB,EAAAA,EAAAA,IAAW,CACdxS,MAAO8M,EAAa9M,MACpBD,KAAM+M,EAAa/M,OACpBvS,EAAAA,EAAAA,IAAyBtO,EAAWnL,KAAKa,GAAIqL,GAAkB,EAEtElM,KAAK2T,QAAUrP,EACftE,KAAKE,KAAKW,EAAIuG,EAAU0tC,EAAiB11B,EAC7C,CACAhf,OAAAA,CAAQq2C,GACJ,GAAIz2C,KAAKuvB,aAAevvB,KAAK4I,UACzB,OAEJ5I,KAAK4I,WAAY,EACjB5I,KAAK+X,OAAO9O,SAAU,EACtBjJ,KAAKgJ,KAAKC,SAAU,EACpB,MAAMhH,EAAYjC,KAAKiC,UAAW4D,EAAgB7F,KAAK6F,cACvD,IAAK,MAAO,CAAEkI,KAAW9L,EAAU+L,QAC3BD,EAAOmnB,mBACPnnB,EAAOmnB,kBAAkBl1B,KAAMy2C,GAGvC,IAAK,MAAM/lC,KAAWzO,EAAUG,UAAUuO,SAClCD,EAAQwkB,mBACRxkB,EAAQwkB,kBAAkBl1B,KAAMy2C,GAGpC5wC,GACAA,EAAcuH,MAAMpN,KAE5B,CACA4K,IAAAA,CAAKrF,GACD,MAAMtD,EAAYjC,KAAKiC,UACvB,IAAK,MAAO,CAAE8L,KAAW9L,EAAU+L,QAC/B/L,EAAU8F,OAAOo9B,mBAAmBp3B,EAAQ/N,KAAMuF,GAEtDtD,EAAU8F,OAAOitB,aAAah1B,KAAMuF,EACxC,CACAoU,YAAAA,GACI,OAAO3Z,KAAK+1C,cAAc/1C,KAAK+X,OAAOjV,QAAS4zC,EAAAA,EAAAA,IAAoB12C,KAAK8C,OAC5E,CACAm8B,OAAAA,GACI,OAAQj/B,KAAKwJ,aAAe,EAAIlC,KAAKyD,GAAM,CAC/C,CACA9C,WAAAA,GACI,MAAO,CACH/B,EAAGlG,KAAKoH,SAASlB,EAAIlG,KAAK4L,OAAO1F,EACjCC,EAAGnG,KAAKoH,SAASjB,EAAInG,KAAK4L,OAAOzF,EACjCypB,EAAG5vB,KAAKoH,SAASwoB,EAEzB,CACApmB,SAAAA,GACI,OAAOxJ,KAAK+X,OAAOrP,QAAU1I,KAAKwD,KAAKT,KAC3C,CACA+hC,cAAAA,GACI,OAAO9kC,KAAK+1C,cAAc/1C,KAAK+X,OAAOjV,QAAS4zC,EAAAA,EAAAA,IAAoB12C,KAAKm4B,aAC5E,CACAj4B,IAAAA,CAAKW,EAAIuG,EAAU0tC,EAAiB11B,GAChC,MAAMnd,EAAYjC,KAAKiC,UAAWqC,EAAStE,KAAK2T,QAChD3T,KAAKa,GAAKA,EACVb,KAAKof,MAAQA,EACbpf,KAAKgsB,MAAO,EACZhsB,KAAKi3B,cAAe,EACpBj3B,KAAKisB,OAAQ,EACbjsB,KAAK2F,aAAe,EACpB3F,KAAK4I,WAAY,EACjB5I,KAAKuvB,aAAc,EACnBvvB,KAAKo3B,SAAW,EAChBp3B,KAAKuK,WAAY,EACjBvK,KAAKqI,OAAS,CACV6B,YAAa,CAAC,GAElBlK,KAAKkP,QAAU,SACflP,KAAK22C,oBAAqB,EAC1B,MAAM7tC,EAAU7G,EAAUoG,OAAOC,WAAYsuC,EAAc30C,EAAUkR,cAAe3N,EAAmBqsB,GAAqB7xB,KAAK2T,QAAS1R,EAAW20C,EAAYx0C,WAAYy0C,EAAYrxC,EAAiBsmB,MAAMha,MAAM,iBAAE5F,GAAqB1G,EAC7OxF,KAAK8rB,OAAQrS,EAAAA,EAAAA,IAAyBo9B,EAAW72C,KAAKa,GAAIqL,GAC1D,MAAM6sB,EAAevzB,EAAiBsmB,MACtC,GAAIgpB,GAAmBA,EAAgBhpB,OAASgpB,EAAgBhpB,MAAMha,KAAM,CACxE,MAAMglC,EAAoBhC,EAAgBhpB,MAAMha,KAAMga,GAAQrS,EAAAA,EAAAA,IAAyBq9B,EAAmB92C,KAAKa,GAAIqL,GAC/G4f,IACA9rB,KAAK8rB,MAAQA,EACbiN,EAAa72B,KAAK4yC,EAAgBhpB,OAE1C,CACA9rB,KAAKmL,UAAYnL,KAAKw2C,eAAezd,EAAc7sB,GACnD1G,EAAiBtD,KAAK4yC,GACtB,MAAM3pC,EAAYnL,KAAKmL,UACnBA,GACA3F,EAAiBtD,KAAKiJ,EAAU/I,WAEpC,MAAMqQ,EAAgB,IAAIs7B,EAAczpC,EAAQrC,GAChDwQ,EAAcvQ,KAAKD,EAAUkR,cAAcV,eAC3CA,EAAcvQ,KAAKsD,EAAiBiN,eACpCzS,KAAKyS,cAAgBA,EACrBzS,KAAKgsB,KAAO7gB,GAAW6gB,MAAQxmB,EAAiBsmB,MAAME,KACtDhsB,KAAKisB,MAAQ9gB,GAAW8gB,OAASzmB,EAAiBsmB,MAAMG,MACxDjsB,KAAKS,QAAU+E,EACf,MAAMC,EAAczF,KAAKS,QAAQ2C,KAAKsC,KACtC1F,KAAK4F,UAA0C,KAA9B6I,EAAAA,EAAAA,IAAShJ,EAAY0nB,OAClC1nB,EAAY8pC,YACZvvC,KAAK6F,cAAgB7F,KAAK2T,QAAQ3F,QAAQ+oC,iBAAiBtxC,EAAY8pC,WACnEvvC,KAAK6F,eAAiB5D,EAAU+0C,QAAQvxC,EAAY8pC,UAAWvvC,KAAK6F,gBACpE7F,KAAK6F,cAAc3F,KAAK+B,IAGhCA,EAAUoG,OAAO4uC,aAAaj3C,MAC9BA,KAAKwD,MAAOyJ,EAAAA,EAAAA,IAAkCjN,KAAKS,QAAQ+C,KAAMsF,GACjE9I,KAAK+X,OAAS,CACV9O,SAAS,GAEbjJ,KAAKgJ,KAAO,CACRC,SAAS,EACTxC,OAAQ,GAEZzG,KAAKs2C,cAAclvC,GACnBpH,KAAK+T,gBAAkB/T,KAAKy1C,qBAC5Bz1C,KAAK+F,SAAW/F,KAAK+T,gBAAgB2hC,OACrC11C,KAAK4G,UAAY,GAAIwB,EAAAA,EAAAA,IAAcpI,KAAKS,QAAQ2C,KAAKuD,OACrD,MAAMvE,EAAYH,EAAUG,UAC5BA,EAAU80C,UAAY90C,EAAU80C,WAAa90C,EAAU+0C,WAAan3C,KAAKoH,SAASwoB,EAClFxtB,EAAU+0C,WAAan3C,KAAKoH,SAASwoB,EACrC5vB,KAAKkH,aAAelH,KAAKoH,SAASwoB,EAAI3tB,EAAU+wC,QAChDhzC,KAAKs2B,MAAQ,GACb,IAAI8gB,EAASn1C,EAAUo1C,QAAQ/lB,IAAItxB,KAAK8rB,OACnCsrB,IACDA,EAASp3C,KAAK2T,QAAQ3F,QAAQspC,eAAet3C,KAAK8rB,OAC9CsrB,GACAn1C,EAAUo1C,QAAQ30C,IAAI1C,KAAK8rB,MAAOsrB,IAGtCA,GAAUA,EAAOvrB,WACjBurB,EAAOvrB,UAAU7rB,MAErB,MAAMu3C,EAAgBH,GAAQnsC,cAC1BssC,IACAv3C,KAAKs2B,MAAQihB,EAAcv3C,OAE/BA,KAAK2M,UAAW,EAChB3M,KAAKyzB,aAAcf,EAAAA,EAAAA,IAAgB1yB,KAAKS,QAAQgwB,OAAO3tB,OACvD,IAAK,MAAM4N,KAAWzO,EAAUG,UAAUuO,SACtCD,EAAQxQ,KAAKF,MAEjB,IAAK,MAAMw3C,KAASv1C,EAAUG,UAAUq1C,OACpCD,EAAMt3C,MAAQs3C,EAAMt3C,KAAKF,MAEzBo3C,GAAUA,EAAOlsC,cACjBksC,EAAOlsC,aAAajJ,EAAWjC,MAEnC,IAAK,MAAO,CAAE+N,KAAW9L,EAAU+L,QAC/BD,EAAOknB,iBAAmBlnB,EAAOknB,gBAAgBj1B,KAEzD,CACA03C,cAAAA,GACI,MAAMhvC,EAAS1I,KAAKwJ,YAAa4E,EAAapO,KAAKiC,UAAU8F,OAAOvE,KAAM4D,EAAWpH,KAAKoH,SAC1F,OAAQA,EAASlB,IAAMwC,GACnBtB,EAASjB,IAAMuC,GACftB,EAASjB,GAAKiI,EAAWpN,OAAS0H,GAClCtB,EAASlB,GAAKkI,EAAWnN,MAAQyH,CACzC,CACAivC,SAAAA,GACI,OAAQ33C,KAAK4I,YAAc5I,KAAK2M,UAAY3M,KAAK03C,gBACrD,CACAtqC,KAAAA,GACI,IAAK,MAAMsD,KAAW1Q,KAAKiC,UAAUG,UAAUuO,SAC3CD,EAAQtD,OAASsD,EAAQtD,MAAMpN,KAEvC,EC7SG,MAAM43C,GACT/3C,WAAAA,CAAYuH,EAAUlC,GAClBlF,KAAKoH,SAAWA,EAChBpH,KAAKkF,SAAWA,CACpB,E,0BCDG,MAAM2yC,GACTh4C,WAAAA,CAAYi4C,EAAWC,GACnB/3C,KAAK83C,UAAYA,EACjB93C,KAAK+3C,SAAWA,EAChB/3C,KAAKg4C,WAAa,KACd,MAAM,EAAE9xC,EAAC,EAAEC,GAAMnG,KAAK83C,UAAU1wC,UAAU,MAAEnG,EAAK,OAAED,GAAWhB,KAAK83C,UAAUt0C,MAAM,SAAEu0C,GAAa/3C,KAClG,IAAK,IAAIT,EAAI,EAAGA,EAAI,EAAGA,IACnBS,KAAKi4C,MAAM94B,KAAK,IAAI04B,GAAS,IAAIriC,GAAAA,EAAUtP,EAAKjF,EAAQ,GAAM1B,EAAI,GAAI4G,EAAKnF,EAAS,GAAMsG,KAAKqoB,MAAMpwB,EAAI,GAAMA,EAAI,GAAK0B,EAAQ,EAAGD,EAAS,GAAI+2C,IAEpJ/3C,KAAKk4C,UAAW,CAAI,EAExBl4C,KAAKm4C,QAAU,GACfn4C,KAAKk4C,UAAW,EAChBl4C,KAAKi4C,MAAQ,EACjB,CACAG,MAAAA,CAAOtoB,GACH,QAAK9vB,KAAK83C,UAAUp9B,SAASoV,EAAM1oB,YAG/BpH,KAAKm4C,QAAQ35C,OAASwB,KAAK+3C,UAC3B/3C,KAAKm4C,QAAQh5B,KAAK2Q,IACX,IAEN9vB,KAAKk4C,UACNl4C,KAAKg4C,aAEFh4C,KAAKi4C,MAAMtmB,MAAMyN,GAAQA,EAAIgZ,OAAOtoB,MAC/C,CACA1c,KAAAA,CAAMiN,EAAOg4B,EAAOC,GAChB,MAAM5wB,EAAM4wB,GAAS,GACrB,IAAKj4B,EAAM0P,WAAW/vB,KAAK83C,WACvB,MAAO,GAEX,IAAK,MAAMxkC,KAAKtT,KAAKm4C,SACZ93B,EAAM3F,SAASpH,EAAElM,YAClBc,EAAAA,EAAAA,IAAYmY,EAAMjZ,SAAUkM,EAAElM,UAAYkM,EAAEpO,SAASsE,eACnD6uC,GAASA,EAAM/kC,EAAEpO,YAGvBwiB,EAAIvI,KAAK7L,EAAEpO,UAEf,GAAIlF,KAAKk4C,SACL,IAAK,MAAM9Y,KAAOp/B,KAAKi4C,MACnB7Y,EAAIhsB,MAAMiN,EAAOg4B,EAAO3wB,GAGhC,OAAOA,CACX,CACAzP,WAAAA,CAAY7Q,EAAUsB,EAAQ2vC,GAC1B,OAAOr4C,KAAKoT,MAAM,IAAIL,GAAAA,EAAO3L,EAASlB,EAAGkB,EAASjB,EAAGuC,GAAS2vC,EAClE,CACAE,cAAAA,CAAenxC,EAAU5D,EAAM60C,GAC3B,OAAOr4C,KAAKoT,MAAM,IAAIoC,GAAAA,EAAUpO,EAASlB,EAAGkB,EAASjB,EAAG3C,EAAKvC,MAAOuC,EAAKxC,QAASq3C,EACtF,ECjDJ,MACMG,GAAkBpqC,GACb,IAAIoH,GAAAA,GAAWpH,EAAWnN,MAAQ,GAAImN,EAAWpN,OAAS,EAAuB,EAAnBoN,EAAWnN,MAAa,EAAwB,EAApBmN,EAAWpN,OAAc,GAEvH,MAAMrB,GACTE,WAAAA,CAAYyE,EAAQrC,GAChBjC,KAAKy4C,cAAgB,CAACh4C,EAASi4C,EAAat5B,KACxC,IAAK3e,EAAQ6C,OAAOktC,SAAS3tC,OACzB,OAEJ,MAAM81C,EAAgBl4C,EAAQ6C,OAAQs1C,EAAgB54C,KAAK64C,mBAAmBF,EAAcnI,SAAUsI,EAAqBH,EAAc51C,MAAOg2C,EAAoBJ,EAAclI,MAAQ,EAAIkI,EAAclI,MAAQqI,EAAoBE,EAAkB1xC,KAAK7D,IAAIq1C,EAAoBC,GAAqBH,EAAgBF,EAAaO,EAAiB3xC,KAAK7D,IAAIzD,KAAKsS,MAAOtS,KAAKnB,QAAQsY,GAAMA,EAAEiI,QAAUA,IAAO5gB,QACrZwB,KAAKywC,MAAQkI,EAAclI,MAAQmI,EAC/BK,EAAiBD,EACjBh5C,KAAKmf,KAAK7X,KAAK0C,IAAIgvC,EAAkBC,QAAiBx6C,EAAWgC,EAAS2e,GAErE65B,EAAiBD,GACtBh5C,KAAK0f,eAAeu5B,EAAiBD,EAAiB55B,EAC1D,EAEJpf,KAAK64C,mBAAsBK,IACvB,MAAMj3C,EAAYjC,KAAKgE,WACvB,IAAK/B,EAAU8F,OAAOmf,UAAYgyB,EAAer2C,OAC7C,OAAO,EAEX,MAAMkF,EAAS9F,EAAU8F,OAAOmf,QAASpe,EAAU7G,EAAUoG,OAAOC,WACpE,OAAQP,EAAO9G,MAAQ8G,EAAO/G,QAAWk4C,EAAezyC,OAASqC,GAAW,EAAIowC,EAAejmC,KAAK,EAExGjT,KAAKm5C,cAAgB,CAAC/xC,EAAU0tC,EAAiB11B,EAAOg6B,KACpD,IACI,IAAIl0C,EAAWlF,KAAKq5C,KAAKC,MACrBp0C,EACAA,EAAShF,KAAKF,KAAKu5C,QAASnyC,EAAU0tC,EAAiB11B,GAGvDla,EAAW,IAAI2vC,GAAS70C,KAAK2T,QAAS3T,KAAKu5C,QAASv5C,KAAKgE,WAAYoD,EAAU0tC,EAAiB11B,GAEpG,IAAIo6B,GAAS,EAIb,GAHIJ,IACAI,EAASJ,EAAYl0C,KAEpBs0C,EACD,OAWJ,OATAx5C,KAAKy5C,OAAOt6B,KAAKja,GACjBlF,KAAK05C,QAAQv6B,KAAKja,GAClBlF,KAAKu5C,UACLv5C,KAAK2T,QAAQgmC,cAAc,gBAAiB,CACxC13C,UAAWjC,KAAKgE,WAChBqJ,KAAM,CACFnI,cAGDA,CACX,CACA,MAAOugC,GAEH,YADAre,EAAAA,EAAAA,MAAYqW,QAAQ,GAAGpW,EAAAA,uBAAgCoe,IAE3D,GAEJzlC,KAAK45C,gBAAkB,CAAC31B,EAAO7E,EAAOq3B,KAClC,MAAMvxC,EAAWlF,KAAKy5C,OAAOx1B,GAC7B,IAAK/e,GAAYA,EAASka,QAAUA,EAChC,OAAO,EAEXla,EAAS9E,QAAQq2C,GACjB,MAAMoD,EAAO75C,KAAK05C,QAAQ/vB,QAAQzkB,GAUlC,OATAlF,KAAKy5C,OAAOK,OAAO71B,EAAO,GAC1BjkB,KAAK05C,QAAQI,OAAOD,EAAM,GAC1B75C,KAAKq5C,KAAKl6B,KAAKja,GACflF,KAAK2T,QAAQgmC,cAAc,kBAAmB,CAC1C13C,UAAWjC,KAAKgE,WAChBqJ,KAAM,CACFnI,eAGD,CAAI,EAEflF,KAAK2T,QAAUrP,EACftE,KAAKgE,WAAa/B,EAClBjC,KAAKu5C,QAAU,EACfv5C,KAAKy5C,OAAS,GACdz5C,KAAK05C,QAAU,GACf15C,KAAKq5C,KAAO,GACZr5C,KAAKywC,MAAQ,EACbzwC,KAAKk3C,WAAY,EACjBl3C,KAAKm3C,WAAa,EAClBn3C,KAAK+5C,oBAAsB,IAAI/F,GAAmB1vC,EAAQrC,GAC1D,MAAMmM,EAAanM,EAAU8F,OAAOvE,KACpCxD,KAAKqT,SAAW,IAAIwkC,GAASW,GAAepqC,GAxF9B,GAyFdpO,KAAKy3C,OAASz3C,KAAK2T,QAAQ3F,QAAQgsC,UAAU/3C,GAAW,GACxDjC,KAAK2Q,SAAW3Q,KAAK2T,QAAQ3F,QAAQisC,YAAYh4C,GAAW,EAChE,CACA,SAAIqQ,GACA,OAAOtS,KAAKy5C,OAAOj7C,MACvB,CACA07C,kBAAAA,GACI,MAAMj4C,EAAYjC,KAAKgE,WAAYvD,EAAUwB,EAAUkR,cACvD,IAAK,MAAMjO,KAAYzE,EAAQqyC,gBAC3B9yC,KAAKm6C,YAAYj1C,EAASkC,UAAWa,EAAAA,EAAAA,IAAY/C,EAASkC,SAAUnF,EAAU8F,OAAOvE,WAAQ/E,EAAWyG,EAASzE,QAEzH,CACA05C,WAAAA,CAAY/yC,EAAU0tC,EAAiB11B,EAAOg6B,GAC1C,MAAsE3I,EAApDzwC,KAAKgE,WAAgCmP,cAA+B/Q,UAAUkB,OAAOmtC,MACvG,GAAIA,EAAQ,EAAG,CACX,MAAM2J,EAAgBp6C,KAAKsS,MAAQ,EAAIm+B,EACnC2J,EAAgB,GAChBp6C,KAAK0f,eAAe06B,EAE5B,CACA,OAAOp6C,KAAKm5C,cAAc/xC,EAAU0tC,EAAiB11B,EAAOg6B,EAChE,CACAnlC,KAAAA,GACIjU,KAAKy5C,OAAS,GACdz5C,KAAK05C,QAAU,EACnB,CACAt5C,OAAAA,GACIJ,KAAKy5C,OAAS,GACdz5C,KAAK05C,QAAU,GACf15C,KAAKy3C,OAAS,GACdz3C,KAAK2Q,SAAW,EACpB,CACA,UAAM/F,CAAKrF,GACP,MAAMtD,EAAYjC,KAAKgE,WACvB/B,EAAU8F,OAAOkM,cACXjU,KAAK4M,OAAOrH,GAClB,IAAK,MAAO,CAAEwI,KAAW9L,EAAU+L,QAC/B/L,EAAU8F,OAAOq9B,WAAWr3B,EAAQxI,GAExC,IAAK,MAAM+N,KAAKtT,KAAK05C,QACjBpmC,EAAE1I,KAAKrF,EAEf,CACA1G,MAAAA,CAAOw7C,GACH,OAAOr6C,KAAKy5C,OAAO56C,OAAOw7C,EAC9B,CACAtuB,IAAAA,CAAKsuB,GACD,OAAOr6C,KAAKy5C,OAAO1tB,KAAKsuB,EAC5B,CACAzmC,eAAAA,CAAgBC,GACZ7T,KAAK+5C,oBAAoBnmC,gBAAgBC,EAC7C,CACA3T,IAAAA,GACI,MAAM+B,EAAYjC,KAAKgE,WAAYvD,EAAUwB,EAAUkR,cACvDnT,KAAKm3C,WAAa,EAClBn3C,KAAKk3C,WAAY,EACjB,IAAIppC,GAAU,EACd9N,KAAK2Q,SAAW3Q,KAAK2T,QAAQ3F,QAAQisC,YAAYh4C,GAAW,GAC5DjC,KAAK+5C,oBAAoB75C,OACzB,IAAK,MAAO,CAAE6N,KAAW9L,EAAU+L,QAI/B,QAHuCvP,IAAnCsP,EAAOusC,0BACPxsC,EAAUC,EAAOusC,2BAEjBxsC,EACA,MAGR9N,KAAK+5C,oBAAoB75C,OACzB,IAAK,MAAO,CAAE2F,KAAkB5D,EAAUs4C,eACtC10C,EAAc3F,KAAK+B,GAGvB,GADAjC,KAAKk6C,sBACApsC,EAAS,CACV,IAAK,MAAMsR,KAAS3e,EAAQ2B,UAAUyc,OAAQ,CAC1C,MAAMS,EAAe7e,EAAQ2B,UAAUyc,OAAOO,GAC9C,IAAK,IAAI7f,EAAIS,KAAKsS,MAAOkoC,EAAI,EAAGA,EAAIl7B,EAAahc,QAAQP,OAASxD,EAAIkB,EAAQ2B,UAAUkB,OAAOP,MAAOxD,IAAKi7C,IACvGx6C,KAAKm6C,iBAAY17C,EAAW6gB,EAAcF,EAElD,CACA,IAAK,IAAI7f,EAAIS,KAAKsS,MAAO/S,EAAIkB,EAAQ2B,UAAUkB,OAAOP,MAAOxD,IACzDS,KAAKm6C,aAEb,CACJ,CACAh7B,IAAAA,CAAKs7B,EAAI/nC,EAAOoiC,EAAiB11B,GAC7Bpf,KAAK06C,SAAU,EACf,IAAK,IAAIn7C,EAAI,EAAGA,EAAIk7C,EAAIl7C,IACpBS,KAAKm6C,YAAYznC,GAAOtL,SAAU0tC,EAAiB11B,GAEvDpf,KAAK06C,SAAU,CACnB,CACA,YAAMC,GACF36C,KAAKiU,QACLjU,KAAKE,aACCF,KAAK4K,KAAK,CAAE7H,MAAO,EAAG0D,OAAQ,GACxC,CACAgJ,MAAAA,CAAOvK,EAAUka,EAAOq3B,GACpBz2C,KAAK46C,SAAS56C,KAAKy5C,OAAO9vB,QAAQzkB,QAAWzG,EAAW2gB,EAAOq3B,EACnE,CACAmE,QAAAA,CAAS32B,GAAsC,IAA/BnF,EAAQvgB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAG6gB,EAAK7gB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAEg4C,EAAQl4C,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACzC,GAAIwlB,EAAQ,GAAKA,EAAQjkB,KAAKsS,MAC1B,OAEJ,IAAIuoC,EAAU,EACd,IAAK,IAAIt7C,EAAI0kB,EAAO42B,EAAU/7B,GAAYvf,EAAIS,KAAKsS,MAAO/S,IACtDS,KAAK45C,gBAAgBr6C,IAAK6f,EAAOq3B,IAAaoE,GAEtD,CACAn7B,cAAAA,CAAeZ,EAAUM,GACrBpf,KAAK46C,SAAS,EAAG97B,EAAUM,EAC/B,CACAwnB,UAAAA,GACI,MAAMnmC,EAAUT,KAAKgE,WAAWmP,cAAe0L,EAASpe,EAAQ2B,UAAUyc,OAC1E,IAAK,MAAMO,KAASP,EAChB7e,KAAKy4C,cAAc55B,EAAOO,GAAQ,EAAGA,GAEzCpf,KAAKy4C,cAAch4C,EAAQ2B,UAAW3B,EAAQqyC,gBAAgBt0C,OAClE,CACA,YAAMoO,CAAOrH,GACT,MAAMtD,EAAYjC,KAAKgE,WAAY82C,EAAoB,IAAIC,IAC3D/6C,KAAKqT,SAAW,IAAIwkC,GAASW,GAAev2C,EAAU8F,OAAOvE,MAjN/C,GAkNd,IAAK,MAAO,CAAEqC,KAAkB5D,EAAUs4C,eACtC10C,EAAc+G,SAElB,IAAK,MAAO,CAAEmB,KAAW9L,EAAU+L,QAC/BD,EAAOnB,QAAUmB,EAAOnB,OAAOrH,GAEnC,IAAK,MAAML,KAAYlF,KAAKy5C,OAAQ,CAChC,MAAMjT,EAAevkC,EAAU8F,OAAOy+B,aAClCA,IAAiBthC,EAASyxC,qBAC1BzxC,EAASkC,SAASlB,GAAKsgC,EAAavlC,MACpCiE,EAASkC,SAASjB,GAAKqgC,EAAaxlC,OACpCkE,EAASyE,gBAAgBzD,GAAKsgC,EAAavlC,MAC3CiE,EAASyE,gBAAgBxD,GAAKqgC,EAAaxlC,QAE/CkE,EAASyxC,oBAAqB,QACxB32C,KAAK+5C,oBAAoB3sC,MAAMlI,GACrC,IAAK,MAAO,CAAE6I,KAAW/N,KAAKgE,WAAWgK,QAAS,CAC9C,GAAI9I,EAAS0D,UACT,MAEAmF,EAAOitC,gBACPjtC,EAAOitC,eAAe91C,EAAUK,EAExC,CACA,IAAK,MAAMiyC,KAASx3C,KAAKy3C,OACrBD,EAAM7uC,UAAUzD,IAAasyC,EAAMp0C,KAAK8B,EAAUK,GAElDL,EAAS0D,UACTkyC,EAAkB9T,IAAI9hC,GAG1BlF,KAAKqT,SAAS+kC,OAAO,IAAIR,GAAM1yC,EAAS+C,cAAe/C,GAC3D,CACA,GAAI41C,EAAkBt3C,KAAM,CACxB,MAAMy3C,EAAe3nC,IAAOwnC,EAAkBI,IAAI5nC,GAClDtT,KAAKy5C,OAASz5C,KAAKnB,OAAOo8C,GAC1Bj7C,KAAK05C,QAAU15C,KAAK05C,QAAQ76C,OAAOo8C,GACnCj7C,KAAKq5C,KAAKl6B,QAAQ27B,EACtB,OACM96C,KAAK+5C,oBAAoB1F,iBAAiB9uC,GAChD,IAAK,MAAML,KAAYlF,KAAKy5C,OAAQ,CAChC,IAAK,MAAM/oC,KAAW1Q,KAAK2Q,SACvBD,EAAQ9D,OAAO1H,EAAUK,GAExBL,EAAS0D,WAAc1D,EAASyH,gBAC3B3M,KAAK+5C,oBAAoBzF,kBAAkBpvC,EAAUK,EAEnE,CAEA,UADOtD,EAAU8F,OAAOy+B,aACpBxmC,KAAKk3C,UAAW,CAChB,MAAMiE,EAASn7C,KAAK05C,QACpByB,EAAOnpB,MAAK,CAAC7N,EAAGnB,IAAMA,EAAE5b,SAASwoB,EAAIzL,EAAE/c,SAASwoB,GAAKzL,EAAEtjB,GAAKmiB,EAAEniB,KAC9Db,KAAKm3C,WAAagE,EAAOA,EAAO38C,OAAS,GAAG4I,SAASwoB,EACrD5vB,KAAKk3C,WAAY,CACrB,CACJ,EC9QG,MAAMkE,GACTv7C,WAAAA,CAAYoC,GACRjC,KAAKiC,UAAYA,EACjBjC,KAAKsI,WAAa,EAClBtI,KAAKoJ,aAAe,CACxB,CACAlJ,IAAAA,GACI,MAAM+B,EAAYjC,KAAKiC,UAAWxB,EAAUwB,EAAUkR,cACtDnT,KAAKsI,YAAc7H,EAAQmyC,eAAgB5kB,EAAAA,EAAAA,MAAU,EAAI/oB,OAAOo2C,iBAChEr7C,KAAKoJ,aAAe,EACpB,MAAMsO,EAAQ1X,KAAKsI,WACnB,GAAIrG,EAAU8F,OAAOmf,QAAS,CAC1B,MAAMA,EAAUjlB,EAAU8F,OAAOmf,QACjCjlB,EAAU8F,OAAOvE,KAAKvC,MAAQimB,EAAQ9Q,YAAcsB,EACpDzV,EAAU8F,OAAOvE,KAAKxC,OAASkmB,EAAQ5Q,aAAeoB,CAC1D,CACA,MAAMtV,EAAY3B,EAAQ2B,UAAW+C,EAAc/C,EAAUgB,KAC7DpD,KAAKyuB,iBAAkBrmB,EAAAA,EAAAA,IAAcjD,EAAYiN,QAAQnP,UAAYyU,EACrE1X,KAAKqF,UAAW+C,EAAAA,EAAAA,IAAcjD,EAAYmB,QAAQjB,UAAYqS,EAC9D1X,KAAKgR,oBAAqB5I,EAAAA,EAAAA,IAAchG,EAAUoB,KAAK4I,UAAU/I,OAASqU,CAC9E,CACAu/B,YAAAA,CAAa/xC,GACT,MAAMzE,EAAUyE,EAASzE,QAASiX,EAAQ1X,KAAKsI,WAAYnD,EAAc1E,EAAQ2C,KAAMk4C,EAAen2C,EAAYlC,SAAUnD,EAAQoF,EAASmD,OAC7IvI,EAAM2uB,iBAAkBrmB,EAAAA,EAAAA,IAAcjD,EAAYiN,QAAQnP,UAAYyU,EACtE5X,EAAMwF,WAAY8C,EAAAA,EAAAA,IAAcjD,EAAYkE,OAASqO,EACrD5X,EAAMsF,WAAYgD,EAAAA,EAAAA,IAAcjD,EAAY9B,OAASqU,EACrD5X,EAAMkR,oBAAqB5I,EAAAA,EAAAA,IAAc3H,EAAQ+C,KAAK4I,UAAU/I,OAASqU,EACzE,MAAMxN,EAAcpK,EAAMoK,YAC1BA,EAAYE,gBAAyC3L,IAA5B68C,EAAalxC,WAA2BkxC,EAAalxC,WAAasN,OAAQjZ,EACnGyL,EAAYI,cAAqC7L,IAA1B68C,EAAahxC,SAAyBgxC,EAAahxC,SAAWoN,OAAQjZ,EAC7FqB,EAAMuF,UAAW+C,EAAAA,EAAAA,IAAcjD,EAAYmB,QAAQjB,UAAYqS,CACnE,ECxBJ,SAAS6jC,GAAWt5C,GAChB,OAAOA,IAAcA,EAAU2G,SACnC,CAOA,SAAS4yC,GAAqBl3C,EAAQrC,GAClC,MAAMxB,EAAU,IAAI6xC,GAAQhuC,EAAQrC,GAAW,QAAA6S,EAAAvW,UAAAC,OADC0zC,EAAgB,IAAAhzC,MAAA4V,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAhBk9B,EAAgBl9B,EAAA,GAAAzW,UAAAyW,GAGhE,OADAqX,GAAY5rB,KAAYyxC,GACjBzxC,CACX,CACA,MAA2Cg7C,GAAuB,CAC9D31C,SAAWwN,GAAMA,EAAEvN,SACnB7F,KAAMA,OAEN0M,OAAQA,OAERQ,MAAOA,QAGJ,MAAMsuC,GACT77C,WAAAA,CAAYyE,EAAQzD,EAAIsxC,GACpBnyC,KAAKa,GAAKA,EACVb,KAAK27C,qBAAwB9Q,IACzB,GAAK0Q,GAAWv7C,OAAUA,KAAKmT,cAAc4/B,uBAG7C,IAAK,MAAM6I,KAAS/Q,EACZ+Q,EAAM9Q,SAAW9qC,KAAKyS,cAAcyU,UAGvC00B,EAAMC,eAAiB77C,KAAKoE,KAAOpE,KAAKkE,QAC7C,EAEJlE,KAAK87C,WAAan6C,UACd,IACI,IAAK3B,KAAKsuB,aACiB7vB,IAAvBuB,KAAK+7C,eACLC,EAAYh8C,KAAK+7C,cAAgB,IAAO/7C,KAAK6yC,SAE7C,YADA7yC,KAAK4K,MAAK,GAGd5K,KAAK+7C,gBAAkBC,EACvB,MAAMz2C,EA3CtB,SAAmBxC,GACf,MAAO,CACHA,QACA0D,OAHuClI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAGtB,IAHSA,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAGK,GAAKwE,EAAS,IAExD,CAsC8Bk5C,CAAUD,EAAYh8C,KAAK+7C,cAAe/7C,KAAK6yC,SAAU7yC,KAAKsuB,QAG5E,GAFAtuB,KAAKk8C,YAAY32C,EAAMxC,OACvB/C,KAAK+7C,cAAgBC,EACjBz2C,EAAMxC,MAAQ,IAEd,YADA/C,KAAK4K,MAAK,GAId,SADM5K,KAAKoC,UAAUwI,KAAKrF,IACrBvF,KAAKm8C,QAEN,YADAn8C,KAAKI,UAGLJ,KAAK2e,sBACL3e,KAAK4K,MAAK,EAElB,CACA,MAAO66B,IACHre,EAAAA,EAAAA,MAAY7C,MAAM,GAAG8C,EAAAA,uBAAiCoe,EAC1D,GAEJzlC,KAAK2T,QAAUrP,EACftE,KAAK6yC,SAAW,IAChB7yC,KAAKsuB,QAAS,EACdtuB,KAAKo8C,OAAS,EACdp8C,KAAKq8C,UAAY,EACjBr8C,KAAKs8C,UAAY,EACjBt8C,KAAKu8C,aAAc,EACnBv8C,KAAKumC,SAAU,EACfvmC,KAAK4I,WAAY,EACjB5I,KAAKw8C,SAAU,EACfx8C,KAAK+7C,cAAgB,EACrB/7C,KAAKgzC,QAAU,IACfhzC,KAAKwoC,YAAa,EAClBxoC,KAAKy8C,eAAiBtK,EACtBnyC,KAAK08C,sBAAwBvK,EAC7BnyC,KAAKqI,OAAS,IAAI+yC,GAAOp7C,MACzBA,KAAK+H,OAAS,IAAI+4B,EAAO9gC,MACzBA,KAAKoC,UAAY,IAAIzC,GAAUK,KAAK2T,QAAS3T,MAC7CA,KAAKu6C,eAAiB,IAAIhpB,IAC1BvxB,KAAKyS,cAAgB,CACjBC,MAAO,CACHH,UAAU,EACVgsB,QAAQ,IAGhBv+B,KAAKgO,QAAU,IAAIujB,IACnBvxB,KAAKq3C,QAAU,IAAI9lB,IACnBvxB,KAAK28C,SAAWnB,GAAqBx7C,KAAK2T,QAAS3T,MACnDA,KAAKmT,cAAgBqoC,GAAqBx7C,KAAK2T,QAAS3T,MACxDA,KAAK48C,gBAAkB,IAAItV,EAAetnC,MACN,qBAAzB68C,sBAAwCA,uBAC/C78C,KAAK88C,sBAAwB,IAAID,sBAAsBhS,GAAY7qC,KAAK27C,qBAAqB9Q,MAEjG7qC,KAAK2T,QAAQgmC,cAAc,iBAAkB,CAAE13C,UAAWjC,MAC9D,CACA,WAAIS,GACA,OAAOT,KAAK28C,QAChB,CACA,iBAAIxK,GACA,OAAOnyC,KAAKy8C,cAChB,CACAM,eAAAA,CAAgBp4C,GACZ,IAAK42C,GAAWv7C,MACZ,OAEJ,MAAMuC,EAAKvC,KAAKyS,cAAcyU,QAC9B,IAAK3kB,EACD,OAEJ,MAAMy6C,EAAsBA,CAACvX,EAAGz9B,EAAKU,KACjC,IAAK6yC,GAAWv7C,MACZ,OAEJ,MAAM8I,EAAU9I,KAAKqI,OAAOC,WAAY20C,EAAY,CAChD/2C,EAAG8B,EAAI9B,EAAI4C,EACX3C,EAAG6B,EAAI7B,EAAI2C,GACZ1G,EAAYpC,KAAKoC,UAAUiR,SAAS4E,YAAYglC,EAAWv0C,EAASI,GACvEnE,EAAS8gC,EAAGrjC,EAAU,EAsD1B,IAAI86C,GAAU,EAAOC,GAAa,EAClC56C,EAAG4kB,iBAAiB,SArDEse,IAClB,IAAK8V,GAAWv7C,MACZ,OAEJ,MAAMqrC,EAAa5F,EAAGz9B,EAAM,CACxB9B,EAAGmlC,EAAWzS,SAAWyS,EAAWG,QACpCrlC,EAAGklC,EAAWS,SAAWT,EAAWI,SAExCuR,EAAoBvX,EAAGz9B,EAAK,EAAE,IA8ClCzF,EAAG4kB,iBAAiB,cA5CMi2B,KACjB7B,GAAWv7C,QAGhBk9C,GAAU,EACVC,GAAa,EAAK,IAwCtB56C,EAAG4kB,iBAAiB,aAtCKk2B,KAChB9B,GAAWv7C,QAGhBm9C,GAAa,EAAI,IAmCrB56C,EAAG4kB,iBAAiB,YAjCKse,IACrB,GAAK8V,GAAWv7C,MAAhB,CAGA,GAAIk9C,IAAYC,EAAY,CACxB,MAAMpR,EAAatG,EACnB,IAAIuG,EAAYD,EAAWE,QAAQF,EAAWE,QAAQztC,OAAS,GAC/D,IAAKwtC,IACDA,EAAYD,EAAWK,eAAeL,EAAWK,eAAe5tC,OAAS,IACpEwtC,GACD,OAGR,MAAM9kB,EAAUlnB,KAAK+H,OAAOmf,QAAS2kB,EAAa3kB,EAAUA,EAAQqkB,6BAA0B9sC,EAAWuJ,EAAM,CAC3G9B,EAAG8lC,EAAUR,SAAWK,EAAaA,EAAWv9B,KAAO,GACvDnI,EAAG6lC,EAAUP,SAAWI,EAAaA,EAAW/8B,IAAM,IAE1DkuC,EAAoBvX,EAAGz9B,EAAKV,KAAK5D,IAAIsoC,EAAUsR,QAAStR,EAAUuR,SACtE,CACAL,GAAU,EACVC,GAAa,CAjBb,CAiBkB,IActB56C,EAAG4kB,iBAAiB,eAZOq2B,KAClBjC,GAAWv7C,QAGhBk9C,GAAU,EACVC,GAAa,EAAK,GAQ1B,CACAjB,WAAAA,CAAYn5C,GACR/C,KAAKs8C,WAAav5C,CACtB,CACAi0C,OAAAA,CAAQl4C,EAAKywC,GAA6B,IAAlBkH,EAAQl4C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC5B,SAAKg9C,GAAWv7C,QAAWy2C,GAAYz2C,KAAKu6C,eAAeW,IAAIp8C,MAG/DkB,KAAKu6C,eAAe73C,IAAI5D,EAAKywC,GAAakM,KACnC,EACX,CACAU,KAAAA,GACI,OAAQn8C,KAAKq8C,WAAar8C,KAAKs8C,WAAat8C,KAAKq8C,SACrD,CACAj8C,OAAAA,GACI,IAAKm7C,GAAWv7C,MACZ,OAEJA,KAAK0kC,OACL1kC,KAAKoC,UAAUhC,UACfJ,KAAK+H,OAAO3H,UACZ,IAAK,MAAO,CAAEg3C,KAAWp3C,KAAKq3C,QAC1BD,EAAOh3C,SAAWg3C,EAAOh3C,QAAQJ,MAErC,IAAK,MAAMlB,KAAOkB,KAAKq3C,QAAQz4C,OAC3BoB,KAAKq3C,QAAQ9K,OAAOztC,GAExBkB,KAAK2T,QAAQ3F,QAAQ5N,QAAQJ,MAC7BA,KAAK4I,WAAY,EACjB,MAAM60C,EAAUz9C,KAAK2T,QAAQ5O,MAAO24C,EAAMD,EAAQ7oB,WAAWzd,GAAMA,IAAMnX,OACrE09C,GAAO,GACPD,EAAQ3D,OAAO4D,EAAK,GAExB19C,KAAK2T,QAAQgmC,cAAc,qBAAsB,CAAE13C,UAAWjC,MAClE,CACA4K,IAAAA,CAAKgQ,GACD,IAAK2gC,GAAWv7C,MACZ,OAEJ,IAAI29C,EAAc/iC,EAClB5a,KAAK49C,oBAAsBC,uBAAsBl8C,UACzCg8C,IACA39C,KAAK+7C,mBAAgBt9C,EACrBk/C,GAAc,SAEZ39C,KAAK87C,WAAWE,EAAU,GAExC,CACA,YAAM8B,CAAOhsC,GAAoB,IAAdrR,EAAOlC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1B,IAAK,MAAO,CAAEwP,KAAW/N,KAAKgO,QAAS,CACnC,IAAKD,EAAO+vC,OACR,SAEJ,MAAMp2B,QAAY3Z,EAAO+vC,OAAOhsC,EAAMrR,GACtC,GAAKinB,EAAIq2B,UAGT,OAAOr2B,EAAIs2B,IACf,EACA52B,EAAAA,EAAAA,MAAY7C,MAAM,GAAG8C,EAAAA,gCAAyCvV,cAClE,CACA6M,kBAAAA,GACI,OAAQ3e,KAAKw8C,UAAYx8C,KAAKwoC,YAAc+S,GAAWv7C,KAC3D,CACA4T,eAAAA,CAAgBC,GACZ,GAAK0nC,GAAWv7C,MAAhB,CAGAA,KAAKoC,UAAUwR,gBAAgBC,GAC/B,IAAK,MAAO,CAAE9F,KAAW/N,KAAKgO,QAC1BD,EAAO6F,iBAAmB7F,EAAO6F,gBAAgBC,EAHrD,CAKJ,CACA,UAAM3T,GACF,IAAKq7C,GAAWv7C,MACZ,OAEJ,MAAMi+C,EAASj+C,KAAK2T,QAAQ3F,QAAQkwC,qBACpC,IAAK,MAAMpsC,KAAQmsC,EAAQ,CACvB,MAAM7G,EAASp3C,KAAK2T,QAAQ3F,QAAQspC,eAAexlC,GAC/CslC,GACAp3C,KAAKq3C,QAAQ30C,IAAIoP,EAAMslC,EAE/B,CACAp3C,KAAK28C,SAAWnB,GAAqBx7C,KAAK2T,QAAS3T,KAAMA,KAAK08C,sBAAuB18C,KAAKmyC,eAC1FnyC,KAAKmT,cAAgBqoC,GAAqBx7C,KAAK2T,QAAS3T,KAAMA,KAAK28C,UACnE,MAAMwB,EAAmBn+C,KAAK2T,QAAQ3F,QAAQowC,oBAAoBp+C,MAClE,IAAK,MAAOa,EAAIkN,KAAWowC,EACvBn+C,KAAKgO,QAAQtL,IAAI7B,EAAIkN,GAEzB/N,KAAKqI,OAAOnI,aACNF,KAAK+H,OAAO7H,OAClBF,KAAK2mC,sBACL3mC,KAAK+H,OAAOi8B,iBACZhkC,KAAK+H,OAAO85B,SACZ7hC,KAAKgzC,QAAUhzC,KAAKmT,cAAc6/B,QAClChzC,KAAKq8C,UAAyD,KAA7Cj0C,EAAAA,EAAAA,IAAcpI,KAAKmT,cAAcnB,UAClDhS,KAAKo8C,OAAmD,KAA1Ch0C,EAAAA,EAAAA,IAAcpI,KAAKmT,cAAcga,OAC/CntB,KAAKs8C,UAAY,EACjBt8C,KAAK6yC,SAAW7yC,KAAKmT,cAAc0/B,SAAW,EAAI7yC,KAAKmT,cAAc0/B,SAAW,IAChF7yC,KAAKsuB,OAAStuB,KAAKmT,cAAcmb,OACjC,IAAK,MAAO,CAAE8oB,KAAWp3C,KAAKq3C,QAC1BD,EAAOl3C,YAAek3C,EAAOl3C,KAAKF,MAEtC,IAAK,MAAO,CAAE+N,KAAW/N,KAAKgO,QAC1BD,EAAO7N,YAAe6N,EAAO7N,OAEjCF,KAAK2T,QAAQgmC,cAAc,gBAAiB,CAAE13C,UAAWjC,OACzDA,KAAKoC,UAAUlC,OACfF,KAAKoC,UAAUwkC,aACf,IAAK,MAAO,CAAE74B,KAAW/N,KAAKgO,QAC1BD,EAAOswC,gBAAkBtwC,EAAOswC,iBAEpCr+C,KAAK2T,QAAQgmC,cAAc,iBAAkB,CAAE13C,UAAWjC,MAC9D,CACA,eAAMooC,CAAU3jB,GACP82B,GAAWv7C,QAGhBA,KAAKs+C,cAAgB75B,QACfzkB,KAAKsB,UACf,CACA4C,KAAAA,GACI,GAAKq3C,GAAWv7C,aAGiBvB,IAA7BuB,KAAK49C,sBACLW,qBAAqBv+C,KAAK49C,4BACnB59C,KAAK49C,sBAEZ59C,KAAKw8C,SAAT,CAGA,IAAK,MAAO,CAAEzuC,KAAW/N,KAAKgO,QAC1BD,EAAO7J,OAAS6J,EAAO7J,QAEtBlE,KAAKwoC,aACNxoC,KAAKw8C,SAAU,GAEnBx8C,KAAK2T,QAAQgmC,cAAc,kBAAmB,CAAE13C,UAAWjC,MAP3D,CAQJ,CACAoE,IAAAA,CAAKwW,GACD,IAAK2gC,GAAWv7C,MACZ,OAEJ,MAAMw+C,EAAcx+C,KAAKw8C,SAAW5hC,EACpC,IAAI5a,KAAKu8C,aAAgBv8C,KAAKmT,cAAcw/B,SAA5C,CAOA,GAHI3yC,KAAKw8C,UACLx8C,KAAKw8C,SAAU,GAEfgC,EACA,IAAK,MAAO,CAAEzwC,KAAW/N,KAAKgO,QACtBD,EAAO3J,MACP2J,EAAO3J,OAInBpE,KAAK2T,QAAQgmC,cAAc,gBAAiB,CAAE13C,UAAWjC,OACzDA,KAAK4K,KAAK4zC,IAAe,EAZzB,MAFIx+C,KAAKu8C,aAAc,CAe3B,CACA,aAAMj7C,GACF,GAAKi6C,GAAWv7C,MAIhB,OADAA,KAAK0kC,OACE1kC,KAAKy1B,OAChB,CACA,WAAMroB,GACF,GAAKmuC,GAAWv7C,MAMhB,OAHAA,KAAK08C,2BAAwBj+C,EAC7BuB,KAAK28C,SAAWnB,GAAqBx7C,KAAK2T,QAAS3T,MACnDA,KAAKmT,cAAgBqoC,GAAqBx7C,KAAK2T,QAAS3T,KAAMA,KAAK28C,UAC5D38C,KAAKsB,SAChB,CACAm9C,QAAAA,CAASC,EAAkBx+C,EAAM0M,GACxB2uC,GAAWv7C,OAGhBA,KAAK2+C,QAAQD,EAAkBx+C,EAAM0M,EACzC,CACA+xC,OAAAA,CAAQC,EAAiB1+C,EAAM0M,GAC3B,IAAKgyC,IAAoBrD,GAAWv7C,MAChC,OAEJ,MAAM6F,EAAgB,IAAK41C,IAC3B,IAAI9a,EAAAA,EAAAA,IAAWie,GACX/4C,EAAcC,SAAW84C,EACrB1+C,IACA2F,EAAc3F,KAAOA,GAErB0M,IACA/G,EAAc+G,OAASA,OAG1B,CACD,MAAMiyC,EAAeh5C,EACrBA,EAAcC,SAAW84C,EAAgB94C,UAAY+4C,EAAa/4C,SAClED,EAAc3F,KAAO0+C,EAAgB1+C,MAAQ2+C,EAAa3+C,KAC1D2F,EAAc+G,OAASgyC,EAAgBhyC,QAAUiyC,EAAajyC,MAClE,CACA5M,KAAKg3C,QAtXmB,UAsXcnxC,GAAe,EACzD,CACA,WAAM4vB,GACG8lB,GAAWv7C,QAASA,KAAKumC,gBAGxBvmC,KAAKE,OACXF,KAAKumC,SAAU,QACT,IAAI1f,SAASC,IACf9mB,KAAK8+C,cAAgB9qC,YAAWrS,UAC5B3B,KAAK48C,gBAAgBhQ,eACjB5sC,KAAKyS,cAAcyU,mBAAmB63B,aAAe/+C,KAAK88C,uBAC1D98C,KAAK88C,sBAAsB7Y,QAAQjkC,KAAKyS,cAAcyU,SAE1D,IAAK,MAAO,CAAEnZ,KAAW/N,KAAKgO,QAC1BD,EAAO0nB,aAAgB1nB,EAAO0nB,QAElCz1B,KAAK2T,QAAQgmC,cAAc,mBAAoB,CAAE13C,UAAWjC,OAC5DA,KAAKoE,OACL0iB,GAAS,GACV9mB,KAAKo8C,OAAO,IAEvB,CACA1X,IAAAA,GACI,GAAK6W,GAAWv7C,OAAUA,KAAKumC,QAA/B,CAGIvmC,KAAK8+C,gBACLnW,aAAa3oC,KAAK8+C,sBACX9+C,KAAK8+C,eAEhB9+C,KAAKu8C,aAAc,EACnBv8C,KAAKumC,SAAU,EACfvmC,KAAK48C,gBAAgB/P,kBACrB7sC,KAAKkE,QACLlE,KAAKoC,UAAU6R,QACfjU,KAAK+H,OAAO28B,OACR1kC,KAAKyS,cAAcyU,mBAAmB63B,aAAe/+C,KAAK88C,uBAC1D98C,KAAK88C,sBAAsBlS,UAAU5qC,KAAKyS,cAAcyU,SAE5D,IAAK,MAAO,CAAEnZ,KAAW/N,KAAKgO,QAC1BD,EAAO22B,MAAQ32B,EAAO22B,OAE1B,IAAK,MAAM5lC,KAAOkB,KAAKgO,QAAQpP,OAC3BoB,KAAKgO,QAAQu+B,OAAOztC,GAExBkB,KAAKy8C,eAAiBz8C,KAAK28C,SAC3B38C,KAAK2T,QAAQgmC,cAAc,mBAAoB,CAAE13C,UAAWjC,MArB5D,CAsBJ,CACA2mC,mBAAAA,GACI3mC,KAAKmT,cAAcvP,WAAa,GAChC,MAAMo7C,EAAch/C,KAAKmT,cAAcogC,cAAcvzC,KAAK+H,OAAOvE,KAAKvC,MAAOjB,KAAKqI,OAAOC,WAAYtI,KAAK28C,UAE1G,OADA38C,KAAKmT,cAAcygC,SAAS5zC,KAAKs+C,eAC7Bt+C,KAAKi/C,qBAAuBD,IAGhCh/C,KAAKi/C,mBAAqBD,GACnB,EACX,ECvcG,MAAME,GACTr/C,WAAAA,GACIG,KAAKm/C,WAAa,IAAI5tB,GAC1B,CACApK,gBAAAA,CAAiBrV,EAAMstC,GACnBp/C,KAAKqnC,oBAAoBv1B,EAAMstC,GAC/B,IAAIC,EAAMr/C,KAAKm/C,WAAW7tB,IAAIxf,GACzButC,IACDA,EAAM,GACNr/C,KAAKm/C,WAAWz8C,IAAIoP,EAAMutC,IAE9BA,EAAIlgC,KAAKigC,EACb,CACAzF,aAAAA,CAAc7nC,EAAMwtC,GAChB,MAAMC,EAAYv/C,KAAKm/C,WAAW7tB,IAAIxf,GACtCytC,GAAaA,EAAUvpC,SAAS+wB,GAAYA,EAAQuY,IACxD,CACAE,gBAAAA,CAAiB1tC,GACb,QAAS9R,KAAKm/C,WAAW7tB,IAAIxf,EACjC,CACA2tC,uBAAAA,CAAwB3tC,GACfA,EAID9R,KAAKm/C,WAAW5S,OAAOz6B,GAHvB9R,KAAKm/C,WAAa,IAAI5tB,GAK9B,CACA8V,mBAAAA,CAAoBv1B,EAAMstC,GACtB,MAAMC,EAAMr/C,KAAKm/C,WAAW7tB,IAAIxf,GAChC,IAAKutC,EACD,OAEJ,MAAM7gD,EAAS6gD,EAAI7gD,OAAQk/C,EAAM2B,EAAI11B,QAAQy1B,GACzC1B,EAAM,IAGK,IAAXl/C,EACAwB,KAAKm/C,WAAW5S,OAAOz6B,GAGvButC,EAAIvF,OAAO4D,EAAK,GAExB,EC1CJ,SAASgC,GAAwBz9C,EAAW4B,EAAK87C,GAA6B,IAAf/kC,EAAKrc,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC5DmpB,EAAM7jB,EAAIytB,IAAIrvB,GAKlB,OAJKylB,IAAO9M,IACR8M,EAAM,IAAIi4B,EAAaC,UAAU/7C,KAAKsT,GAAMA,EAAElV,KAC9C4B,EAAInB,IAAIT,EAAWylB,IAEhBA,CACX,CACO,MAAMm4B,GACThgD,WAAAA,CAAYyE,GACRtE,KAAK2T,QAAUrP,EACftE,KAAKgO,QAAU,GACfhO,KAAK8/C,cAAgB,CACjBjS,YAAa,IAAItc,IACjBkmB,OAAQ,IAAIlmB,IACZ5gB,SAAU,IAAI4gB,KAElBvxB,KAAK6tC,YAAc,IAAItc,IACvBvxB,KAAKy3C,OAAS,IAAIlmB,IAClBvxB,KAAK2Q,SAAW,IAAI4gB,IACpBvxB,KAAK+/C,QAAU,IAAIxuB,IACnBvxB,KAAKq3C,QAAU,IAAI9lB,IACnBvxB,KAAKu6C,eAAiB,IAAIhpB,GAC9B,CACA8D,aAAAA,CAAc5Q,EAAMu7B,GAChBhgD,KAAK8/C,cAAcjS,YAAYnrC,IAAI+hB,EAAMu7B,EAC7C,CACAC,gBAAAA,CAAiBx7B,EAAMy7B,GACnBlgD,KAAK8/C,cAAcrI,OAAO/0C,IAAI+hB,EAAMy7B,EACxC,CACA1uC,kBAAAA,CAAmBiT,EAAM07B,GACrBngD,KAAK8/C,cAAcnvC,SAASjO,IAAI+hB,EAAM07B,EAC1C,CACAC,gBAAAA,CAAiBtuC,EAAMjM,IAClB7F,KAAK+2C,iBAAiBjlC,IAAS9R,KAAKu6C,eAAe73C,IAAIoP,EAAMjM,EAClE,CACA+mB,SAAAA,CAAU7e,IACL/N,KAAKosB,UAAUre,EAAOlN,KAAOb,KAAKgO,QAAQmR,KAAKpR,EACpD,CACAsyC,SAAAA,CAAUC,EAAW7/C,IAAiBlC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,KACpByB,KAAK0yC,UAAU4N,KAAetgD,KAAK+/C,QAAQr9C,IAAI49C,EAAW7/C,EAC5E,CACA8/C,cAAAA,CAAeC,EAAOpJ,IAClBtgC,EAAAA,EAAAA,IAA0B0pC,GAAQ1uC,KAC7B9R,KAAKs3C,eAAexlC,IAAS9R,KAAKq3C,QAAQ30C,IAAIoP,EAAMslC,EAAO,GAEpE,CACAh3C,OAAAA,CAAQ6B,GACJjC,KAAK2Q,SAAS47B,OAAOtqC,GACrBjC,KAAKy3C,OAAOlL,OAAOtqC,GACnBjC,KAAK6tC,YAAYtB,OAAOtqC,EAC5B,CACAm8C,mBAAAA,CAAoBn8C,GAChB,MAAMylB,EAAM,IAAI6J,IAChB,IAAK,MAAMxjB,KAAU/N,KAAKgO,QACtBD,EAAOye,YAAYvqB,EAAUkR,gBAAkBuU,EAAIhlB,IAAIqL,EAAOlN,GAAIkN,EAAOqe,UAAUnqB,IAEvF,OAAOylB,CACX,CACAwsB,cAAAA,CAAejyC,GAA0B,IAAf2Y,EAAKrc,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC3B,OAAOmhD,GAAwBz9C,EAAWjC,KAAK6tC,YAAa7tC,KAAK8/C,cAAcjS,YAAajzB,EAChG,CACAo/B,SAAAA,CAAU/3C,GAA0B,IAAf2Y,EAAKrc,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACtB,OAAOmhD,GAAwBz9C,EAAWjC,KAAKy3C,OAAQz3C,KAAK8/C,cAAcrI,OAAQ78B,EACtF,CACAm8B,gBAAAA,CAAiBjlC,GACb,OAAO9R,KAAKu6C,eAAejpB,IAAIxf,EACnC,CACAsa,SAAAA,CAAUre,GACN,OAAO/N,KAAKgO,QAAQ+d,MAAM5U,GAAMA,EAAEtW,KAAOkN,GAC7C,CACA2kC,SAAAA,CAAUD,GACN,OAAOzyC,KAAK+/C,QAAQzuB,IAAImhB,EAC5B,CACA6E,cAAAA,CAAexlC,GACX,OAAO9R,KAAKq3C,QAAQ/lB,IAAIxf,EAC5B,CACAosC,kBAAAA,GACI,OAAOl+C,KAAKq3C,QAAQz4C,MACxB,CACAq7C,WAAAA,CAAYh4C,GAA0B,IAAf2Y,EAAKrc,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACxB,OAAOmhD,GAAwBz9C,EAAWjC,KAAK2Q,SAAU3Q,KAAK8/C,cAAcnvC,SAAUiK,EAC1F,CACAyR,WAAAA,CAAY5rB,EAAS0xC,GACjB,IAAK,MAAMpkC,KAAU/N,KAAKgO,QACtBD,EAAOse,YAAY5rB,EAAS0xC,EAEpC,CACAtgB,oBAAAA,CAAqB5vB,EAAWxB,GAC5B,MAAMkQ,EAAW3Q,KAAK2Q,SAAS2gB,IAAIrvB,GACnC,GAAK0O,EAAL,CAEC,QAAAmE,EAAAvW,UAAAC,OAJuC2zC,EAAa,IAAAjzC,MAAA4V,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAbm9B,EAAan9B,EAAA,GAAAzW,UAAAyW,GAKrD,IAAK,MAAMtE,KAAWC,EAClBD,EAAQ2b,aAAe3b,EAAQ2b,YAAY5rB,KAAY0xC,EAF3D,CAIJ,ECzEG,MAAMsO,GACT5gD,WAAAA,GACIG,KAAK0gD,SAAW,IAAInvB,IACpBvxB,KAAK2gD,UAAY,GACjB3gD,KAAK4gD,iBAAmB,IAAI1B,GAC5Bl/C,KAAK6gD,cAAe,EACpB7gD,KAAKgO,QAAU,IAAI6xC,GAAQ7/C,KAC/B,CACA,WAAI8gD,GACA,MAAMp5B,EAAM,CAAC,EACb,IAAK,MAAOjD,EAAMs8B,KAAW/gD,KAAK0gD,SAC9Bh5B,EAAIjD,GAAQs8B,EAEhB,OAAOr5B,CACX,CACA,WAAIs5B,GACA,MAAO,QACX,CACAC,SAAAA,CAAUC,EAAcH,IAChBrgB,EAAAA,EAAAA,IAASwgB,GACLH,IACAA,EAAOt8B,KAAOy8B,EACdlhD,KAAK0gD,SAASh+C,IAAIw+C,EAAcH,IAIpC/gD,KAAK0gD,SAASh+C,IAAIw+C,EAAaz8B,MAAQ,UAAWy8B,EAE1D,CACA/5B,gBAAAA,CAAiBrV,EAAMstC,GACnBp/C,KAAK4gD,iBAAiBz5B,iBAAiBrV,EAAMstC,EACjD,CACA,mBAAM/pB,CAAc5Q,EAAM08B,GAAuC,IAAhB7/C,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACpDyB,KAAKgO,QAAQqnB,cAAc5Q,EAAM08B,SAC3BnhD,KAAKsB,QAAQA,EACvB,CACA,cAAM8P,CAASqT,EAAM28B,GAAkC,IAAhB9/C,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAC1CyB,KAAKgO,QAAQiyC,iBAAiBx7B,EAAM28B,SAC9BphD,KAAKsB,QAAQA,EACvB,CACA,wBAAMkQ,CAAmBiT,EAAM48B,GAAoC,IAAhB//C,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACtDyB,KAAKgO,QAAQwD,mBAAmBiT,EAAM48B,SAChCrhD,KAAKsB,QAAQA,EACvB,CACA,sBAAM8+C,CAAiB37B,EAAM8qB,GAA2B,IAAhBjuC,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAC3CyB,KAAKgO,QAAQoyC,iBAAiB37B,EAAM8qB,SAC9BvvC,KAAKsB,QAAQA,EACvB,CACA,eAAMsrB,CAAU7e,GAAwB,IAAhBzM,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAC3ByB,KAAKgO,QAAQ4e,UAAU7e,SACjB/N,KAAKsB,QAAQA,EACvB,CACA,eAAM++C,CAAU5N,EAAQhyC,GAA2C,IAAlCg2C,EAAQl4C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAU+C,IAAO/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACtDyB,KAAKgO,QAAQqyC,UAAU5N,EAAQhyC,EAASg2C,SAClCz2C,KAAKsB,QAAQA,EACvB,CACA,cAAMgQ,CAASwa,EAAOsrB,EAAQkK,EAAeC,EAAsBC,GAAkC,IAC7FC,EACuBC,EAAUC,EAAiBC,EAAlDC,IAFoFtjD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,IAGpF88B,EAAAA,EAAAA,IAAUimB,IACVO,EAAcP,EACdI,OAAWjjD,GAGXijD,EAAWJ,GAEXjmB,EAAAA,EAAAA,IAAUkmB,IACVM,EAAcN,EACdI,OAAkBljD,GAGlBkjD,EAAkBJ,GAElBlmB,EAAAA,EAAAA,IAAUmmB,IACVK,EAAcL,EACdI,OAAcnjD,GAGdmjD,EAAcJ,EAGdC,GADA9gB,EAAAA,EAAAA,IAAWyW,GACI,CACX0K,YAAaH,EACbvhD,QAASwhD,EACTh3C,KAAMwsC,EACNl3C,KAAMwhD,GAIKtK,EAEnBp3C,KAAKgO,QAAQuyC,eAAez0B,EAAO21B,SAC7BzhD,KAAKsB,QAAQugD,EACvB,CACAlI,aAAAA,CAAc7nC,EAAMwtC,GAChBt/C,KAAK4gD,iBAAiBjH,cAAc7nC,EAAMwtC,EAC9C,CACAv6C,GAAAA,GACI,OAAO/E,KAAK2gD,SAChB,CACAoB,OAAAA,CAAQ99B,GACJ,MAAMlf,EAAM/E,KAAK+E,MAAOkR,EAAOlR,EAAIkf,GACnC,GAAKhO,IAAQA,EAAKrN,UAIlB,OAAOqN,EAHHlR,EAAI+0C,OAAO71B,EAAO,EAI1B,CACA/jB,IAAAA,GACQF,KAAK6gD,eAGT7gD,KAAK6gD,cAAe,EACxB,CACA,UAAM3+C,CAAK8/C,EAAwBvhD,GAC/B,OAAOT,KAAKiiD,cAAcD,EAAwBvhD,EACtD,CACA,mBAAMwhD,CAAcD,EAAwBE,EAAgBj+B,GACxD,IAAIvjB,EAoBJ,OA7IR,SAAkBo/B,GACd,UAJmBp/B,EAIGo/B,GAHPj/B,KAAOH,EAAOwmB,UAAYxmB,EAAOE,MAAQF,EAAOD,SADnE,IAAuBC,CAKvB,CAwHayhD,CAASH,IACVthD,EAAS,CAAC,GACNggC,EAAAA,EAAAA,IAASshB,GACTthD,EAAOG,GAAKmhD,EAGZthD,EAAOD,QAAUuhD,GAEjB5mB,EAAAA,EAAAA,IAAS8mB,GACTxhD,EAAOujB,MAAQi+B,EAGfxhD,EAAOD,QAAUyhD,GAAkBxhD,EAAOD,QAE9CC,EAAOujB,MAAQA,GAASvjB,EAAOujB,OAG/BvjB,EAASshD,EAENhiD,KAAKoiD,YAAY1hD,EAC5B,CACA,cAAMkE,CAASH,EAAOC,EAAgBuf,GAClC,IAAIrjB,EAAKC,EAQT,OAPIu6B,EAAAA,EAAAA,IAAS12B,SAAsCjG,IAAnBiG,EAC5B9D,EAAM6D,GAGN5D,EAAK4D,EACL7D,EAAM8D,GAEH1E,KAAKoiD,YAAY,CAAEvhD,GAAIA,EAAID,MAAKqjB,SAC3C,CACA,aAAM3iB,MAAe/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,KAIjByB,KAAK+E,MAAMiR,SAASmB,GAAMA,EAAE7V,WAChC,CACA+lC,mBAAAA,CAAoBv1B,EAAMstC,GACtBp/C,KAAK4gD,iBAAiBvZ,oBAAoBv1B,EAAMstC,EACpD,CACA,SAAM18C,CAAI7B,EAAIqmB,EAASzmB,EAASwjB,GAC5B,MAAMvjB,EAAS,CAAEujB,SAmBjB,OAlBIyc,EAAAA,EAAAA,IAAS7/B,GACTH,EAAOG,GAAKA,EAGZH,EAAOwmB,QAAUrmB,EAEjBqmB,aAAmB63B,YACnBr+C,EAAOwmB,QAAUA,EAGjBxmB,EAAOD,QAAUymB,GAEjBkU,EAAAA,EAAAA,IAAS36B,GACTC,EAAOujB,MAAQxjB,EAGfC,EAAOD,QAAUA,GAAWC,EAAOD,QAEhCT,KAAKoiD,YAAY1hD,EAC5B,CACA,aAAM2hD,CAAQxhD,EAAIqmB,EAASxiB,EAAgBuf,GACvC,MAAMvjB,EAAS,CAAC,EAYhB,OAXIG,aAAck+C,aACdr+C,EAAOwmB,QAAUrmB,EACjBH,EAAOE,IAAMsmB,EACbxmB,EAAOujB,MAAQvf,IAGfhE,EAAOG,GAAKA,EACZH,EAAOwmB,QAAUA,EACjBxmB,EAAOE,IAAM8D,EACbhE,EAAOujB,MAAQA,GAEZjkB,KAAKoiD,YAAY1hD,EAC5B,CACAoE,iBAAAA,CAAkBH,GACd,MAAMI,EAAM/E,KAAK+E,MACjB,IAAKA,EAAIvG,OACL,MAAM,IAAI8D,MAAM,GAAG+kB,EAAAA,mEAEvB,IAAK,MAAM06B,KAAWh9C,EAClBg9C,EAAQhF,gBAAgBp4C,EAEhC,CACA,iBAAMy9C,CAAY1hD,GACd,MAAMG,EAAKH,EAAOG,IAAM,cAAcyG,KAAKyI,MAAoB,KAAdtF,EAAAA,EAAAA,UAAwB,MAAEwZ,EAAK,IAAErjB,GAAQF,EAAQD,EAAUG,QAjOpHe,eAA8B0L,GAC1B,MAAMzM,GAAM6Y,EAAAA,EAAAA,IAAyBpM,EAAKzM,IAAKyM,EAAK4W,OACpD,IAAKrjB,EACD,OAAOyM,EAAKi1C,SAEhB,MAAMl5B,QAAiBzB,MAAM/mB,GAC7B,OAAIwoB,EAASxB,GACFwB,EAASm5B,SAEpBn7B,EAAAA,EAAAA,MAAY7C,MAAM,GAAG8C,EAAAA,MAAe+B,EAAStd,uCACtCuB,EAAKi1C,SAChB,CAsNgIE,CAAe,CAAEF,SAAU5hD,EAAOD,QAASG,MAAKqjB,UAAWvjB,EAAOD,QAC1L,IAAIgiD,EAAe/hD,EAAOwmB,SAAW1kB,SAASkgD,eAAe7hD,GACxD4hD,IACDA,EAAejgD,SAAS6gC,cAAc,OACtCof,EAAa5hD,GAAKA,EAClB2B,SAASmgD,KAAKC,OAAOH,IAEzB,MAAM9hD,GAAiB8Y,EAAAA,EAAAA,IAAyBhZ,EAASwjB,GAAQlf,EAAM/E,KAAK+E,MAAO89C,EAAW99C,EAAI6vB,WAAWgK,GAAMA,EAAE/9B,KAAOA,IAC5H,GAAIgiD,GAAY,EAAG,CACf,MAAMC,EAAM9iD,KAAK+hD,QAAQc,GACrBC,IAAQA,EAAIl6C,YACZk6C,EAAI1iD,UACJ2E,EAAI+0C,OAAO+I,EAAU,GAE7B,CACA,IAAI3Z,EACJ,GAA2C,WAAvCuZ,EAAaM,QAAQC,cACrB9Z,EAAWuZ,EACXvZ,EAAS/C,QAAQ1J,EAAAA,IAAsB,YAEtC,CACD,MAAMwmB,EAAmBR,EAAaS,qBAAqB,UACvDD,EAAiBzkD,QACjB0qC,EAAW+Z,EAAiB,GAC5B/Z,EAAS/C,QAAQ1J,EAAAA,IAAsB,UAGvCyM,EAAW1mC,SAAS6gC,cAAc,UAClC6F,EAAS/C,QAAQ1J,EAAAA,IAAsB,OACvCgmB,EAAaU,YAAYja,GAEjC,CACKA,EAAShoC,MAAMD,QAChBioC,EAAShoC,MAAMD,MAAQ,QAEtBioC,EAAShoC,MAAMF,SAChBkoC,EAAShoC,MAAMF,OAAS,QAE5B,MAAMoiD,EAAU,IAAI1H,GAAU17C,KAAMa,EAAIF,GASxC,OARIkiD,GAAY,EACZ99C,EAAI+0C,OAAO+I,EAAU,EAAGO,GAGxBr+C,EAAIoa,KAAKikC,GAEbA,EAAQr7C,OAAOm+B,WAAWgD,SACpBka,EAAQ3tB,QACP2tB,CACX,ECrRG,MAAMC,GACTxjD,WAAAA,GACIG,KAAKlB,IAAM,MACXkB,KAAKsjD,aAAe,KACxB,CACAC,WAAAA,CAAYzgD,GACR,MAAgCkJ,EAAblJ,EAAMC,MAA6BygD,KAAO1gD,EAAMC,MACnE,QAAmBtE,IAAfuN,EAASK,QAAkC5N,IAAfuN,EAASO,QAAkC9N,IAAfuN,EAASS,EACjE,OAAOg3C,EAAAA,EAAAA,IAASz3C,EAExB,CACA03C,gBAAAA,CAAiB5gD,GACb,MAAgCkJ,EAAblJ,EAAMC,MAA6BygD,KAAO1gD,EAAMC,MACnE,QAAmBtE,IAAfuN,EAASK,QAAkC5N,IAAfuN,EAASS,EACrC,OAAOg3C,EAAAA,EAAAA,IAAS,CACZp3C,GAAGjE,EAAAA,EAAAA,IAAc4D,EAASK,GAC1BI,GAAGrE,EAAAA,EAAAA,IAAc4D,EAASS,GAC1BF,GAAGnE,EAAAA,EAAAA,IAAc4D,EAASO,IAGtC,CACAo3C,WAAAA,CAAYznB,GACR,IAAKA,EAAM96B,WAAW,OAClB,OAEJ,MAAoFwiD,EAAtE,qEAAqFC,KAAK3nB,GACxG,OAAO0nB,GACDE,EAAAA,EAAAA,IAAW,CACT3/B,EAAGy/B,EAAOplD,OAAS,GAAIy9B,EAAAA,EAAAA,IAAW2nB,EAAO,IAAM,EAC/Cv3C,EAAG03C,SAASH,EAAO,GAAI,IACvBn3C,EAAGs3C,SAASH,EAAO,GAAI,IACvBr3C,EAAGw3C,SAASH,EAAO,GAAI,WAEzBnlD,CACV,ECnCG,MAAMulD,GACTnkD,WAAAA,GACIG,KAAKlB,IAAM,MACXkB,KAAKsjD,aAAe,KACxB,CACAC,WAAAA,CAAYzgD,GACR,MAAgCmhD,EAAbnhD,EAAMC,MAA6BmhD,KAAOphD,EAAMC,MACnE,QAAmBtE,IAAfwlD,EAASnhC,EACT,OAAOmhC,CAEf,CACAP,gBAAAA,CAAiB5gD,GACb,MAAgCmhD,EAAbnhD,EAAMC,MAA6BmhD,KAAOphD,EAAMC,MACnE,QAAmBtE,IAAfwlD,EAASnhC,EACT,MAAO,CACHA,GAAG1a,EAAAA,EAAAA,IAAc67C,EAASnhC,GAC1BC,GAAG3a,EAAAA,EAAAA,IAAc67C,EAASlhC,GAC1BC,GAAG5a,EAAAA,EAAAA,IAAc67C,EAASjhC,GAGtC,CACA2gC,WAAAA,CAAYznB,GACR,IAAKA,EAAM96B,WAAWpB,KAAKsjD,cACvB,OAEJ,MAAkFM,EAApE,mEAAmFC,KAAK3nB,GACtG,OAAO0nB,EACD,CACEz/B,EAAGy/B,EAAOplD,OAAS,GAAIy9B,EAAAA,EAAAA,IAAW2nB,EAAO,IAAM,EAC/C5gC,EAAG+gC,SAASH,EAAO,GAAI,IACvB7gC,EAAGghC,SAASH,EAAO,GAAI,IACvB9gC,EAAGihC,SAASH,EAAO,GAAI,UAEzBnlD,CACV,ECjCJ,MAAMiD,GCEC,WACH,MAAMyiD,EAAkB,IAAIH,GAAmBI,EAAkB,IAAIf,IACrEgB,EAAAA,EAAAA,IAAgBF,IAChBE,EAAAA,EAAAA,IAAgBD,GAChB,MAAM9/C,EAAS,IAAIm8C,GAEnB,OADAn8C,EAAOpE,OACAoE,CACX,CDToBpE,IACf8tB,EAAAA,EAAAA,QACD/oB,OAAOvD,YAAcA,G,gDEHlB,MAAM0N,UAAegmC,EAAAA,EACxBv1C,WAAAA,CAAYykD,EAAWn+C,GACnBpG,MAAMukD,EAAWn+C,EAAG,EACxB,CACA,iBAAWkJ,GACP,OAAOD,EAAOU,OAAO,EAAG,EAC5B,CACA,YAAOy0C,CAAMtvC,GACT,OAAO7F,EAAOU,OAAOmF,EAAO/O,EAAG+O,EAAO9O,EAC1C,CACA,aAAO2J,CAAO5J,EAAGC,GACb,OAAO,IAAIiJ,EAAOlJ,EAAGC,EACzB,E,wDCZG,MAAMq+C,EACT3kD,WAAAA,GACIG,KAAKsS,MAAQ,EACbtS,KAAK6C,QAAS,EACd7C,KAAKqD,MAAQ,EACbrD,KAAK2G,MAAQ,EACb3G,KAAKmtB,MAAQ,EACbntB,KAAKmN,MAAO,CAChB,CACAjL,IAAAA,CAAKmL,GACIA,SAGc5O,IAAf4O,EAAKiF,QACLtS,KAAKsS,OAAQ0M,EAAAA,EAAAA,IAAc3R,EAAKiF,aAEhB7T,IAAhB4O,EAAKxK,SACL7C,KAAK6C,OAASwK,EAAKxK,aAEJpE,IAAf4O,EAAKhK,QACLrD,KAAKqD,OAAQ2b,EAAAA,EAAAA,IAAc3R,EAAKhK,aAEjB5E,IAAf4O,EAAK1G,QACL3G,KAAK2G,OAAQqY,EAAAA,EAAAA,IAAc3R,EAAK1G,aAEjBlI,IAAf4O,EAAK8f,QACLntB,KAAKmtB,OAAQnO,EAAAA,EAAAA,IAAc3R,EAAK8f,aAElB1uB,IAAd4O,EAAKF,OACLnN,KAAKmN,KAAOE,EAAKF,MAEzB,EAEG,MAAM8iC,UAA+BuU,EACxC3kD,WAAAA,GACIE,QACAC,KAAK6T,KAAO,OACZ7T,KAAKmgC,WAAa,QACtB,CACAj+B,IAAAA,CAAKmL,GACDtN,MAAMmC,KAAKmL,GACNA,SAGqB5O,IAAtB4O,EAAK4f,eACLjtB,KAAKitB,aAAe5f,EAAK4f,mBAEXxuB,IAAd4O,EAAKwG,OACL7T,KAAK6T,KAAOxG,EAAKwG,WAEGpV,IAApB4O,EAAK8yB,aACLngC,KAAKmgC,WAAa9yB,EAAK8yB,YAE/B,E,uKCpDJ,MAAMskB,EAAmB,SAAUC,EAAgB,MAAOC,EAAgB,IAAIpzB,IACvE,SAAS8yB,EAAgBO,GAC5BD,EAAcjiD,IAAIkiD,EAAQ9lD,IAAK8lD,EACnC,CACA,SAASC,EAAQvxC,EAAGwxC,EAAG3tC,GAOnB,OANIA,EAAI,IACJA,GAAK,GAELA,EAAI,IACJA,GAAK,GAELA,EAAI,EAAI,EACD7D,EAAc,GAATwxC,EAAIxxC,GAAS6D,EAEzBA,EAAI,GACG2tC,EAEP3tC,EAAI,EAAI,EACD7D,GAAKwxC,EAAIxxC,IAAM,EAAI,EAAI6D,GAAK,EAEhC7D,CACX,CACA,SAASyxC,EAAa7oB,GAClB,IAAK,MAAO,CAAE0oB,KAAYD,EACtB,GAAIzoB,EAAM96B,WAAWwjD,EAAQtB,cACzB,OAAOsB,EAAQjB,YAAYznB,GAGnC,MAAqE8oB,EAAW9oB,EAAMv5B,QAA/D,8CAAuF,CAAC49B,EAAGzd,EAAGC,EAAGC,EAAGmB,IAChHrB,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,QAAWvkB,IAAN0lB,EAAkBA,EAAIA,EAAI,MACQy/B,EAA1D,yDAAyEC,KAAKmB,GAC1F,OAAOpB,EACD,CACEz/B,OAAiB1lB,IAAdmlD,EAAO,GAAmBG,SAASH,EAAO,GAAI,IAAM,IAAO,EAC9D5gC,EAAG+gC,SAASH,EAAO,GAAI,IACvB7gC,EAAGghC,SAASH,EAAO,GAAI,IACvB9gC,EAAGihC,SAASH,EAAO,GAAI,UAEzBnlD,CACV,CACO,SAASi0B,EAAgBwJ,EAAOjY,GAAwB,IAAjB8b,IAAQxhC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAClD,IAAK29B,EACD,OAEJ,MAAMp5B,GAAQ49B,EAAAA,EAAAA,IAASxE,GAAS,CAAEn5B,MAAOm5B,GAAUA,EACnD,IAAIwE,EAAAA,EAAAA,IAAS59B,EAAMC,OACf,OAAOkiD,EAAWniD,EAAMC,MAAOkhB,EAAO8b,GAE1C,IAAI5gC,EAAAA,EAAAA,IAAQ2D,EAAMC,OACd,OAAO2vB,EAAgB,CACnB3vB,OAAOsc,EAAAA,EAAAA,IAAcvc,EAAMC,MAAOkhB,EAAO8b,KAGjD,IAAK,MAAO,CAAE6kB,KAAYD,EAAe,CACrC,MAAMj9B,EAAMk9B,EAAQlB,iBAAiB5gD,GACrC,GAAI4kB,EACA,OAAOA,CAEf,CACJ,CACO,SAASu9B,EAAW/oB,EAAOjY,GAAwB,IAAjB8b,IAAQxhC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAC7C,IAAK29B,EACD,OAEJ,MAAMp5B,GAAQ49B,EAAAA,EAAAA,IAASxE,GAAS,CAAEn5B,MAAOm5B,GAAUA,EACnD,IAAIwE,EAAAA,EAAAA,IAAS59B,EAAMC,OACf,OAAOD,EAAMC,QAAU0hD,EAAmBS,IAiD3C,SAAqBhpB,GACxB,OAAO6oB,EAAa7oB,EACxB,CAnDwEipB,CAAYriD,EAAMC,OAEtF,IAAI5D,EAAAA,EAAAA,IAAQ2D,EAAMC,OACd,OAAOkiD,EAAW,CACdliD,OAAOsc,EAAAA,EAAAA,IAAcvc,EAAMC,MAAOkhB,EAAO8b,KAGjD,IAAK,MAAO,CAAE6kB,KAAYD,EAAe,CACrC,MAAMj9B,EAAMk9B,EAAQrB,YAAYzgD,GAChC,GAAI4kB,EACA,OAAOA,CAEf,CACJ,CAKO,SAASzb,EAAgBnJ,EAAOmhB,GACnC,MAAMigC,EAAMxxB,EAAgB5vB,EAAOmhB,IADe1lB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,IAElD,OAAO2lD,EAAMtqC,EAASsqC,QAAOzlD,CACjC,CACO,SAASmb,EAAS9W,GACrB,MAAMksB,EAAKlsB,EAAMggB,EAAI,IAAKsiC,EAAKtiD,EAAMigB,EAAI,IAAKsiC,EAAKviD,EAAMkgB,EAAI,IAAKtf,EAAM4D,KAAK5D,IAAIsrB,EAAIo2B,EAAIC,GAAK5hD,EAAM6D,KAAK7D,IAAIurB,EAAIo2B,EAAIC,GAAK39B,EAAM,CAC5Hrb,EAAG,EACHI,GAAI/I,EAAMD,GAAO,EACjB8I,EAAG,GAkBP,OAhBI7I,IAAQD,IACRikB,EAAInb,EAAImb,EAAIjb,EAAI,IAAO/I,EAAMD,IAAQC,EAAMD,IAAQC,EAAMD,IAAQ,EAAMC,EAAMD,GAC7EikB,EAAIrb,EACA2iB,IAAOtrB,GACA0hD,EAAKC,IAAO3hD,EAAMD,GAClBikB,EAAIrb,EAAI+4C,IAAO1hD,EAAM,GAAO2hD,EAAKr2B,IAAOtrB,EAAMD,GAAO,GAAOurB,EAAKo2B,IAAO1hD,EAAMD,IAE7FikB,EAAIjb,GAAK,IACTib,EAAInb,GAAK,IACTmb,EAAIrb,GAAK,GACLqb,EAAIrb,EAAI,IACRqb,EAAIrb,GAAK,KAETqb,EAAIrb,GAAK,MACTqb,EAAIrb,GAAK,KAENqb,CACX,CAOO,SAAS+7B,EAASD,GACrB,MAAMI,EAAS,CAAE5gC,EAAG,EAAGD,EAAG,EAAGD,EAAG,GAAKwiC,EAAa,CAC9Cj5C,EAAGm3C,EAAIn3C,EAAI,IACXI,EAAG+2C,EAAI/2C,EAAI,IACXF,EAAGi3C,EAAIj3C,EAAI,KAEf,GAAK+4C,EAAW/4C,EAGX,CACD,MAAMu4C,EAAIQ,EAAW74C,EAAI,GACnB64C,EAAW74C,GAAK,EAAI64C,EAAW/4C,GAC/B+4C,EAAW74C,EAAI64C,EAAW/4C,EAAI+4C,EAAW74C,EAAI64C,EAAW/4C,EAAG+G,EAAI,EAAIgyC,EAAW74C,EAAIq4C,EACxFlB,EAAO9gC,EAAI+hC,EAAQvxC,EAAGwxC,EAAGQ,EAAWj5C,EAAI,EAAI,GAC5Cu3C,EAAO7gC,EAAI8hC,EAAQvxC,EAAGwxC,EAAGQ,EAAWj5C,GACpCu3C,EAAO5gC,EAAI6hC,EAAQvxC,EAAGwxC,EAAGQ,EAAWj5C,EAAI,EAAI,EAChD,MATIu3C,EAAO9gC,EAAI8gC,EAAO7gC,EAAI6gC,EAAO5gC,EAAIsiC,EAAW74C,EAahD,OAHAm3C,EAAO9gC,EAAIxb,KAAKyI,MAAiB,IAAX6zC,EAAO9gC,GAC7B8gC,EAAO7gC,EAAIzb,KAAKyI,MAAiB,IAAX6zC,EAAO7gC,GAC7B6gC,EAAO5gC,EAAI1b,KAAKyI,MAAiB,IAAX6zC,EAAO5gC,GACtB4gC,CACX,CACO,SAASE,EAAWyB,GACvB,MAAMC,EAAY/B,EAAS8B,GAC3B,MAAO,CACHphC,EAAGohC,EAAKphC,EACRnB,EAAGwiC,EAAUxiC,EACbD,EAAGyiC,EAAUziC,EACbD,EAAG0iC,EAAU1iC,EAErB,CACO,SAASoiC,EAAkBzhD,GAC9B,MAAMgiD,EAAWhiD,GAAO,EACxB,MAAO,CACHuf,EAAG1b,KAAKyI,OAAMlE,EAAAA,EAAAA,KAAcmT,EAAAA,EAAAA,IAAcymC,EAAU,OACpD1iC,EAAGzb,KAAKyI,OAAMlE,EAAAA,EAAAA,KAAcmT,EAAAA,EAAAA,IAAcymC,EAAU,OACpD3iC,EAAGxb,KAAKyI,OAAMlE,EAAAA,EAAAA,KAAcmT,EAAAA,EAAAA,IAAcymC,EAAU,OAE5D,CACO,SAASxpC,EAAgBnZ,EAAOkK,GACnC,MAAO,QAAQlK,EAAMggB,MAAMhgB,EAAMigB,MAAMjgB,EAAMkgB,MAAMhW,GAAW,IAClE,CACO,SAASgP,EAAgBlZ,EAAOkK,GACnC,MAAO,QAAQlK,EAAMuJ,MAAMvJ,EAAMyJ,OAAOzJ,EAAM2J,OAAOO,GAAW,IACpE,CACO,SAAS6M,EAAS2B,EAAQC,EAAQiqC,EAAOppB,GAC5C,IAAIqpB,EAAOnqC,EAAQoqC,EAAOnqC,EAO1B,YANehd,IAAXknD,EAAK7iC,IACL6iC,EAAOlC,EAASjoC,SAEL/c,IAAXmnD,EAAK9iC,IACL8iC,EAAOnC,EAAShoC,IAEb,CACHuH,GAAGpM,EAAAA,EAAAA,IAAI+uC,EAAK3iC,EAAG4iC,EAAK5iC,EAAG0iC,EAAOppB,GAC9BvZ,GAAGnM,EAAAA,EAAAA,IAAI+uC,EAAK5iC,EAAG6iC,EAAK7iC,EAAG2iC,EAAOppB,GAC9BxZ,GAAGlM,EAAAA,EAAAA,IAAI+uC,EAAK7iC,EAAG8iC,EAAK9iC,EAAG4iC,EAAOppB,GAEtC,CACO,SAAS7d,EAAatD,EAAIC,EAAI+V,GACjC,GAAIA,IAAcszB,EACd,OAAOS,IAEN,GAAI/zB,IAAcuzB,EAanB,OAAOvzB,EAb2B,CAClC,MAAMta,EAAcsE,EAAGxB,gBAAkBwB,EAAG2pB,iBAAkB+gB,EAAYzqC,GAAIzB,gBAAkByB,GAAI0pB,iBACpG,GAAIjuB,GAAegvC,GAAazqC,EAC5B,OAAOvB,EAAShD,EAAagvC,EAAW1qC,EAAG3R,YAAa4R,EAAG5R,aAE1D,CACD,MAAMwC,EAAW6K,GAAegvC,EAChC,GAAI75C,EACA,OAAOy3C,EAASz3C,EAExB,CACJ,CAIJ,CACO,SAASwS,EAAmBH,EAAUd,EAAOC,GAChD,MAAM1a,GAAQ49B,EAAAA,EAAAA,IAASriB,GAAYA,EAAWA,EAAStb,MACvD,OAAID,IAAU2hD,EACNjnC,EACOkV,EAAgB,CACnB3vB,MAAOD,IAGXya,EACOknC,EAEJC,EAEF5hD,IAAU4hD,EACRA,EAGAhyB,EAAgB,CACnB3vB,MAAOD,GAGnB,CACO,SAAS4zC,EAAoBtqC,GAChC,YAAqB3N,IAAd2N,EACD,CACEC,EAAGD,EAAUC,EAAEtJ,MACfwJ,EAAGH,EAAUG,EAAExJ,MACf0J,EAAGL,EAAUK,EAAE1J,YAEjBtE,CACV,CACO,SAAS0N,EAAuBq3C,EAAKvjB,EAAkB72B,GAC1D,MAAM08C,EAAW,CACbz5C,EAAG,CACCxJ,QAAQ,EACRE,MAAOygD,EAAIn3C,GAEfE,EAAG,CACC1J,QAAQ,EACRE,MAAOygD,EAAIj3C,GAEfE,EAAG,CACC5J,QAAQ,EACRE,MAAOygD,EAAI/2C,IAQnB,OALIwzB,IACA8lB,EAAkBD,EAASz5C,EAAG4zB,EAAiB5zB,EAAGjD,GAClD28C,EAAkBD,EAASv5C,EAAG0zB,EAAiB1zB,EAAGnD,GAClD28C,EAAkBD,EAASr5C,EAAGwzB,EAAiBxzB,EAAGrD,IAE/C08C,CACX,CACA,SAASC,EAAkB16C,EAAYmjC,EAAgBplC,GACnDiC,EAAWxI,OAAS2rC,EAAe3rC,OAC/BwI,EAAWxI,QACXwI,EAAWtF,UAAYqC,EAAAA,EAAAA,IAAcomC,EAAenrC,OAAS,IAAO+F,EACpEiC,EAAW1E,MAAQ,GAAIyB,EAAAA,EAAAA,IAAcomC,EAAe7nC,OACpD0E,EAAWS,OAAS,aACpBT,EAAWI,MAAQ,EACnBJ,EAAWG,UAAWpD,EAAAA,EAAAA,IAAcomC,EAAel8B,OACnDjH,EAAWK,KAAO,EAClBL,EAAWM,UAAkD,KAAtCvD,EAAAA,EAAAA,IAAcomC,EAAerhB,OAC/CqhB,EAAerhC,OAChB9B,EAAWtF,WAAY0E,EAAAA,EAAAA,MACvBY,EAAWtI,QAAS0H,EAAAA,EAAAA,OAExBY,EAAW+0B,aAAe/0B,EAAWtI,OAGrCsI,EAAWtF,SAAW,CAE9B,C,yHC9QO,SAAS0W,EAAS5R,EAAS0R,EAAOC,GACrC3R,EAAQsrB,YACRtrB,EAAQ8iB,OAAOpR,EAAMrW,EAAGqW,EAAMpW,GAC9B0E,EAAQ+iB,OAAOpR,EAAItW,EAAGsW,EAAIrW,GAC1B0E,EAAQm7C,WACZ,CACO,SAAS5xB,EAAavpB,EAASsQ,EAAIC,EAAI4Y,GAC1CnpB,EAAQsrB,YACRtrB,EAAQ8iB,OAAOxS,EAAGjV,EAAGiV,EAAGhV,GACxB0E,EAAQ+iB,OAAOxS,EAAGlV,EAAGkV,EAAGjV,GACxB0E,EAAQ+iB,OAAOoG,EAAG9tB,EAAG8tB,EAAG7tB,GACxB0E,EAAQm7C,WACZ,CACO,SAASviB,EAAU54B,EAASo7C,EAAWziB,GAC1C34B,EAAQwpB,UAAYmP,GAAa,gBACjC34B,EAAQq7C,SAAS,EAAG,EAAGD,EAAUhlD,MAAOglD,EAAUjlD,OACtD,CACO,SAAS2iC,EAAW94B,EAASo7C,EAAW7hC,EAAOpX,GAC7CoX,IAGLvZ,EAAQggB,YAAc7d,EACtBnC,EAAQ2gB,UAAUpH,EAAO,EAAG,EAAG6hC,EAAUhlD,MAAOglD,EAAUjlD,QAC1D6J,EAAQggB,YAAc,EAC1B,CACO,SAAS5W,EAAMpJ,EAASo7C,GAC3Bp7C,EAAQugB,UAAU,EAAG,EAAG66B,EAAUhlD,MAAOglD,EAAUjlD,OACvD,CACO,SAASg0B,EAAa3nB,GACzB,MAAM,UAAEpL,EAAS,QAAE4I,EAAO,SAAE3F,EAAQ,MAAEK,EAAK,YAAE67B,EAAW,eAAEzO,EAAc,UAAEa,EAAS,OAAE9qB,EAAM,QAAEsE,EAAO,OAAEyjB,EAAM,UAAE4Q,GAAeh0B,EACvHrF,EAAM9C,EAAS+C,cAAeQ,EAAQvD,EAASkyB,UAAYlyB,EAAS+xB,aAAe/xB,EAASa,SAAS0C,MAAQ,GAAI09C,EAC9G7+C,KAAKC,IAAIkB,GADqG09C,EAE9G7+C,KAAKE,IAAIiB,GACf29C,EAAgB,CACfjiC,EAAGgiC,GAAkB9kB,EAAUld,GAAK,GACpCnB,EAAGmjC,GAAkB9kB,EAAUre,GAAK,GACpCqjC,GAAIF,GAAkB9kB,EAAUglB,GAAK,GACrC/lC,EAAG6lC,GAAkB9kB,EAAU/gB,GAAK,IAExCzV,EAAQy7C,aAAaF,EAAcjiC,EAAGiiC,EAAcpjC,EAAGojC,EAAcC,EAAGD,EAAc9lC,EAAGtY,EAAI9B,EAAG8B,EAAI7B,GACpG0E,EAAQsrB,YACJxD,IACA9nB,EAAQ0oB,yBAA2BC,GAEvC,MAAMC,EAAcvuB,EAASuuB,YACzBhD,EAAO5tB,QAAU4wB,IACjB5oB,EAAQ6oB,WAAajD,EAAOJ,KAC5BxlB,EAAQ4oB,aAAcxX,EAAAA,EAAAA,IAAgBwX,GACtC5oB,EAAQ07C,cAAgB91B,EAAO7kB,OAAO1F,EACtC2E,EAAQ27C,cAAgB/1B,EAAO7kB,OAAOzF,GAEtCi7B,EAAYpV,OACZnhB,EAAQwpB,UAAY+M,EAAYpV,MAEpC,MAAM+L,EAAc7yB,EAAS6yB,aAAe,EAC5CltB,EAAQ6R,UAAYqb,EAChBqJ,EAAYxkB,SACZ/R,EAAQ8R,YAAcykB,EAAYxkB,QAgBnC,SAAmB3a,EAAW4I,EAAS3F,EAAUwD,EAAQsE,EAASzH,GACrE,IAAKL,EAAS4mB,MACV,OAEJ,MAAMsrB,EAASn1C,EAAUo1C,QAAQ/lB,IAAIpsB,EAAS4mB,OAC9C,IAAKsrB,EACD,OAEJA,EAAOxsC,KAAKC,EAAS3F,EAAUwD,EAAQsE,EAASzH,EAAOtD,EAAUoG,OAAOC,WAC5E,CAvBIm+C,CAAUxkD,EAAW4I,EAAS3F,EAAUwD,EAAQsE,EAASzH,GACrDwyB,EAAc,GACdltB,EAAQ+R,SAER1X,EAAS+mB,OACTphB,EAAQm7C,YAER9gD,EAAS8mB,MACTnhB,EAAQmhB,OAgBT,SAA8B/pB,EAAW4I,EAAS3F,EAAUwD,EAAQsE,EAASzH,GAChF,IAAKL,EAAS4mB,MACV,OAEJ,MAAMsrB,EAASn1C,EAAUo1C,QAAQ/lB,IAAIpsB,EAAS4mB,OAC9C,IAAKsrB,IAAWA,EAAO0K,YACnB,OAEJ1K,EAAO0K,YAAYj3C,EAAS3F,EAAUwD,EAAQsE,EAASzH,EAAOtD,EAAUoG,OAAOC,WACnF,CAvBIo+C,CAAqBzkD,EAAW4I,EAAS3F,EAAUwD,EAAQsE,EAASzH,GACpEsF,EAAQ0oB,yBAA2B,cACnC1oB,EAAQy7C,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,EACxC,CAqBO,SAASlhB,EAAWv6B,EAASkD,EAAQxI,GACnCwI,EAAOnD,MAGZmD,EAAOnD,KAAKC,EAAStF,EACzB,CACO,SAAS4/B,EAAmBt6B,EAASkD,EAAQ7I,EAAUK,GACrDwI,EAAOinB,cAGZjnB,EAAOinB,aAAanqB,EAAS3F,EAAUK,EAC3C,CACO,SAAS8wC,EAASvzC,EAAOgP,EAAM/O,GAClC,MAAO,CACHsJ,EAAGvJ,EAAMuJ,EACTE,EAAGzJ,EAAMyJ,EACTE,EAAG3J,EAAM2J,GAAc,WAATqF,GAAqB,EAAI,GAAK/O,EAEpD,C,gDC/GO,MAAMgU,EACTlX,WAAAA,GACIG,KAAK+C,MAAQ,EACjB,CACA,aAAO+M,CAAOmF,EAAQ5H,GAClB,MAAMvK,EAAQ,IAAIiU,EAUlB,OATAjU,EAAMZ,KAAK+S,QACExW,IAAT4O,KACIqzB,EAAAA,EAAAA,IAASrzB,KAASlO,EAAAA,EAAAA,IAAQkO,GAC1BvK,EAAMZ,KAAK,CAAEa,MAAOsK,IAGpBvK,EAAMZ,KAAKmL,IAGZvK,CACX,CACAZ,IAAAA,CAAKmL,QACmB5O,IAAhB4O,GAAMtK,QAGV/C,KAAK+C,MAAQsK,EAAKtK,MACtB,E,2CCvBG,MAAM4jD,EACT9mD,WAAAA,GACIG,KAAK6C,QAAS,EACd7C,KAAKitB,aAAe,CACxB,CACA/qB,IAAAA,CAAKmL,GACIA,SAGe5O,IAAhB4O,EAAKxK,SACL7C,KAAK6C,OAASwK,EAAKxK,aAEGpE,IAAtB4O,EAAK4f,eACLjtB,KAAKitB,aAAe5f,EAAK4f,cAEjC,E,wBCXG,MAAMH,EACTjtB,WAAAA,GACIG,KAAKgtB,OAAS,IAAI25B,EAClB3mD,KAAK+C,MAAQ,CACjB,CACAb,IAAAA,CAAKmL,GACIA,KAGDguB,EAAAA,EAAAA,IAAUhuB,EAAK2f,QACfhtB,KAAKgtB,OAAOnqB,OAASwK,EAAK2f,OAG1BhtB,KAAKgtB,OAAO9qB,KAAKmL,EAAK2f,aAEPvuB,IAAf4O,EAAKtK,QACL/C,KAAK+C,OAAQic,EAAAA,EAAAA,IAAc3R,EAAKtK,MAAO/C,KAAKgtB,OAAOnqB,OAAS7C,KAAKgtB,OAAOC,kBAAexuB,IAE/F,E,0DCpBG,MAAM22C,EACTv1C,WAAAA,CAAYykD,EAAWn+C,EAAGypB,GAKtB,GAJA5vB,KAAK4mD,iBAAmB,CAACn+C,EAAOjK,KAC5BwB,KAAKkG,EAAIoB,KAAKE,IAAIiB,GAASjK,EAC3BwB,KAAKmG,EAAImB,KAAKC,IAAIkB,GAASjK,CAAM,IAEhC48B,EAAAA,EAAAA,IAASkpB,IAAcA,EAAW,CACnCtkD,KAAKkG,EAAIo+C,EAAUp+C,EACnBlG,KAAKmG,EAAIm+C,EAAUn+C,EACnB,MAAM0gD,EAAWvC,EACjBtkD,KAAK4vB,EAAIi3B,EAASj3B,EAAIi3B,EAASj3B,EAAI,CACvC,KACK,SAAkBnxB,IAAd6lD,QAAiC7lD,IAAN0H,EAMhC,MAAM,IAAI7D,MAAM,GAAG+kB,EAAAA,yCALnBrnB,KAAKkG,EAAIo+C,EACTtkD,KAAKmG,EAAIA,EACTnG,KAAK4vB,EAAIA,GAAK,CAIlB,CACJ,CACA,iBAAWvgB,GACP,OAAO+lC,EAAStlC,OAAO,EAAG,EAAG,EACjC,CACA,SAAIrH,GACA,OAAOnB,KAAK4I,MAAMlQ,KAAKmG,EAAGnG,KAAKkG,EACnC,CACA,SAAIuC,CAAMA,GACNzI,KAAK4mD,iBAAiBn+C,EAAOzI,KAAKxB,OACtC,CACA,UAAIA,GACA,OAAO8I,KAAKypB,KAAK/wB,KAAK8mD,cAC1B,CACA,UAAItoD,CAAOA,GACPwB,KAAK4mD,iBAAiB5mD,KAAKyI,MAAOjK,EACtC,CACA,YAAO+lD,CAAMtvC,GACT,OAAOmgC,EAAStlC,OAAOmF,EAAO/O,EAAG+O,EAAO9O,EAAG8O,EAAO2a,EACtD,CACA,aAAO9f,CAAO5J,EAAGC,EAAGypB,GAChB,OAAO,IAAIwlB,EAASlvC,EAAGC,EAAGypB,EAC9B,CACAoX,GAAAA,CAAIpI,GACA,OAAOwW,EAAStlC,OAAO9P,KAAKkG,EAAI04B,EAAE14B,EAAGlG,KAAKmG,EAAIy4B,EAAEz4B,EAAGnG,KAAK4vB,EAAIgP,EAAEhP,EAClE,CACA5pB,KAAAA,CAAM44B,GACF5+B,KAAKkG,GAAK04B,EAAE14B,EACZlG,KAAKmG,GAAKy4B,EAAEz4B,EACZnG,KAAK4vB,GAAKgP,EAAEhP,CAChB,CACA8lB,IAAAA,GACI,OAAON,EAASmP,MAAMvkD,KAC1B,CACA+mD,UAAAA,CAAWnoB,GACP,OAAO5+B,KAAKo/B,IAAIR,GAAGpgC,MACvB,CACAwoD,YAAAA,CAAapoB,GACT,OAAO5+B,KAAKo/B,IAAIR,GAAGkoB,aACvB,CACAhxC,GAAAA,CAAImxC,GACA,OAAO7R,EAAStlC,OAAO9P,KAAKkG,EAAI+gD,EAAGjnD,KAAKmG,EAAI8gD,EAAGjnD,KAAK4vB,EAAIq3B,EAC5D,CACAC,KAAAA,CAAMD,GACFjnD,KAAKkG,GAAK+gD,EACVjnD,KAAKmG,GAAK8gD,EACVjnD,KAAK4vB,GAAKq3B,CACd,CACAH,WAAAA,GACI,OAAO9mD,KAAKkG,GAAK,EAAIlG,KAAKmG,GAAK,CACnC,CACAW,IAAAA,CAAKmgD,GACD,OAAO7R,EAAStlC,OAAO9P,KAAKkG,EAAI+gD,EAAGjnD,KAAKmG,EAAI8gD,EAAGjnD,KAAK4vB,EAAIq3B,EAC5D,CACApgD,MAAAA,CAAOogD,GACHjnD,KAAKkG,GAAK+gD,EACVjnD,KAAKmG,GAAK8gD,EACVjnD,KAAK4vB,GAAKq3B,CACd,CACAE,SAAAA,GACI,MAAM3oD,EAASwB,KAAKxB,OACN,GAAVA,GACAwB,KAAK6G,OAAO,EAAMrI,EAE1B,CACAkwB,MAAAA,CAAOjmB,GACH,OAAO2sC,EAAStlC,OAAO9P,KAAKkG,EAAIoB,KAAKE,IAAIiB,GAASzI,KAAKmG,EAAImB,KAAKC,IAAIkB,GAAQzI,KAAKkG,EAAIoB,KAAKC,IAAIkB,GAASzI,KAAKmG,EAAImB,KAAKE,IAAIiB,GAAQ,EACrI,CACAqL,KAAAA,CAAMuyC,GACFrmD,KAAKkG,EAAImgD,EAAEngD,EACXlG,KAAKmG,EAAIkgD,EAAElgD,EACX,MAAMihD,EAAMf,EACZrmD,KAAK4vB,EAAIw3B,EAAIx3B,EAAIw3B,EAAIx3B,EAAI,CAC7B,CACAwP,GAAAA,CAAIR,GACA,OAAOwW,EAAStlC,OAAO9P,KAAKkG,EAAI04B,EAAE14B,EAAGlG,KAAKmG,EAAIy4B,EAAEz4B,EAAGnG,KAAK4vB,EAAIgP,EAAEhP,EAClE,CACAlc,OAAAA,CAAQkrB,GACJ5+B,KAAKkG,GAAK04B,EAAE14B,EACZlG,KAAKmG,GAAKy4B,EAAEz4B,EACZnG,KAAK4vB,GAAKgP,EAAEhP,CAChB,E,oEC/FJ,SAASy3B,EAAYC,EAAeC,GACT,IAAIA,GAAeC,UAC3BxxC,SAASlX,IACpB,MAAM2oD,EAAUH,EAAcI,WAAW5oD,GACzC2oD,IAAWE,EAAAA,EAAAA,GAAUL,EAAeG,GAChCH,EAAcM,iBACdN,EAAcM,gBAAgB5xC,SAAS6xC,IACnCR,EAAYQ,EAAON,EAAc,GAEzC,GAER,CAeA,SAASO,IAIL,IAAIC,GAAa,EAIjB,MAAMC,EAAc,IAAIjN,IAClBkN,EAAW,CACbC,UAAUZ,IACNU,EAAYhhB,IAAIsgB,GACT,KAAWU,EAAYzb,OAAO+a,EAAc,GAEvD7xB,KAAAA,CAAM0yB,EAAYC,IACdC,EAAAA,EAAAA,GAAUN,EAAY,mHACtB,MAAMO,EAAa,GAMnB,OALAN,EAAYhyC,SAASsxC,IACjBgB,EAAWnpC,MAAKopC,EAAAA,EAAAA,GAAqBjB,EAAea,EAAY,CAC5DC,uBACD,IAEAvhC,QAAQqS,IAAIovB,EACvB,EACA5lD,IAAIylD,KACAE,EAAAA,EAAAA,GAAUN,EAAY,iHACfC,EAAYhyC,SAASsxC,KAxCxC,SAAmBA,EAAea,GAC1BjpD,MAAMC,QAAQgpD,GACPd,EAAYC,EAAea,GAEP,kBAAfA,EACLd,EAAYC,EAAe,CAACa,KAGnCR,EAAAA,EAAAA,GAAUL,EAAea,EAEjC,CA+BgBK,CAAUlB,EAAea,EAAW,KAG5CzjB,IAAAA,GACIsjB,EAAYhyC,SAASsxC,KA5DjC,SAAuBA,GACnBA,EAAc1H,OAAO5pC,SAASjT,GAAUA,EAAM2hC,QAClD,CA2DgB+jB,CAAcnB,EAAc,GAEpC,EACAoB,MAAKA,KACDX,GAAa,EACN,KACHA,GAAa,EACbE,EAASvjB,MAAM,IAI3B,OAAOujB,CACX,C,uBCvCA,MAAMU,EALN,WACI,MAAMV,GAAWW,EAAAA,EAAAA,GAAYd,GAE7B,OADAe,EAAAA,EAAAA,GAA0BZ,EAASS,MAAO,IACnCT,CACX,C","sources":["../node_modules/react-particles/esm/Utils.js","../node_modules/react-particles/esm/Particles.js","../node_modules/tsparticles-particles.js/esm/marcbruederlin/Particles.js","../node_modules/tsparticles-particles.js/esm/VincentGarreau/particles.js","../node_modules/tsparticles-particles.js/esm/index.js","../node_modules/tsparticles-move-base/esm/Utils.js","../node_modules/tsparticles-move-base/esm/BaseMover.js","../node_modules/tsparticles-shape-circle/esm/CircleDrawer.js","../node_modules/tsparticles-updater-color/esm/Utils.js","../node_modules/tsparticles-updater-color/esm/ColorUpdater.js","../node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js","../node_modules/tsparticles-updater-opacity/esm/Utils.js","../node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/Utils.js","../node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/OutOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js","../node_modules/tsparticles-updater-size/esm/SizeUpdater.js","../node_modules/tsparticles-updater-size/esm/Utils.js","../node_modules/tsparticles-basic/esm/index.js","../node_modules/tsparticles-move-base/esm/index.js","../node_modules/tsparticles-shape-circle/esm/index.js","../node_modules/tsparticles-updater-color/esm/index.js","../node_modules/tsparticles-updater-opacity/esm/index.js","../node_modules/tsparticles-updater-out-modes/esm/index.js","../node_modules/tsparticles-updater-size/esm/index.js","../node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js","../node_modules/tsparticles-interaction-external-attract/esm/Options/Classes/Attract.js","../node_modules/tsparticles-interaction-external-attract/esm/Attractor.js","../node_modules/tsparticles-interaction-external-bounce/esm/Options/Classes/Bounce.js","../node_modules/tsparticles-interaction-external-bounce/esm/Bouncer.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleDiv.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/Bubble.js","../node_modules/tsparticles-interaction-external-bubble/esm/Utils.js","../node_modules/tsparticles-interaction-external-bubble/esm/Bubbler.js","../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/ConnectLinks.js","../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/Connect.js","../node_modules/tsparticles-interaction-external-connect/esm/Utils.js","../node_modules/tsparticles-interaction-external-connect/esm/Connector.js","../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/GrabLinks.js","../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/Grab.js","../node_modules/tsparticles-interaction-external-grab/esm/Utils.js","../node_modules/tsparticles-interaction-external-grab/esm/Grabber.js","../node_modules/tsparticles-interaction-external-pause/esm/Pauser.js","../node_modules/tsparticles-interaction-external-push/esm/Options/Classes/Push.js","../node_modules/tsparticles-interaction-external-push/esm/Pusher.js","../node_modules/tsparticles-interaction-external-remove/esm/Options/Classes/Remove.js","../node_modules/tsparticles-interaction-external-remove/esm/Remover.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseDiv.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/Repulse.js","../node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js","../node_modules/tsparticles-interaction-external-slow/esm/Options/Classes/Slow.js","../node_modules/tsparticles-interaction-external-slow/esm/Slower.js","../node_modules/tsparticles-shape-image/esm/GifUtils/Constants.js","../node_modules/tsparticles-shape-image/esm/GifUtils/ByteStream.js","../node_modules/tsparticles-shape-image/esm/GifUtils/Utils.js","../node_modules/tsparticles-shape-image/esm/Utils.js","../node_modules/tsparticles-shape-image/esm/ImageDrawer.js","../node_modules/tsparticles-shape-image/esm/Options/Classes/Preload.js","../node_modules/tsparticles-shape-image/esm/ImagePreloader.js","../node_modules/tsparticles-shape-image/esm/index.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDelay.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDuration.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/Life.js","../node_modules/tsparticles-updater-life/esm/LifeUpdater.js","../node_modules/tsparticles-shape-line/esm/LineDrawer.js","../node_modules/tsparticles-move-parallax/esm/ParallaxMover.js","../node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js","../node_modules/tsparticles-interaction-particles-attract/esm/Attractor.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Bounce.js","../node_modules/tsparticles-interaction-particles-collisions/esm/ResolveCollision.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Destroy.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js","../node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/Links.js","../node_modules/tsparticles-interaction-particles-links/esm/Linker.js","../node_modules/tsparticles-interaction-particles-links/esm/Utils.js","../node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js","../node_modules/tsparticles-interaction-particles-links/esm/plugin.js","../node_modules/tsparticles-interaction-particles-links/esm/index.js","../node_modules/tsparticles-interaction-particles-links/esm/interaction.js","../node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js","../node_modules/tsparticles-shape-polygon/esm/PolygonDrawer.js","../node_modules/tsparticles-shape-polygon/esm/TriangleDrawer.js","../node_modules/tsparticles-shape-polygon/esm/index.js","../node_modules/tsparticles-updater-rotate/esm/Options/Classes/RotateAnimation.js","../node_modules/tsparticles-updater-rotate/esm/Options/Classes/Rotate.js","../node_modules/tsparticles-updater-rotate/esm/RotateUpdater.js","../node_modules/tsparticles-shape-square/esm/SquareDrawer.js","../node_modules/tsparticles-shape-star/esm/StarDrawer.js","../node_modules/tsparticles-updater-stroke-color/esm/Utils.js","../node_modules/tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js","../node_modules/tsparticles-shape-text/esm/TextDrawer.js","../node_modules/tsparticles-slim/esm/index.js","../node_modules/tsparticles-move-parallax/esm/index.js","../node_modules/tsparticles-interaction-external-attract/esm/index.js","../node_modules/tsparticles-interaction-external-bounce/esm/index.js","../node_modules/tsparticles-interaction-external-bubble/esm/index.js","../node_modules/tsparticles-interaction-external-connect/esm/index.js","../node_modules/tsparticles-interaction-external-grab/esm/index.js","../node_modules/tsparticles-interaction-external-pause/esm/index.js","../node_modules/tsparticles-interaction-external-push/esm/index.js","../node_modules/tsparticles-interaction-external-remove/esm/index.js","../node_modules/tsparticles-interaction-external-repulse/esm/index.js","../node_modules/tsparticles-interaction-external-slow/esm/index.js","../node_modules/tsparticles-interaction-particles-attract/esm/index.js","../node_modules/tsparticles-interaction-particles-collisions/esm/index.js","../node_modules/tsparticles-plugin-easing-quad/esm/index.js","../node_modules/tsparticles-shape-line/esm/index.js","../node_modules/tsparticles-shape-square/esm/index.js","../node_modules/tsparticles-shape-star/esm/index.js","../node_modules/tsparticles-shape-text/esm/index.js","../node_modules/tsparticles-updater-life/esm/index.js","../node_modules/tsparticles-updater-rotate/esm/index.js","../node_modules/tsparticles-updater-stroke-color/esm/index.js","../node_modules/tsparticles-engine/esm/Core/Utils/Range.js","../node_modules/tsparticles-engine/esm/Core/Utils/Circle.js","../node_modules/tsparticles-engine/esm/Utils/NumberUtils.js","../node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Constants.js","../node_modules/tsparticles-engine/esm/Utils/Utils.js","../node_modules/tsparticles-engine/esm/Core/Canvas.js","../node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js","../node_modules/tsparticles-engine/esm/Options/Classes/Background/Background.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js","../node_modules/tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js","../node_modules/tsparticles-engine/esm/Options/Classes/ManualParticle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Responsive.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/Theme.js","../node_modules/tsparticles-engine/esm/Options/Classes/ColorAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/HslAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrailFill.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shadow.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Stroke.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js","../node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js","../node_modules/tsparticles-engine/esm/Options/Classes/Options.js","../node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js","../node_modules/tsparticles-engine/esm/Core/Particle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Point.js","../node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js","../node_modules/tsparticles-engine/esm/Core/Particles.js","../node_modules/tsparticles-engine/esm/Core/Retina.js","../node_modules/tsparticles-engine/esm/Core/Container.js","../node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js","../node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js","../node_modules/tsparticles-engine/esm/Core/Engine.js","../node_modules/tsparticles-engine/esm/Utils/HslColorManager.js","../node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js","../node_modules/tsparticles-engine/esm/index.js","../node_modules/tsparticles-engine/esm/init.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js","../node_modules/tsparticles-engine/esm/Utils/ColorUtils.js","../node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js","../node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Random.js","../node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js","../node_modules/framer-motion/dist/es/animation/hooks/animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/hooks/use-animation.mjs"],"sourcesContent":["const isObject = (val) => typeof val === \"object\" && val !== null;\nexport function deepCompare(obj1, obj2, excludeKeyFn = () => false) {\n    if (!isObject(obj1) || !isObject(obj2)) {\n        return obj1 === obj2;\n    }\n    const keys1 = Object.keys(obj1).filter(key => !excludeKeyFn(key)), keys2 = Object.keys(obj2).filter(key => !excludeKeyFn(key));\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const value1 = obj1[key], value2 = obj2[key];\n        if (isObject(value1) && isObject(value2)) {\n            if (value1 === obj2 && value2 === obj1) {\n                continue;\n            }\n            if (!deepCompare(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (Array.isArray(value1) && Array.isArray(value2)) {\n            if (!deepCompareArrays(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (value1 !== value2) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction deepCompareArrays(arr1, arr2, excludeKeyFn) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        const val1 = arr1[i], val2 = arr2[i];\n        if (Array.isArray(val1) && Array.isArray(val2)) {\n            if (!deepCompareArrays(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (isObject(val1) && isObject(val2)) {\n            if (!deepCompare(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (val1 !== val2) {\n            return false;\n        }\n    }\n    return true;\n}\n","import React, { Component } from \"react\";\nimport { tsParticles } from \"tsparticles-engine\";\nimport { deepCompare } from \"./Utils\";\nconst defaultId = \"tsparticles\";\nclass Particles extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            init: false,\n            library: undefined,\n        };\n    }\n    destroy() {\n        if (!this.state.library) {\n            return;\n        }\n        this.state.library.destroy();\n        this.setState({\n            library: undefined,\n        });\n    }\n    shouldComponentUpdate(nextProps) {\n        const nextOptions = nextProps.options ?? nextProps.params, currentOptions = this.props.options ?? this.props.params;\n        return (nextProps.url !== this.props.url ||\n            nextProps.id !== this.props.id ||\n            nextProps.canvasClassName !== this.props.canvasClassName ||\n            nextProps.className !== this.props.className ||\n            nextProps.height !== this.props.height ||\n            nextProps.width !== this.props.width ||\n            !deepCompare(nextProps.style, this.props.style) ||\n            nextProps.init !== this.props.init ||\n            nextProps.loaded !== this.props.loaded ||\n            !deepCompare(nextOptions, currentOptions, key => key.startsWith(\"_\")));\n    }\n    componentDidUpdate() {\n        this.refresh();\n    }\n    forceUpdate() {\n        this.refresh().then(() => {\n            super.forceUpdate();\n        });\n    }\n    componentDidMount() {\n        (async () => {\n            if (this.props.init) {\n                await this.props.init(tsParticles);\n            }\n            this.setState({\n                init: true,\n            }, async () => {\n                await this.loadParticles();\n            });\n        })();\n    }\n    componentWillUnmount() {\n        this.destroy();\n    }\n    render() {\n        const { width, height, className, canvasClassName, id } = this.props;\n        return (React.createElement(\"div\", { className: className, id: id },\n            React.createElement(\"canvas\", { className: canvasClassName, style: {\n                    ...this.props.style,\n                    width,\n                    height,\n                } })));\n    }\n    async refresh() {\n        this.destroy();\n        await this.loadParticles();\n    }\n    async loadParticles() {\n        if (!this.state.init) {\n            return;\n        }\n        const id = this.props.id ?? Particles.defaultProps.id ?? defaultId, container = await tsParticles.load({\n            url: this.props.url,\n            id,\n            options: this.props.options ?? this.props.params,\n        });\n        if (this.props.container) {\n            this.props.container.current = container;\n        }\n        this.setState({\n            library: container,\n        });\n        if (this.props.loaded) {\n            await this.props.loaded(container);\n        }\n    }\n}\nParticles.defaultProps = {\n    width: \"100%\",\n    height: \"100%\",\n    options: {},\n    style: {},\n    url: undefined,\n    id: defaultId,\n};\nexport default Particles;\n","import { tsParticles } from \"tsparticles-engine\";\nexport class Particles {\n    static init(options) {\n        const particles = new Particles(), selector = options.selector;\n        if (!selector) {\n            throw new Error(\"No selector provided\");\n        }\n        const el = document.querySelector(selector);\n        if (!el) {\n            throw new Error(\"No element found for selector\");\n        }\n        tsParticles\n            .set(selector.replace(\".\", \"\").replace(\"!\", \"\"), el, {\n            fullScreen: {\n                enable: false,\n            },\n            particles: {\n                color: {\n                    value: options.color ?? \"!000000\",\n                },\n                links: {\n                    color: \"random\",\n                    distance: options.minDistance ?? 120,\n                    enable: options.connectParticles ?? false,\n                },\n                move: {\n                    enable: true,\n                    speed: options.speed ?? 0.5,\n                },\n                number: {\n                    value: options.maxParticles ?? 100,\n                },\n                size: {\n                    value: { min: 1, max: options.sizeVariations ?? 3 },\n                },\n            },\n            responsive: options.responsive?.map((responsive) => ({\n                maxWidth: responsive.breakpoint,\n                options: {\n                    particles: {\n                        color: {\n                            value: responsive.options?.color,\n                        },\n                        links: {\n                            distance: responsive.options?.minDistance,\n                            enable: responsive.options?.connectParticles,\n                        },\n                        number: {\n                            value: options.maxParticles,\n                        },\n                        move: {\n                            enable: true,\n                            speed: responsive.options?.speed,\n                        },\n                        size: {\n                            value: responsive.options?.sizeVariations,\n                        },\n                    },\n                },\n            })),\n        })\n            .then((container) => {\n            particles._container = container;\n        });\n        return particles;\n    }\n    destroy() {\n        const container = this._container;\n        container && container.destroy();\n    }\n    pauseAnimation() {\n        const container = this._container;\n        container && container.pause();\n    }\n    resumeAnimation() {\n        const container = this._container;\n        container && container.play();\n    }\n}\n","const initParticlesJS = (engine) => {\n    const particlesJS = (tagId, options) => {\n        return engine.load(tagId, options);\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        engine\n            .loadJSON(tagId, pathConfigJson)\n            .then((container) => {\n            if (container) {\n                callback(container);\n            }\n        })\n            .catch(() => {\n            callback(undefined);\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        engine.setOnClickHandler(callback);\n    };\n    const pJSDom = engine.dom();\n    return { particlesJS, pJSDom };\n};\nexport { initParticlesJS };\n","import { Particles } from \"./marcbruederlin/Particles\";\nimport { initParticlesJS } from \"./VincentGarreau/particles\";\nconst initPjs = (engine) => {\n    const { particlesJS, pJSDom } = initParticlesJS(engine);\n    window.particlesJS = particlesJS;\n    window.pJSDom = pJSDom;\n    window.Particles = Particles;\n    return { particlesJS, pJSDom, Particles };\n};\nexport { initPjs };\n","import { clamp, getDistances, getRandom, } from \"tsparticles-engine\";\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    if (((hDistance && dxFixed >= hDistance) || (vDistance && dyFixed >= vDistance)) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance && ((pos.x < initialPosition.x && vel.x < 0) || (pos.x > initialPosition.x && vel.x > 0))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance && ((pos.y < initialPosition.y && vel.y < 0) || (pos.y > initialPosition.y && vel.y > 0))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -1 : 1;\n    if (moveDrift && moveSpeed) {\n        particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n    }\n    if (gravityOptions?.enable && moveSpeed) {\n        particle.velocity.y += (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable &&\n        maxSpeed > 0 &&\n        ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n            (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === \"clockwise\" ? Math.cos : Math.sin,\n        y: particle.spin.direction === \"clockwise\" ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);\n    if (particle.spin.radius > maxCanvasSize / 2) {\n        particle.spin.radius = maxCanvasSize / 2;\n        particle.spin.acceleration *= -1;\n    }\n    else if (particle.spin.radius < 0) {\n        particle.spin.radius = 0;\n        particle.spin.acceleration *= -1;\n    }\n    particle.spin.angle += (moveSpeed / 100) * (1 - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -1, 1);\n        particle.velocity.y = clamp(particle.velocity.y, -1, 1);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : 1;\n}\n","import { getDistance, getRangeMax, getRangeValue, } from \"tsparticles-engine\";\nimport { applyDistance, getProximitySpeedFactor, move, spin } from \"./Utils\";\nconst diffFactor = 2;\nexport class BaseMover {\n    constructor() {\n        this._initSpin = (particle) => {\n            const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n            if (!spinOptions.enable) {\n                return;\n            }\n            const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        };\n    }\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        this._initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio, slowFactor = getProximitySpeedFactor(particle), baseSpeed = (particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio) *\n            container.retina.reduceFactor, moveDrift = (particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio), maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, moveSpeed = (baseSpeed * sizeFactor * slowFactor * (delta.factor || 1)) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n","import { isObject } from \"tsparticles-engine\";\nexport class CircleDrawer {\n    draw(context, particle, radius) {\n        if (!particle.circleRange) {\n            particle.circleRange = { min: 0, max: Math.PI * 2 };\n        }\n        const circleRange = particle.circleRange;\n        context.arc(0, 0, radius, circleRange.min, circleRange.max, false);\n    }\n    getSidesCount() {\n        return 12;\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\n            max: 360,\n            min: 0,\n        };\n        particle.circleRange = !isObject(angle)\n            ? {\n                min: 0,\n                max: (angle * Math.PI) / 180,\n            }\n            : { min: (angle.min * Math.PI) / 180, max: (angle.max * Math.PI) / 180 };\n    }\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateColor(particle, delta) {\n    const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateColor } from \"./Utils\";\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((color?.h.value !== undefined && hAnimation.enable) ||\n                (color?.s.value !== undefined && sAnimation.enable) ||\n                (color?.l.value !== undefined && lAnimation.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n","import { getRandom, getRangeValue, initParticleNumericAnimationValue, } from \"tsparticles-engine\";\nimport { updateOpacity } from \"./Utils\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, 1);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / 100) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? 0) <= 0 ||\n                ((particle.opacity.maxLoops ?? 0) > 0 &&\n                    (particle.opacity.loops ?? 0) < (particle.opacity.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateOpacity(particle, delta);\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateOpacity(particle, delta) {\n    const data = particle.opacity;\n    if (particle.destroyed || !data?.enable || ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n    }\n    if (data.velocity && data.decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { calculateBounds, } from \"tsparticles-engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            \"bounce\",\n            \"bounce-vertical\",\n            \"bounce-horizontal\",\n            \"bounceVertical\",\n            \"bounceHorizontal\",\n            \"split\",\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { getValue } from \"tsparticles-engine\";\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-horizontal\" &&\n        data.outMode !== \"bounceHorizontal\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"left\" && data.direction !== \"right\")) {\n        return;\n    }\n    if (data.bounds.right < 0 && data.direction === \"left\") {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === \"right\" && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n        (data.direction === \"left\" && data.bounds.left <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.horizontal);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= 0 && data.direction === \"left\") {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-vertical\" &&\n        data.outMode !== \"bounceVertical\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"bottom\" && data.direction !== \"top\")) {\n        return;\n    }\n    if (data.bounds.bottom < 0 && data.direction === \"top\") {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === \"bottom\" && data.bounds.bottom >= data.canvasSize.height && velocity > 0) ||\n        (data.direction === \"top\" && data.bounds.top <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.vertical);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= 0 && data.direction === \"top\") {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\n","import { Vector, getDistances, isPointInside, } from \"tsparticles-engine\";\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"destroy\"];\n    }\n    update(particle, direction, _delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"normal\":\n            case \"outside\":\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case \"inside\": {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                const { x: vx, y: vy } = particle.velocity;\n                if ((vx < 0 && dx > particle.moveCenter.radius) ||\n                    (vy < 0 && dy > particle.moveCenter.radius) ||\n                    (vx >= 0 && dx < -particle.moveCenter.radius) ||\n                    (vy >= 0 && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n}\n","import { Vector, isPointInside, } from \"tsparticles-engine\";\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"none\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical &&\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < 0 && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < 0 && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === \"bottom\") ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"tsparticles-engine\";\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"out\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"inside\": {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= 0 && dx >= 0) || (vy <= 0 && dy >= 0) || (vx >= 0 && dx <= 0) || (vy >= 0 && dy <= 0)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case \"outside\": {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case \"normal\": {\n                        const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === \"right\" &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === \"bottom\" &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { BounceOutMode } from \"./BounceOutMode\";\nimport { DestroyOutMode } from \"./DestroyOutMode\";\nimport { NoneOutMode } from \"./NoneOutMode\";\nimport { OutOutMode } from \"./OutOutMode\";\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this.container = container;\n        this._updateOutMode = (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.updaters = [\n            new BounceOutMode(container),\n            new DestroyOutMode(container),\n            new OutOutMode(container),\n            new NoneOutMode(container),\n        ];\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, \"bottom\");\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, \"left\");\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, \"right\");\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, \"top\");\n    }\n}\n","import { getRandom } from \"tsparticles-engine\";\nimport { updateSize } from \"./Utils\";\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? 0) <= 0 ||\n                ((particle.size.maxLoops ?? 0) > 0 && (particle.size.loops ?? 0) < (particle.size.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        particle.size.loops = 0;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateSize(particle, delta) {\n    const data = particle.size;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const sizeVelocity = (data.velocity ?? 0) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += sizeVelocity;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= sizeVelocity;\n            }\n    }\n    if (data.velocity && decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { loadBaseMover } from \"tsparticles-move-base\";\nimport { loadCircleShape } from \"tsparticles-shape-circle\";\nimport { loadColorUpdater } from \"tsparticles-updater-color\";\nimport { loadOpacityUpdater } from \"tsparticles-updater-opacity\";\nimport { loadOutModesUpdater } from \"tsparticles-updater-out-modes\";\nimport { loadSizeUpdater } from \"tsparticles-updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n","import { BaseMover } from \"./BaseMover\";\nexport async function loadBaseMover(engine, refresh = true) {\n    await engine.addMover(\"base\", () => new BaseMover(), refresh);\n}\n","import { CircleDrawer } from \"./CircleDrawer\";\nexport async function loadCircleShape(engine, refresh = true) {\n    await engine.addShape(\"circle\", new CircleDrawer(), refresh);\n}\n","import { ColorUpdater } from \"./ColorUpdater\";\nexport async function loadColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"color\", (container) => new ColorUpdater(container), refresh);\n}\n","import { OpacityUpdater } from \"./OpacityUpdater\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"opacity\", (container) => new OpacityUpdater(container), refresh);\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"outModes\", (container) => new OutOfCanvasUpdater(container), refresh);\n}\n","import { SizeUpdater } from \"./SizeUpdater\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"size\", () => new SizeUpdater(), refresh);\n}\n","export class ExternalInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"external\";\n    }\n}\n","export class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = \"ease-out-quad\";\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Vector, clamp, getDistances, getEasing, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Attract } from \"./Options/Classes/Attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickAttract = () => {\n            const container = this.container;\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            const { attract } = container;\n            if (!attract.finish) {\n                if (!attract.count) {\n                    attract.count = 0;\n                }\n                attract.count++;\n                if (attract.count === container.particles.count) {\n                    attract.finish = true;\n                }\n            }\n            if (attract.clicking) {\n                const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n                if (!attractRadius || attractRadius < 0 || !mousePos) {\n                    return;\n                }\n                this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n            }\n            else if (attract.clicking === false) {\n                attract.particles = [];\n            }\n            return;\n        };\n        this._hoverAttract = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n            if (!attractRadius || attractRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        };\n        this._processAttract = (position, attractRadius, area) => {\n            const container = this.container, attractOptions = container.actualOptions.interactivity.modes.attract;\n            if (!attractOptions) {\n                return;\n            }\n            const query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position);\n                const velocity = attractOptions.speed * attractOptions.factor;\n                const attractFactor = clamp(getEasing(attractOptions.easing)(1 - distance / attractRadius) * velocity, 0, attractOptions.maxSpeed);\n                const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n                particle.position.subFrom(normVec);\n            }\n        };\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                if (!container.attract) {\n                    container.attract = { particles: [] };\n                }\n                container.attract.clicking = false;\n            }, attract.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this._hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this._clickAttract();\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source?.attract);\n        }\n    }\n    reset() {\n    }\n}\n","export class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, isDivModeEnabled, isInArray, mouseMoveEvent, rectBounce, } from \"tsparticles-engine\";\nimport { Bounce } from \"./Options/Classes/Bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._processBounce = (position, radius, area) => {\n            const query = this.container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                if (area instanceof Circle) {\n                    circleBounce(circleBounceDataFromParticle(particle), {\n                        position,\n                        radius,\n                        mass: (radius ** 2 * Math.PI) / 2,\n                        velocity: Vector.origin,\n                        factor: Vector.origin,\n                    });\n                }\n                else if (area instanceof Rectangle) {\n                    rectBounce(particle, calculateBounds(position, radius));\n                }\n            }\n        };\n        this._processMouseBounce = () => {\n            const container = this.container, pxRatio = container.retina.pixelRatio, tolerance = 10 * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n            if (!radius || radius < 0 || !mousePos) {\n                return;\n            }\n            this._processBounce(mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance));\n        };\n        this._singleSelectorBounce = (selector, div) => {\n            const container = this.container, query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, radius = (elem.offsetWidth / 2) * pxRatio, tolerance = 10 * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, radius + tolerance)\n                    : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n                this._processBounce(pos, radius, area);\n            });\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"bounce\", hoverMode)) {\n            this._processMouseBounce();\n        }\n        else {\n            divModeExecute(\"bounce\", divs, (selector, div) => this._singleSelectorBounce(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((mouse.position && events.onHover.enable && isInArray(\"bounce\", events.onHover.mode)) ||\n            isDivModeEnabled(\"bounce\", divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor, executeOnSingleOrMultiple, isArray, } from \"tsparticles-engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = isArray(this.color) ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, (color) => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nimport { BubbleDiv } from \"./BubbleDiv\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nexport function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"tsparticles-engine\";\nimport { Bubble } from \"./Options/Classes/Bubble\";\nimport { calculateBubbleValue } from \"./Utils\";\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._clickBubble = () => {\n            const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || !mouseClickPos) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            const distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, (p) => this.isEnabled(p)), { bubble } = container;\n            for (const particle of query) {\n                if (!bubble.clicking) {\n                    continue;\n                }\n                particle.bubble.inRange = !bubble.durationEnd;\n                const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n                if (timeSpent > bubbleOptions.duration) {\n                    bubble.durationEnd = true;\n                }\n                if (timeSpent > bubbleOptions.duration * 2) {\n                    bubble.clicking = false;\n                    bubble.durationEnd = false;\n                }\n                const sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                        value: particle.size.value,\n                    },\n                    type: \"size\",\n                };\n                this._process(particle, distMouse, timeSpent, sizeData);\n                const opacityData = {\n                    bubbleObj: {\n                        optValue: bubbleOptions.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.opacity.value),\n                        value: particle.opacity?.value ?? 1,\n                    },\n                    type: \"opacity\",\n                };\n                this._process(particle, distMouse, timeSpent, opacityData);\n                if (!bubble.durationEnd && distMouse <= distance) {\n                    this._hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        };\n        this._hoverBubble = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0 || mousePos === undefined) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                particle.bubble.inRange = true;\n                const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = 1 - pointDistance / distance;\n                if (pointDistance <= distance) {\n                    if (ratio >= 0 && container.interactivity.status === mouseMoveEvent) {\n                        this._hoverBubbleSize(particle, ratio);\n                        this._hoverBubbleOpacity(particle, ratio);\n                        this._hoverBubbleColor(particle, ratio);\n                    }\n                }\n                else {\n                    this.reset(particle);\n                }\n                if (container.interactivity.status === mouseLeaveEvent) {\n                    this.reset(particle);\n                }\n            }\n        };\n        this._hoverBubbleColor = (particle, ratio, divBubble) => {\n            const options = this.container.actualOptions, bubbleOptions = divBubble ?? options.interactivity.modes.bubble;\n            if (!bubbleOptions) {\n                return;\n            }\n            if (!particle.bubble.finalColor) {\n                const modeColor = bubbleOptions.color;\n                if (!modeColor) {\n                    return;\n                }\n                const bubbleColor = itemFromSingleOrMultiple(modeColor);\n                particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n            }\n            if (!particle.bubble.finalColor) {\n                return;\n            }\n            if (bubbleOptions.mix) {\n                particle.bubble.color = undefined;\n                const pColor = particle.getFillColor();\n                particle.bubble.color = pColor\n                    ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                    : particle.bubble.finalColor;\n            }\n            else {\n                particle.bubble.color = particle.bubble.finalColor;\n            }\n        };\n        this._hoverBubbleOpacity = (particle, ratio, divBubble) => {\n            const container = this.container, options = container.actualOptions, modeOpacity = divBubble?.opacity ?? options.interactivity.modes.bubble?.opacity;\n            if (!modeOpacity) {\n                return;\n            }\n            const optOpacity = particle.options.opacity.value, pOpacity = particle.opacity?.value ?? 1, opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n            if (opacity !== undefined) {\n                particle.bubble.opacity = opacity;\n            }\n        };\n        this._hoverBubbleSize = (particle, ratio, divBubble) => {\n            const container = this.container, modeSize = divBubble?.size ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n            if (modeSize === undefined) {\n                return;\n            }\n            const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio, pSize = particle.size.value, size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n            if (size !== undefined) {\n                particle.bubble.radius = size;\n            }\n        };\n        this._process = (particle, distMouse, timeSpent, data) => {\n            const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || bubbleParam === undefined) {\n                return;\n            }\n            const bubbleDuration = bubbleOptions.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n            if (!bubbleDistance || bubbleDistance < 0 || bubbleParam === particlesParam) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            if (container.bubble.durationEnd) {\n                if (pObjBubble) {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble ?? pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === \"size\") {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === \"opacity\") {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n        };\n        this._singleSelectorHover = (delta, selector, div) => {\n            const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n            if (!bubble || !selectors.length) {\n                return;\n            }\n            selectors.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    if (!area.contains(particle.getPosition())) {\n                        continue;\n                    }\n                    particle.bubble.inRange = true;\n                    const divs = bubble.divs, divBubble = divMode(divs, elem);\n                    if (!particle.bubble.div || particle.bubble.div !== elem) {\n                        this.clear(particle, delta, true);\n                        particle.bubble.div = elem;\n                    }\n                    this._hoverBubbleSize(particle, 1, divBubble);\n                    this._hoverBubbleOpacity(particle, 1, divBubble);\n                    this._hoverBubbleColor(particle, 1, divBubble);\n                }\n            });\n        };\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== \"bubble\") {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    async interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n            this._hoverBubble();\n        }\n        else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n            this._clickBubble();\n        }\n        else {\n            divModeExecute(\"bubble\", divs, (selector, div) => this._singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, { onClick, onDiv, onHover } = events, divBubble = isDivModeEnabled(\"bubble\", onDiv);\n        if (!(divBubble || (onHover.enable && mouse.position) || (onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        return isInArray(\"bubble\", onHover.mode) || isInArray(\"bubble\", onClick.mode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source?.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n}\n","export class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { ConnectLinks } from \"./ConnectLinks\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, } from \"tsparticles-engine\";\nexport function gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexport function drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nexport function lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nexport function drawConnection(container, p1, p2) {\n    container.canvas.draw((ctx) => {\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, p1.retina.linksWidth ?? 0, ls, pos1, pos2);\n    });\n}\n","import { ExternalInteractorBase, isInArray, } from \"tsparticles-engine\";\nimport { Connect } from \"./Options/Classes/Connect\";\nimport { drawConnection } from \"./Utils\";\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!container.retina.connectModeDistance ||\n                container.retina.connectModeDistance < 0 ||\n                !container.retina.connectModeRadius ||\n                container.retina.connectModeRadius < 0 ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(\"connect\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source?.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { GrabLinks } from \"./GrabLinks\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n    }\n}\n","import { drawLine, getStyleFromRgb } from \"tsparticles-engine\";\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nexport function drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw((ctx) => {\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, particle.retina.linksWidth ?? 0, beginPos, mousePos, lineColor, opacity);\n    });\n}\n","import { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Grab } from \"./Options/Classes/Grab\";\nimport { drawGrab } from \"./Utils\";\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= 0) {\n                continue;\n            }\n            const optColor = grabLineOptions.color ?? particle.options.links?.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                continue;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source?.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"pause\") {\n                return;\n            }\n            const container = this.container;\n            if (container.getAnimationStatus()) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map((t) => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, itemFromArray, } from \"tsparticles-engine\";\nimport { Push } from \"./Options/Classes/Push\";\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"push\") {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const quantity = getRangeValue(pushOptions.quantity);\n            if (quantity <= 0) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            container.particles.push(quantity, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source?.push);\n        }\n    }\n    reset() {\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== \"remove\") {\n                return;\n            }\n            const removeNb = getRangeValue(options.interactivity.modes.remove.quantity);\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source?.remove);\n        }\n    }\n    reset() {\n    }\n}\n","export class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = \"ease-out-quad\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nimport { RepulseDiv } from \"./RepulseDiv\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Repulse } from \"./Options/Classes/Repulse\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickRepulse = () => {\n            const container = this.container, repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const repulse = container.repulse || { particles: [] };\n            if (!repulse.finish) {\n                if (!repulse.count) {\n                    repulse.count = 0;\n                }\n                repulse.count++;\n                if (repulse.count === container.particles.count) {\n                    repulse.finish = true;\n                }\n            }\n            if (repulse.clicking) {\n                const repulseDistance = container.retina.repulseModeDistance;\n                if (!repulseDistance || repulseDistance < 0) {\n                    return;\n                }\n                const repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n                if (mouseClickPos === undefined) {\n                    return;\n                }\n                const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = repulseOptions.speed, force = (-repulseRadius * velocity) / d;\n                    if (d <= repulseRadius) {\n                        repulse.particles.push(particle);\n                        const vect = Vector.create(dx, dy);\n                        vect.length = force;\n                        particle.velocity.setTo(vect);\n                    }\n                }\n            }\n            else if (repulse.clicking === false) {\n                for (const particle of repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                repulse.particles = [];\n            }\n        };\n        this._hoverRepulse = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n            if (!repulseRadius || repulseRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n        };\n        this._processRepulse = (position, repulseRadius, area, divRepulse) => {\n            const container = this.container, query = container.particles.quadTree.query(area, (p) => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position), velocity = (divRepulse?.speed ?? repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(getEasing(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n                particle.position.addTo(normVec);\n            }\n        };\n        this._singleSelectorRepulse = (selector, div) => {\n            const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n            if (!repulse) {\n                return;\n            }\n            const query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n                this._processRepulse(pos, repulseRadius, area, divRepulse);\n            });\n        };\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulseOpts = options.interactivity.modes.repulse;\n            if (!repulseOpts || mode !== \"repulse\") {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            const repulse = container.repulse;\n            repulse.clicking = true;\n            repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            repulse.particles = [];\n            repulse.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                repulse.clicking = false;\n            }, repulseOpts.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hover = events.onHover, hoverEnabled = hover.enable, hoverMode = hover.mode, click = events.onClick, clickEnabled = click.enable, clickMode = click.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this._hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this._clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this._singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv, hover = events.onHover, click = events.onClick, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (hover.enable && mouse.position) || (click.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = hover.mode, clickMode = click.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source?.repulse);\n        }\n    }\n    reset() {\n    }\n}\n","export class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray, } from \"tsparticles-engine\";\nimport { Slow } from \"./Options/Classes/Slow\";\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"slow\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source?.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;\n        if (!slowOptions || !radius || radius < 0 || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;\n        if (dist > radius) {\n            return;\n        }\n        slow.inRange = true;\n        slow.factor = proximityFactor / slowFactor;\n    }\n}\n","export const InterlaceOffsets = [0, 4, 2, 1];\nexport const InterlaceSteps = [8, 8, 4, 2];\n","export class ByteStream {\n    constructor(bytes) {\n        this.pos = 0;\n        this.data = new Uint8ClampedArray(bytes);\n    }\n    getString(count) {\n        const slice = this.data.slice(this.pos, this.pos + count);\n        this.pos += slice.length;\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n    }\n    nextByte() {\n        return this.data[this.pos++];\n    }\n    nextTwoBytes() {\n        this.pos += 2;\n        return this.data[this.pos - 2] + (this.data[this.pos - 1] << 8);\n    }\n    readSubBlocks() {\n        let blockString = \"\", size = 0;\n        do {\n            size = this.data[this.pos++];\n            for (let count = size; --count >= 0; blockString += String.fromCharCode(this.data[this.pos++])) {\n            }\n        } while (size !== 0);\n        return blockString;\n    }\n    readSubBlocksBin() {\n        let size = 0, len = 0;\n        for (let offset = 0; (size = this.data[this.pos + offset]) !== 0; offset += size + 1) {\n            len += size;\n        }\n        const blockData = new Uint8Array(len);\n        for (let i = 0; (size = this.data[this.pos++]) !== 0;) {\n            for (let count = size; --count >= 0; blockData[i++] = this.data[this.pos++]) {\n            }\n        }\n        return blockData;\n    }\n    skipSubBlocks() {\n        for (; this.data[this.pos] !== 0; this.pos += this.data[this.pos] + 1) {\n        }\n        this.pos++;\n    }\n}\n","import { InterlaceOffsets, InterlaceSteps } from \"./Constants\";\nimport { ByteStream } from \"./ByteStream\";\nfunction parseColorTable(byteStream, count) {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n        colors.push({\n            r: byteStream.data[byteStream.pos],\n            g: byteStream.data[byteStream.pos + 1],\n            b: byteStream.data[byteStream.pos + 2],\n        });\n        byteStream.pos += 3;\n    }\n    return colors;\n}\nasync function parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n    switch (byteStream.nextByte()) {\n        case 249: {\n            const frame = gif.frames[getFrameIndex(false)];\n            byteStream.pos++;\n            const packedByte = byteStream.nextByte();\n            frame.GCreserved = (packedByte & 0xe0) >>> 5;\n            frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n            frame.userInputDelayFlag = (packedByte & 2) === 2;\n            const transparencyFlag = (packedByte & 1) === 1;\n            frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n            const transparencyIndex = byteStream.nextByte();\n            if (transparencyFlag) {\n                getTransparencyIndex(transparencyIndex);\n            }\n            byteStream.pos++;\n            break;\n        }\n        case 255: {\n            byteStream.pos++;\n            const applicationExtension = {\n                identifier: byteStream.getString(8),\n                authenticationCode: byteStream.getString(3),\n                data: byteStream.readSubBlocksBin(),\n            };\n            gif.applicationExtensions.push(applicationExtension);\n            break;\n        }\n        case 254: {\n            gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n            break;\n        }\n        case 1: {\n            if (gif.globalColorTable.length === 0) {\n                throw new EvalError(\"plain text extension without global color table\");\n            }\n            byteStream.pos++;\n            gif.frames[getFrameIndex(false)].plainTextData = {\n                left: byteStream.nextTwoBytes(),\n                top: byteStream.nextTwoBytes(),\n                width: byteStream.nextTwoBytes(),\n                height: byteStream.nextTwoBytes(),\n                charSize: {\n                    width: byteStream.nextTwoBytes(),\n                    height: byteStream.nextTwoBytes(),\n                },\n                foregroundColor: byteStream.nextByte(),\n                backgroundColor: byteStream.nextByte(),\n                text: byteStream.readSubBlocks(),\n            };\n            break;\n        }\n        default:\n            byteStream.skipSubBlocks();\n            break;\n    }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    const frame = gif.frames[getFrameIndex(true)];\n    frame.left = byteStream.nextTwoBytes();\n    frame.top = byteStream.nextTwoBytes();\n    frame.width = byteStream.nextTwoBytes();\n    frame.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;\n    frame.sortFlag = (packedByte & 0x20) === 0x20;\n    frame.reserved = (packedByte & 0x18) >>> 3;\n    const localColorCount = 1 << ((packedByte & 7) + 1);\n    if (localColorTableFlag) {\n        frame.localColorTable = parseColorTable(byteStream, localColorCount);\n    }\n    const getColor = (index) => {\n        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n        return { r, g, b, a: index === getTransparencyIndex(null) ? (avgAlpha ? ~~((r + g + b) / 3) : 0) : 255 };\n    };\n    const image = (() => {\n        try {\n            return new ImageData(frame.width, frame.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (image == null) {\n        throw new EvalError(\"GIF frame size is to large\");\n    }\n    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;\n    const readBits = (pos, len) => {\n        const bytePos = pos >>> 3, bitPos = pos & 7;\n        return (((imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16)) &\n            (((1 << len) - 1) << bitPos)) >>>\n            bitPos);\n    };\n    if (interlacedFlag) {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n            if (InterlaceOffsets[pass] < frame.height) {\n                for (let pixelPos = 0, lineIndex = 0;;) {\n                    const last = code;\n                    code = readBits(pos, size);\n                    pos += size + 1;\n                    if (code === clearCode) {\n                        size = minCodeSize + 1;\n                        dic.length = clearCode + 2;\n                        for (let i = 0; i < dic.length; i++) {\n                            dic[i] = i < clearCode ? [i] : [];\n                        }\n                    }\n                    else {\n                        if (code >= dic.length) {\n                            dic.push(dic[last].concat(dic[last][0]));\n                        }\n                        else if (last !== clearCode) {\n                            dic.push(dic[last].concat(dic[code][0]));\n                        }\n                        for (let i = 0; i < dic[code].length; i++) {\n                            const { r, g, b, a } = getColor(dic[code][i]);\n                            image.data.set([r, g, b, a], InterlaceOffsets[pass] * frame.width +\n                                InterlaceSteps[pass] * lineIndex +\n                                (pixelPos % (frame.width * 4)));\n                            pixelPos += 4;\n                        }\n                        if (dic.length === 1 << size && size < 0xc) {\n                            size++;\n                        }\n                    }\n                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n                        lineIndex++;\n                        if (InterlaceOffsets[pass] + InterlaceSteps[pass] * lineIndex >= frame.height) {\n                            break;\n                        }\n                    }\n                }\n            }\n            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n    }\n    else {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pixelPos = -4;;) {\n            const last = code;\n            code = readBits(pos, size);\n            pos += size;\n            if (code === clearCode) {\n                size = minCodeSize + 1;\n                dic.length = clearCode + 2;\n                for (let i = 0; i < dic.length; i++) {\n                    dic[i] = i < clearCode ? [i] : [];\n                }\n            }\n            else {\n                if (code === clearCode + 1) {\n                    break;\n                }\n                if (code >= dic.length) {\n                    dic.push(dic[last].concat(dic[last][0]));\n                }\n                else if (last !== clearCode) {\n                    dic.push(dic[last].concat(dic[code][0]));\n                }\n                for (let i = 0; i < dic[code].length; i++) {\n                    const { r, g, b, a } = getColor(dic[code][i]);\n                    image.data.set([r, g, b, a], (pixelPos += 4));\n                }\n                if (dic.length >= 1 << size && size < 0xc) {\n                    size++;\n                }\n            }\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n    }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    switch (byteStream.nextByte()) {\n        case 59:\n            return true;\n        case 44:\n            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n            break;\n        case 33:\n            await parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n            break;\n        default:\n            throw new EvalError(\"undefined block found\");\n    }\n    return false;\n}\nexport function getGIFLoopAmount(gif) {\n    for (const extension of gif.applicationExtensions) {\n        if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n            continue;\n        }\n        return extension.data[1] + (extension.data[2] << 8);\n    }\n    return NaN;\n}\nexport async function decodeGIF(gifURL, progressCallback, avgAlpha) {\n    if (!avgAlpha)\n        avgAlpha = false;\n    const res = await fetch(gifURL);\n    if (!res.ok && res.status === 404) {\n        throw new EvalError(\"file not found\");\n    }\n    const buffer = await res.arrayBuffer();\n    const gif = {\n        width: 0,\n        height: 0,\n        totalTime: 0,\n        colorRes: 0,\n        pixelAspectRatio: 0,\n        frames: [],\n        sortFlag: false,\n        globalColorTable: [],\n        backgroundImage: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n        comments: [],\n        applicationExtensions: [],\n    }, byteStream = new ByteStream(new Uint8ClampedArray(buffer));\n    if (byteStream.getString(6) !== \"GIF89a\") {\n        throw new Error(\"not a supported GIF file\");\n    }\n    gif.width = byteStream.nextTwoBytes();\n    gif.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;\n    gif.colorRes = (packedByte & 0x70) >>> 4;\n    gif.sortFlag = (packedByte & 8) === 8;\n    const globalColorCount = 1 << ((packedByte & 7) + 1), backgroundColorIndex = byteStream.nextByte();\n    gif.pixelAspectRatio = byteStream.nextByte();\n    if (gif.pixelAspectRatio !== 0) {\n        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n    }\n    if (globalColorTableFlag) {\n        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n    }\n    const backgroundImage = (() => {\n        try {\n            return new ImageData(gif.width, gif.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (backgroundImage == null) {\n        throw new Error(\"GIF frame size is to large\");\n    }\n    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];\n    backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n    for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n        backgroundImage.data.copyWithin(i, 0, i);\n    }\n    gif.backgroundImage = backgroundImage;\n    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;\n    const getframeIndex = (increment) => {\n        if (increment) {\n            incrementFrameIndex = true;\n        }\n        return frameIndex;\n    };\n    const getTransparencyIndex = (newValue) => {\n        if (newValue != null) {\n            transparencyIndex = newValue;\n        }\n        return transparencyIndex;\n    };\n    try {\n        do {\n            if (incrementFrameIndex) {\n                gif.frames.push({\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                    disposalMethod: 0,\n                    image: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n                    plainTextData: null,\n                    userInputDelayFlag: false,\n                    delayTime: 0,\n                    sortFlag: false,\n                    localColorTable: [],\n                    reserved: 0,\n                    GCreserved: 0,\n                });\n                frameIndex++;\n                transparencyIndex = -1;\n                incrementFrameIndex = false;\n            }\n        } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n        gif.frames.length--;\n        for (const frame of gif.frames) {\n            if (frame.userInputDelayFlag && frame.delayTime === 0) {\n                gif.totalTime = Infinity;\n                break;\n            }\n            gif.totalTime += frame.delayTime;\n        }\n        return gif;\n    }\n    catch (error) {\n        if (error instanceof EvalError) {\n            throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n        }\n        throw error;\n    }\n}\n","import { errorPrefix, getLogger, getStyleFromHsl } from \"tsparticles-engine\";\nimport { decodeGIF, getGIFLoopAmount } from \"./GifUtils/Utils\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? 0;\n        if (image.gifLoopCount === 0) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? 1), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor ?? imageData.replace_color,\n        source: imageData.src,\n    };\n    return new Promise((resolve) => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        });\n        img.src = url;\n    });\n}\n","import { errorPrefix } from \"tsparticles-engine\";\nimport { replaceImageColor } from \"./Utils\";\nexport class ImageDrawer {\n    constructor(engine) {\n        this.loadImageShape = async (imageShape) => {\n            if (!this._engine.loadImage) {\n                throw new Error(`${errorPrefix} image shape not initialized`);\n            }\n            await this._engine.loadImage({\n                gif: imageShape.gif,\n                name: imageShape.name,\n                replaceColor: imageShape.replaceColor ?? imageShape.replace_color ?? false,\n                src: imageShape.src,\n            });\n        };\n        this._engine = engine;\n    }\n    addImage(image) {\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        this._engine.images.push(image);\n    }\n    draw(context, particle, radius, opacity, delta) {\n        const image = particle.image, element = image?.element;\n        if (!image) {\n            return;\n        }\n        context.globalAlpha = opacity;\n        if (image.gif && image.gifData) {\n            const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext(\"2d\");\n            if (!offscreenContext) {\n                throw new Error(\"could not create offscreen canvas context\");\n            }\n            offscreenContext.imageSmoothingQuality = \"low\";\n            offscreenContext.imageSmoothingEnabled = false;\n            offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n            if (particle.gifLoopCount === undefined) {\n                particle.gifLoopCount = image.gifLoopCount ?? 0;\n            }\n            let frameIndex = particle.gifFrame ?? 0;\n            const pos = { x: -image.gifData.width * 0.5, y: -image.gifData.height * 0.5 }, frame = image.gifData.frames[frameIndex];\n            if (particle.gifTime === undefined) {\n                particle.gifTime = 0;\n            }\n            if (!frame.bitmap) {\n                return;\n            }\n            context.scale(radius / image.gifData.width, radius / image.gifData.height);\n            switch (frame.disposalMethod) {\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 0:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    break;\n                case 1:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    break;\n                case 2:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    if (image.gifData.globalColorTable.length === 0) {\n                        offscreenContext.putImageData(image.gifData.frames[0].image, pos.x + frame.left, pos.y + frame.top);\n                    }\n                    else {\n                        offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n                    }\n                    break;\n                case 3:\n                    {\n                        const previousImageData = offscreenContext.getImageData(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                        context.drawImage(offscreenCanvas, pos.x, pos.y);\n                        offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.putImageData(previousImageData, 0, 0);\n                    }\n                    break;\n            }\n            particle.gifTime += delta.value;\n            if (particle.gifTime > frame.delayTime) {\n                particle.gifTime -= frame.delayTime;\n                if (++frameIndex >= image.gifData.frames.length) {\n                    if (--particle.gifLoopCount <= 0) {\n                        return;\n                    }\n                    frameIndex = 0;\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                }\n                particle.gifFrame = frameIndex;\n            }\n            context.scale(image.gifData.width / radius, image.gifData.height / radius);\n        }\n        else if (element) {\n            const ratio = image.ratio, pos = {\n                x: -radius,\n                y: -radius,\n            };\n            context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (!options.preload || !this._engine.loadImage) {\n            return;\n        }\n        for (const imageData of options.preload) {\n            await this._engine.loadImage(imageData);\n        }\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const imageData = particle.shapeData, image = this._engine.images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            this.loadImageShape(imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const images = this._engine.images, imageData = particle.shapeData, color = particle.getFillColor(), image = images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        const replaceColor = imageData.replaceColor ?? imageData.replace_color ?? image.replaceColor;\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        (async () => {\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    gif: image.gif,\n                    gifData: image.gifData,\n                    gifLoopCount: image.gifLoopCount,\n                    loaded: true,\n                    ratio: imageData.width && imageData.height ? imageData.width / imageData.height : image.ratio ?? 1,\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = imageData.fill ?? particle.fill, close = imageData.close ?? particle.close, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.fill = imageShape.fill;\n            particle.close = imageShape.close;\n        })();\n    }\n}\n","export class Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { Preload } from \"./Options/Classes/Preload\";\nexport class ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    getPlugin() {\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source || !source.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find((t) => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { downloadSvgImage, loadGifImage, loadImage } from \"./Utils\";\nimport { ImageDrawer } from \"./ImageDrawer\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader\";\nimport { errorPrefix } from \"tsparticles-engine\";\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - 3),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            const imageFunc = data.gif ? loadGifImage : data.replaceColor ? downloadSvgImage : loadImage;\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    addLoadImageToEngine(engine);\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape([\"image\", \"images\"], new ImageDrawer(engine), refresh);\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.0001;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { LifeDelay } from \"./LifeDelay\";\nimport { LifeDuration } from \"./LifeDuration\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRandom, getRangeValue, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nimport { Life } from \"./Options/Classes/Life\";\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= 0) {\n            particle.life.duration = -1;\n        }\n        if (particle.life.count <= 0) {\n            particle.life.count = -1;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > 0;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source?.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        const life = particle.life;\n        let justSpawned = false;\n        if (particle.spawning) {\n            life.delayTime += delta.value;\n            if (life.delayTime >= particle.life.delay) {\n                justSpawned = true;\n                particle.spawning = false;\n                life.delayTime = 0;\n                life.time = 0;\n            }\n            else {\n                return;\n            }\n        }\n        if (life.duration === -1) {\n            return;\n        }\n        if (particle.spawning) {\n            return;\n        }\n        if (justSpawned) {\n            life.time = 0;\n        }\n        else {\n            life.time += delta.value;\n        }\n        if (life.time < life.duration) {\n            return;\n        }\n        life.time = 0;\n        if (particle.life.count > 0) {\n            particle.life.count--;\n        }\n        if (particle.life.count === 0) {\n            particle.destroy();\n            return;\n        }\n        const canvasSize = this.container.canvas.size, widthRange = setRangeValue(0, canvasSize.width), heightRange = setRangeValue(0, canvasSize.width);\n        particle.position.x = randomInRange(widthRange);\n        particle.position.y = randomInRange(heightRange);\n        particle.spawning = true;\n        life.delayTime = 0;\n        life.time = 0;\n        particle.reset();\n        const lifeOptions = particle.options.life;\n        if (lifeOptions) {\n            life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n            life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n        }\n    }\n}\n","export class LineDrawer {\n    draw(context, particle, radius) {\n        const shapeData = particle.shapeData;\n        context.moveTo(-radius / 2, 0);\n        context.lineTo(radius / 2, 0);\n        context.lineCap = shapeData?.cap ?? \"butt\";\n    }\n    getSidesCount() {\n        return 1;\n    }\n}\n","import { isSsr } from \"tsparticles-engine\";\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions, parallaxOptions = options.interactivity.events.onHover.parallax;\n        if (isSsr() || !parallaxOptions.enable) {\n            return;\n        }\n        const parallaxForce = parallaxOptions.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasSize = container.canvas.size, canvasCenter = {\n            x: canvasSize.width / 2,\n            y: canvasSize.height / 2,\n        }, parallaxSmooth = parallaxOptions.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        }, { offset } = particle;\n        offset.x += (centerDistance.x - offset.x) / parallaxSmooth;\n        offset.y += (centerDistance.y - offset.y) / parallaxSmooth;\n    }\n}\n","export class ParticlesInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"particles\";\n    }\n}\n","import { ParticlesInteractorBase, getDistances, } from \"tsparticles-engine\";\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1) {\n        const container = this.container, distance = p1.retina.attractDistance ?? container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / 10, 0, r2);\n    p1.size.value += factor / 2;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle, getRangeValue } from \"tsparticles-engine\";\nconst fixBounceSpeed = (p) => {\n    if (p.collisionMaxSpeed === undefined) {\n        p.collisionMaxSpeed = getRangeValue(p.options.collisions.maxSpeed);\n    }\n    if (p.velocity.length > p.collisionMaxSpeed) {\n        p.velocity.length = p.collisionMaxSpeed;\n    }\n};\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n    fixBounceSpeed(p1);\n    fixBounceSpeed(p2);\n}\n","import { absorb } from \"./Absorb\";\nimport { bounce } from \"./Bounce\";\nimport { destroy } from \"./Destroy\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case \"absorb\": {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case \"bounce\": {\n            bounce(p1, p2);\n            break;\n        }\n        case \"destroy\": {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { bounce } from \"./Bounce\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p2 : p1;\n        deleteP.destroy();\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1, delta) {\n        if (p1.destroyed || p1.spawning) {\n            return;\n        }\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Circle, Rectangle } from \"tsparticles-engine\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = { ...canvasSize };\n    }\n    contains(point) {\n        const { width, height } = this.canvasSize;\n        const { x, y } = point;\n        return (super.contains(point) ||\n            super.contains({ x: x - width, y }) ||\n            super.contains({ x: x - width, y: y - height }) ||\n            super.contains({ x, y: y - height }));\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nimport { LinksShadow } from \"./LinksShadow\";\nimport { LinksTriangle } from \"./LinksTriangle\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistances, getLinkRandomColor, } from \"tsparticles-engine\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Links } from \"./Options/Classes/Links\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    const { dx, dy, distance } = getDistances(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const absDiffs = {\n        x: Math.abs(dx),\n        y: Math.abs(dy),\n    }, warpDistances = {\n        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y),\n    };\n    return Math.sqrt(warpDistances.x ** 2 + warpDistances.y ** 2);\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this._setColor = (p1) => {\n            if (!p1.options.links) {\n                return;\n            }\n            const container = this.linkContainer, linksOptions = p1.options.links;\n            let linkColor = linksOptions.id === undefined\n                ? container.particles.linksColor\n                : container.particles.linksColors.get(linksOptions.id);\n            if (linkColor) {\n                return;\n            }\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        };\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColor = undefined;\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    async interact(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? 0, warp = linkOpt1.warp, range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2?.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.some((t) => t.destination === p2) ||\n                p2.links.some((t) => t.destination === p1)) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                continue;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this._setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        return !!particle.options.links?.enable;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load(source?.links ?? source?.lineLinked ?? source?.line_linked);\n        }\n    }\n    reset() {\n    }\n}\n","import { drawLine, drawTriangle, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb, } from \"tsparticles-engine\";\nexport function drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t) => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n","import { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { drawLinkLine, drawLinkTriangle, setLinkFrequency } from \"./Utils\";\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n        this._drawLinkLine = (p1, link) => {\n            const p1LinksOptions = p1.options.links;\n            if (!p1LinksOptions?.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            let opacity = link.opacity;\n            container.canvas.draw((ctx) => {\n                let colorLine;\n                const twinkle = p1.options.twinkle?.lines;\n                if (twinkle?.enable) {\n                    const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = getRandom() < twinkleFreq;\n                    if (twinkling && twinkleRgb) {\n                        colorLine = twinkleRgb;\n                        opacity = getRangeValue(twinkle.opacity);\n                    }\n                }\n                if (!colorLine) {\n                    const linkColor = p1LinksOptions.id !== undefined\n                        ? container.particles.linksColors.get(p1LinksOptions.id)\n                        : container.particles.linksColor;\n                    colorLine = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorLine) {\n                    return;\n                }\n                const width = p1.retina.linksWidth ?? 0, maxDistance = p1.retina.linksDistance ?? 0, { backgroundMask } = options;\n                drawLinkLine({\n                    context: ctx,\n                    width,\n                    begin: pos1,\n                    end: pos2,\n                    maxDistance,\n                    canvasSize: container.canvas.size,\n                    links: p1LinksOptions,\n                    backgroundMask: backgroundMask,\n                    colorLine,\n                    opacity,\n                });\n            });\n        };\n        this._drawLinkTriangle = (p1, link1, link2) => {\n            const linksOptions = p1.options.links;\n            if (!linksOptions?.enable) {\n                return;\n            }\n            const triangleOptions = linksOptions.triangles;\n            if (!triangleOptions.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = triangleOptions.opacity ?? (link1.opacity + link2.opacity) / 2;\n            if (opacityTriangle <= 0) {\n                return;\n            }\n            container.canvas.draw((ctx) => {\n                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = p1.retina.linksDistance ?? 0;\n                if (getDistance(pos1, pos2) > linksDistance ||\n                    getDistance(pos3, pos2) > linksDistance ||\n                    getDistance(pos3, pos1) > linksDistance) {\n                    return;\n                }\n                let colorTriangle = rangeColorToRgb(triangleOptions.color);\n                if (!colorTriangle) {\n                    const linkColor = linksOptions.id !== undefined\n                        ? container.particles.linksColors.get(linksOptions.id)\n                        : container.particles.linksColor;\n                    colorTriangle = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorTriangle) {\n                    return;\n                }\n                drawLinkTriangle({\n                    context: ctx,\n                    pos1,\n                    pos2,\n                    pos3,\n                    backgroundMask: options.backgroundMask,\n                    colorTriangle,\n                    opacityTriangle,\n                });\n            });\n        };\n        this._drawTriangles = (options, p1, link, p1Links) => {\n            const p2 = link.destination;\n            if (!(options.links?.triangles.enable && p2.options.links?.triangles.enable)) {\n                return;\n            }\n            const vertices = p2.links?.filter((t) => {\n                const linkFreq = this._getLinkFrequency(p2, t.destination);\n                return (p2.options.links &&\n                    linkFreq <= p2.options.links.frequency &&\n                    p1Links.findIndex((l) => l.destination === t.destination) >= 0);\n            });\n            if (!vertices?.length) {\n                return;\n            }\n            for (const vertex of vertices) {\n                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);\n                if (triangleFreq > options.links.triangles.frequency) {\n                    continue;\n                }\n                this._drawLinkTriangle(p1, link, vertex);\n            }\n        };\n        this._getLinkFrequency = (p1, p2) => {\n            return setLinkFrequency([p1, p2], this._freqs.links);\n        };\n        this._getTriangleFrequency = (p1, p2, p3) => {\n            return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n        };\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        const { links, options } = particle;\n        if (!links || links.length <= 0) {\n            return;\n        }\n        const p1Links = links.filter((l) => options.links && this._getLinkFrequency(particle, l.destination) <= options.links.frequency);\n        for (const link of p1Links) {\n            this._drawTriangles(options, particle, link, p1Links);\n            if (link.opacity > 0 && (particle.retina.linksWidth ?? 0) > 0) {\n                this._drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;\n        retina.linksDistance = distance * ratio;\n        retina.linksWidth = width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n}\n","import { LinkInstance } from \"./LinkInstance\";\nclass LinksPlugin {\n    constructor() {\n        this.id = \"links\";\n    }\n    getPlugin(container) {\n        return new LinkInstance(container);\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\nexport async function loadLinksPlugin(engine, refresh = true) {\n    const plugin = new LinksPlugin();\n    await engine.addPlugin(plugin, refresh);\n}\n","import { loadLinksInteraction } from \"./interaction\";\nimport { loadLinksPlugin } from \"./plugin\";\nexport async function loadParticlesLinksInteraction(engine, refresh = true) {\n    await loadLinksInteraction(engine, refresh);\n    await loadLinksPlugin(engine, refresh);\n}\nexport * from \"./Options/Classes/Links\";\nexport * from \"./Options/Classes/LinksShadow\";\nexport * from \"./Options/Classes/LinksTriangle\";\nexport * from \"./Options/Interfaces/ILinks\";\nexport * from \"./Options/Interfaces/ILinksShadow\";\nexport * from \"./Options/Interfaces/ILinksTriangle\";\n","import { Linker } from \"./Linker\";\nexport async function loadLinksInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesLinks\", (container) => new Linker(container), refresh);\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class PolygonDrawerBase {\n    draw(context, particle, radius) {\n        const start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius), sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides, interiorAngle = Math.PI - (Math.PI * interiorAngleDegrees) / 180;\n        if (!context) {\n            return;\n        }\n        context.beginPath();\n        context.translate(start.x, start.y);\n        context.moveTo(0, 0);\n        for (let i = 0; i < sideCount; i++) {\n            context.lineTo(side.length, 0);\n            context.translate(side.length, 0);\n            context.rotate(interiorAngle);\n        }\n    }\n    getSidesCount(particle) {\n        const polygon = particle.shapeData;\n        return Math.round(getRangeValue(polygon?.sides ?? polygon?.nb_sides ?? 5));\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class PolygonDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / 3.5),\n            y: -radius / (2.66 / 3.5),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * 2.66) / (sides / 3),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class TriangleDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / 1.66,\n        };\n    }\n    getSidesCount() {\n        return 3;\n    }\n    getSidesData(particle, radius) {\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: radius * 2,\n        };\n    }\n}\n","import { PolygonDrawer } from \"./PolygonDrawer\";\nimport { TriangleDrawer } from \"./TriangleDrawer\";\nexport async function loadGenericPolygonShape(engine, refresh = true) {\n    await engine.addShape(\"polygon\", new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine, refresh = true) {\n    await engine.addShape(\"triangle\", new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine, refresh = true) {\n    await loadGenericPolygonShape(engine, refresh);\n    await loadTriangleShape(engine, refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom, } from \"tsparticles-engine\";\nimport { RotateAnimation } from \"./RotateAnimation\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = \"clockwise\";\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { getRandom, getRangeValue, } from \"tsparticles-engine\";\nimport { Rotate } from \"./Options/Classes/Rotate\";\nfunction updateRotate(particle, delta) {\n    const rotate = particle.rotate, rotateOptions = particle.options.rotate;\n    if (!rotate || !rotateOptions) {\n        return;\n    }\n    const rotateAnimation = rotateOptions.animation, speed = (rotate.velocity ?? 0) * delta.factor, max = 2 * Math.PI, decay = rotate.decay ?? 1;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case \"increasing\":\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n    if (rotate.velocity && decay !== 1) {\n        rotate.velocity *= decay;\n    }\n}\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: (getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.rotate.status = \"increasing\";\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source?.rotate);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRotate(particle, delta);\n        particle.rotation = particle.rotate?.value ?? 0;\n    }\n}\n","const fixFactor = Math.sqrt(2);\nexport class SquareDrawer {\n    draw(context, particle, radius) {\n        const fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * 2;\n        context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);\n    }\n    getSidesCount() {\n        return 4;\n    }\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class StarDrawer {\n    draw(context, particle, radius) {\n        const sides = particle.sides, inset = particle.starInset ?? 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? star?.nb_sides ?? 5));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData, inset = getRangeValue(star?.inset ?? 2);\n        particle.starInset = inset;\n    }\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateStrokeColor(particle, delta) {\n    if (!particle.strokeColor || !particle.strokeAnimation) {\n        return;\n    }\n    const { h, s, l } = particle.strokeColor, { h: hAnimation, s: sAnimation, l: lAnimation } = particle.strokeAnimation;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateStrokeColor } from \"./Utils\";\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, options = particle.options;\n        const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue(stroke.opacity ?? 1);\n        particle.strokeAnimation = stroke.color?.animation;\n        const strokeHslColor = rangeColorToHsl(stroke.color) ?? particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const color = particle.strokeAnimation, { strokeColor } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((strokeColor?.h.value !== undefined && strokeColor.h.enable) ||\n                (strokeColor?.s.value !== undefined && strokeColor.s.enable) ||\n                (strokeColor?.l.value !== undefined && strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateStrokeColor(particle, delta);\n    }\n}\n","import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont, } from \"tsparticles-engine\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n    draw(context, particle, radius, opacity) {\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        if (particle.text === undefined) {\n            particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n        }\n        const text = particle.text, style = character.style ?? \"\", weight = character.weight ?? \"400\", size = Math.round(radius) * 2, font = character.font ?? \"Verdana\", fill = particle.fill, offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (validTypes.find((t) => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes\n                .map((t) => options.particles.shape.options[t])\n                .find((t) => !!t), promises = [];\n            executeOnSingleOrMultiple(shapeOptions, (shape) => {\n                promises.push(loadFont(shape.font, shape.weight));\n            });\n            await Promise.all(promises);\n        }\n    }\n    particleInit(container, particle) {\n        if (!particle.shape || !validTypes.includes(particle.shape)) {\n            return;\n        }\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n    }\n}\n","import { initPjs } from \"tsparticles-particles.js\";\nimport { loadBasic } from \"tsparticles-basic\";\nimport { loadEasingQuadPlugin } from \"tsparticles-plugin-easing-quad\";\nimport { loadExternalAttractInteraction } from \"tsparticles-interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"tsparticles-interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"tsparticles-interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"tsparticles-interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"tsparticles-interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"tsparticles-interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"tsparticles-interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"tsparticles-interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"tsparticles-interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"tsparticles-interaction-external-slow\";\nimport { loadImageShape } from \"tsparticles-shape-image\";\nimport { loadLifeUpdater } from \"tsparticles-updater-life\";\nimport { loadLineShape } from \"tsparticles-shape-line\";\nimport { loadParallaxMover } from \"tsparticles-move-parallax\";\nimport { loadParticlesAttractInteraction } from \"tsparticles-interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"tsparticles-interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"tsparticles-interaction-particles-links\";\nimport { loadPolygonShape } from \"tsparticles-shape-polygon\";\nimport { loadRotateUpdater } from \"tsparticles-updater-rotate\";\nimport { loadSquareShape } from \"tsparticles-shape-square\";\nimport { loadStarShape } from \"tsparticles-shape-star\";\nimport { loadStrokeColorUpdater } from \"tsparticles-updater-stroke-color\";\nimport { loadTextShape } from \"tsparticles-shape-text\";\nexport async function loadSlim(engine, refresh = true) {\n    initPjs(engine);\n    await loadParallaxMover(engine, false);\n    await loadExternalAttractInteraction(engine, false);\n    await loadExternalBounceInteraction(engine, false);\n    await loadExternalBubbleInteraction(engine, false);\n    await loadExternalConnectInteraction(engine, false);\n    await loadExternalGrabInteraction(engine, false);\n    await loadExternalPauseInteraction(engine, false);\n    await loadExternalPushInteraction(engine, false);\n    await loadExternalRemoveInteraction(engine, false);\n    await loadExternalRepulseInteraction(engine, false);\n    await loadExternalSlowInteraction(engine, false);\n    await loadParticlesAttractInteraction(engine, false);\n    await loadParticlesCollisionsInteraction(engine, false);\n    await loadParticlesLinksInteraction(engine, false);\n    await loadEasingQuadPlugin();\n    await loadImageShape(engine, false);\n    await loadLineShape(engine, false);\n    await loadPolygonShape(engine, false);\n    await loadSquareShape(engine, false);\n    await loadStarShape(engine, false);\n    await loadTextShape(engine, false);\n    await loadLifeUpdater(engine, false);\n    await loadRotateUpdater(engine, false);\n    await loadStrokeColorUpdater(engine, false);\n    await loadBasic(engine, refresh);\n}\n","import { ParallaxMover } from \"./ParallaxMover\";\nexport async function loadParallaxMover(engine, refresh = true) {\n    await engine.addMover(\"parallax\", () => new ParallaxMover(), refresh);\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadExternalAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalAttract\", (container) => new Attractor(engine, container), refresh);\n}\nexport * from \"./Options/Classes/Attract\";\nexport * from \"./Options/Interfaces/IAttract\";\n","import { Bouncer } from \"./Bouncer\";\nexport async function loadExternalBounceInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBounce\", (container) => new Bouncer(container), refresh);\n}\nexport * from \"./Options/Classes/Bounce\";\nexport * from \"./Options/Interfaces/IBounce\";\n","import { Bubbler } from \"./Bubbler\";\nexport async function loadExternalBubbleInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBubble\", (container) => new Bubbler(container), refresh);\n}\nexport * from \"./Options/Classes/BubbleBase\";\nexport * from \"./Options/Classes/BubbleDiv\";\nexport * from \"./Options/Classes/Bubble\";\nexport * from \"./Options/Interfaces/IBubbleBase\";\nexport * from \"./Options/Interfaces/IBubbleDiv\";\nexport * from \"./Options/Interfaces/IBubble\";\n","import { Connector } from \"./Connector\";\nexport async function loadExternalConnectInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalConnect\", (container) => new Connector(container), refresh);\n}\nexport * from \"./Options/Classes/Connect\";\nexport * from \"./Options/Classes/ConnectLinks\";\nexport * from \"./Options/Interfaces/IConnect\";\nexport * from \"./Options/Interfaces/IConnectLinks\";\n","import { Grabber } from \"./Grabber\";\nexport async function loadExternalGrabInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalGrab\", (container) => new Grabber(container), refresh);\n}\nexport * from \"./Options/Classes/Grab\";\nexport * from \"./Options/Classes/GrabLinks\";\nexport * from \"./Options/Interfaces/IGrab\";\nexport * from \"./Options/Interfaces/IGrabLinks\";\n","import { Pauser } from \"./Pauser\";\nexport async function loadExternalPauseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPause\", (container) => new Pauser(container), refresh);\n}\n","import { Pusher } from \"./Pusher\";\nexport async function loadExternalPushInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPush\", (container) => new Pusher(container), refresh);\n}\nexport * from \"./Options/Classes/Push\";\nexport * from \"./Options/Interfaces/IPush\";\n","import { Remover } from \"./Remover\";\nexport async function loadExternalRemoveInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRemove\", (container) => new Remover(container), refresh);\n}\nexport * from \"./Options/Classes/Remove\";\nexport * from \"./Options/Interfaces/IRemove\";\n","import { Repulser } from \"./Repulser\";\nexport async function loadExternalRepulseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRepulse\", (container) => new Repulser(engine, container), refresh);\n}\nexport * from \"./Options/Classes/RepulseBase\";\nexport * from \"./Options/Classes/RepulseDiv\";\nexport * from \"./Options/Classes/Repulse\";\nexport * from \"./Options/Interfaces/IRepulseBase\";\nexport * from \"./Options/Interfaces/IRepulseDiv\";\nexport * from \"./Options/Interfaces/IRepulse\";\n","import { Slower } from \"./Slower\";\nexport async function loadExternalSlowInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalSlow\", (container) => new Slower(container), refresh);\n}\nexport * from \"./Options/Classes/Slow\";\nexport * from \"./Options/Interfaces/ISlow\";\n","import { Attractor } from \"./Attractor\";\nexport async function loadParticlesAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesAttract\", (container) => new Attractor(container), refresh);\n}\n","import { Collider } from \"./Collider\";\nexport async function loadParticlesCollisionsInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesCollisions\", (container) => new Collider(container), refresh);\n}\n","import { addEasing } from \"tsparticles-engine\";\nexport async function loadEasingQuadPlugin() {\n    addEasing(\"ease-in-quad\", (value) => value ** 2);\n    addEasing(\"ease-out-quad\", (value) => 1 - (1 - value) ** 2);\n    addEasing(\"ease-in-out-quad\", (value) => (value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2));\n}\n","import { LineDrawer } from \"./LineDrawer\";\nexport async function loadLineShape(engine, refresh = true) {\n    await engine.addShape(\"line\", new LineDrawer(), refresh);\n}\n","import { SquareDrawer } from \"./SquareDrawer\";\nexport async function loadSquareShape(engine, refresh = true) {\n    await engine.addShape([\"edge\", \"square\"], new SquareDrawer(), refresh);\n}\n","import { StarDrawer } from \"./StarDrawer\";\nexport async function loadStarShape(engine, refresh = true) {\n    await engine.addShape(\"star\", new StarDrawer(), refresh);\n}\n","import { TextDrawer, validTypes } from \"./TextDrawer\";\nexport async function loadTextShape(engine, refresh = true) {\n    await engine.addShape(validTypes, new TextDrawer(), refresh);\n}\n","import { LifeUpdater } from \"./LifeUpdater\";\nexport async function loadLifeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"life\", (container) => new LifeUpdater(container), refresh);\n}\n","import { RotateUpdater } from \"./RotateUpdater\";\nexport async function loadRotateUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"rotate\", (container) => new RotateUpdater(container), refresh);\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater\";\nexport async function loadStrokeColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"strokeColor\", (container) => new StrokeColorUpdater(container), refresh);\n}\n","export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n","import { Range } from \"./Range\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle) {\n            const rSum = r + range.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle) {\n            const { width, height } = range.size, edges = Math.pow(distPos.x - width, 2) + Math.pow(distPos.y - height, 2);\n            return (edges <= r ** 2 ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\n","import { isBoolean, isNumber } from \"./Utils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (easings.get(name)) {\n        return;\n    }\n    easings.set(name, easing);\n}\nexport function getEasing(name) {\n    return easings.get(name) || ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = isBoolean(random)\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** 2 + dy ** 2) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return (direction * Math.PI) / 180;\n    }\n    switch (direction) {\n        case \"top\":\n            return -Math.PI / 2;\n        case \"top-right\":\n            return -Math.PI / 4;\n        case \"right\":\n            return 0;\n        case \"bottom-right\":\n            return Math.PI / 4;\n        case \"bottom\":\n            return Math.PI / 2;\n        case \"bottom-left\":\n            return (3 * Math.PI) / 4;\n        case \"left\":\n            return Math.PI;\n        case \"top-left\":\n            return (-3 * Math.PI) / 4;\n        case \"inside\":\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case \"outside\":\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * Math.PI * 2;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * 100) * data.size.width) / 100,\n        y: ((data.position?.y ?? getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n","import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","export const generatedAttribute = \"generated\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchEndEvent = \"touchend\";\nexport const touchMoveEvent = \"touchmove\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\nexport const errorPrefix = \"tsParticles - Error\";\n","import { collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some((t) => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    return value === array || (isArray(array) && array.indexOf(value) > -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius ?? 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getValue(particle.options.bounce.horizontal),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getValue(particle.options.bounce.vertical),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, 0);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.find((t, index) => callback(t, index)) : callback(obj, 0) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * 1000,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    };\n    if (animationOptions.enable) {\n        res.decay = 1 - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case \"increase\":\n                res.status = \"increasing\";\n                break;\n            case \"decrease\":\n                res.status = \"decreasing\";\n                break;\n            case \"random\":\n                res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                break;\n        }\n        const autoStatus = animationOptions.mode === \"auto\";\n        switch (animationOptions.startValue) {\n            case \"min\":\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = \"increasing\";\n                }\n                break;\n            case \"max\":\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = \"decreasing\";\n                }\n                break;\n            case \"random\":\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === \"percent\";\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / 100) * canvasSize.width,\n            y: (positionOrSize.y / 100) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / 100) * canvasSize.width,\n            height: (positionOrSize.height / 100) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nexport function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw && updater.afterDraw(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw && updater.beforeDraw(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize && plugin.resize();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n            if (coverRgb) {\n                const coverColor = {\n                    ...coverRgb,\n                    a: cover.opacity,\n                };\n                this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                const trail = options.particles.move.trail;\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity: 1 / trail.length,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity: 1 / trail.length,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            const style = element.style;\n            style.position = originalStyle.position;\n            style.zIndex = originalStyle.zIndex;\n            style.top = originalStyle.top;\n            style.left = originalStyle.left;\n            style.width = originalStyle.width;\n            style.height = originalStyle.height;\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const priority = \"important\", style = element.style;\n            style.setProperty(\"position\", \"fixed\", priority);\n            style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n            style.setProperty(\"top\", \"0\", priority);\n            style.setProperty(\"left\", \"0\", priority);\n            style.setProperty(\"width\", \"100%\", priority);\n            style.setProperty(\"height\", \"100%\", priority);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element && element.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? 1, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), 500);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.getAnimationStatus()) {\n                    container.play(true);\n                }\n                else {\n                    container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = async () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            this._resizeTimeout = setTimeout(async () => {\n                const canvas = this.container.canvas;\n                canvas && (await canvas.windowResize());\n            }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver(async (entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    await this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity || !interactivity.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? 0),\n                        y: lastTouch.clientY - (canvasRect.top ?? 0),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nimport { isString } from \"../../../Utils/Utils\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const ids = data.ids ?? data.elementId ?? data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","export class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean } from \"../../../../Utils/Utils\";\nimport { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.onClick.load(data.onClick ?? data.onclick);\n        const onDiv = data.onDiv ?? data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover ?? data.onhover);\n        if (isBoolean(data.resize)) {\n            this.resize.enable = data.resize;\n        }\n        else {\n            this.resize.load(data.resize);\n        }\n    }\n}\n","export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const detectsOn = data.detectsOn ?? data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? 50,\n                y: data.position.y ?? 50,\n                mode: data.position.mode ?? \"percent\",\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.delay = 0;\n        this.decay = 0;\n        this.sync = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nimport { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = data.rotate?.x ?? data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = data.rotate?.y ?? data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n","export class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = \"percent\";\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrailFill {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    get fillColor() {\n        return this.fill.color;\n    }\n    set fillColor(value) {\n        this.fill.load({ color: value });\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined || data.fillColor !== undefined) {\n            this.fill.load(data.fill || { color: data.fillColor });\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { isNumber, isObject } from \"../../../../Utils/Utils\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes ?? data.outMode ?? data.out_mode;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path ?? data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 2;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.opacity_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.opacity_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    get area() {\n        return this.width;\n    }\n    set area(value) {\n        this.width = value;\n    }\n    get factor() {\n        return this.height;\n    }\n    set factor(value) {\n        this.height = value;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width ?? data.area ?? data.value_area;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height ?? data.factor;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = 0;\n        this.value = 0;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = data.limit ?? data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend, isArray } from \"../../../../Utils/Utils\";\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\nexport class Shape {\n    constructor() {\n        this.loadShape = (item, mainKey, altKey, altOverride) => {\n            if (!item) {\n                return;\n            }\n            const itemIsArray = isArray(item), emptyValue = itemIsArray ? [] : {}, mainDifferentValues = itemIsArray !== isArray(this.options[mainKey]), altDifferentValues = itemIsArray !== isArray(this.options[altKey]);\n            if (mainDifferentValues) {\n                this.options[mainKey] = emptyValue;\n            }\n            if (altDifferentValues && altOverride) {\n                this.options[altKey] = emptyValue;\n            }\n            this.options[mainKey] = deepExtend(this.options[mainKey] ?? emptyValue, item);\n            if (!this.options[altKey] || altOverride) {\n                this.options[altKey] = deepExtend(this.options[altKey] ?? emptyValue, item);\n            }\n        };\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        return (this.options[charKey] ?? this.options[charAltKey]);\n    }\n    set character(value) {\n        this.options[charAltKey] = this.options[charKey] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        return (this.options[imageKey] ?? this.options[imageAltKey]);\n    }\n    set image(value) {\n        this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        return (this.options[polygonKey] ?? this.options[polygonAltKey]);\n    }\n    set polygon(value) {\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const options = data.options ?? data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, charKey, charAltKey, true);\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n        this.loadShape(data.image ?? data.images, imageKey, imageAltKey, true);\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 5;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.size_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.size_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        const collisions = data.move?.collisions ?? data.move?.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke ?? data.shape?.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.plugins.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = (mode) => {\n            return (this.themes.find((theme) => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\n        };\n        this._importPreset = (preset) => {\n            this.load(this._engine.plugins.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, (preset) => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina ?? data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit ?? data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen ?? data.backgroundMode;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.plugins.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find((t) => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(\"dark\")?.name;\n        this.defaultThemes.light = this._findDefaultTheme(\"light\")?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && (await interactor.interact(delta));\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode && interactor.handleClickMode(mode);\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && (await interactor.interact(particle, delta));\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && interactor.reset(particle);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && interactor.reset(particle);\n        }\n    }\n}\n","import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * 2;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = 0) => {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-horizontal\"],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-vertical\"],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n                return res;\n            }\n            const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n                left: radOffset - rad / 2,\n                right: radOffset + rad / 2,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = 0) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= 0 && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find((particle) => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = (color) => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor(((this.roll.angle ?? 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = (position) => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? 0,\n                mode: this.options.move.center.mode ?? \"percent\",\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case \"inside\":\n                    this.outType = \"inside\";\n                    break;\n                case \"outside\":\n                    this.outType = \"outside\";\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._loadShapeData = (shapeOptions, reduceDuplicates) => {\n            const shapeData = shapeOptions.options[this.shape];\n            if (!shapeData) {\n                return;\n            }\n            return deepExtend({\n                close: shapeOptions.close,\n                fill: shapeOptions.fill,\n            }, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        };\n        this._engine = engine;\n        this.init(id, position, overrideOptions, group);\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n        if (pathGenerator) {\n            pathGenerator.reset(this);\n        }\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.fill = true;\n        this.pathRotation = false;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const shapeOptions = particlesOptions.shape;\n        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            if (shape) {\n                this.shape = shape;\n                shapeOptions.load(overrideOptions.shape);\n            }\n        }\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.fill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.close = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer && drawer.loadShape) {\n            drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of container.particles.movers) {\n            mover.init && mover.init(this);\n        }\n        if (drawer && drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated && plugin.particleCreated(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset && updater.reset(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < 4; i++) {\n                this._subs.push(new QuadTree(new Rectangle(x + (width / 2) * (i % 2), y + (height / 2) * (Math.round(i / 2) - (i % 2)), width / 2, height / 2), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check, found) {\n        const res = found || [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                sub.query(range, check, res);\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { errorPrefix } from \"./Utils/Constants\";\nconst qTreeCapacity = 4;\nconst qTreeRectangle = (canvasSize) => {\n    return new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._applyDensity = (options, manualCount, group) => {\n            if (!options.number.density?.enable) {\n                return;\n            }\n            const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            this.limit = numberOptions.limit * densityFactor;\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return 1;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this.pool.pop();\n                if (particle) {\n                    particle.init(this._nextId, position, overrideOptions, group);\n                }\n                else {\n                    particle = new Particle(this._engine, this._nextId, this._container, position, overrideOptions, group);\n                }\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n                return;\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            particle.destroy(override);\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, 1);\n            this._zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this._container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this._container;\n        container.canvas.clear();\n        await this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    init() {\n        const container = this._container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this._interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            this._removeParticle(i--, group, override) && deleted++;\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update && plugin.update(delta);\n        }\n        for (const particle of this._array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            for (const mover of this.movers) {\n                mover.isEnabled(particle) && mover.move(particle, delta);\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            this.pool.push(...particlesToDelete);\n        }\n        await this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n        if (this.needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = zArray[zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = 1;\n        this.reduceFactor = 1;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { getLogger, isFunction } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => p.velocity,\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                (entry.isIntersecting ? this.play : this.pause)();\n            }\n        };\n        this._nextFrame = async (timestamp) => {\n            try {\n                if (!this.smooth &&\n                    this.lastFrameTime !== undefined &&\n                    timestamp < this.lastFrameTime + 1000 / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this.lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this.lastFrameTime, this.fpsLimit, this.smooth);\n                this.addLifeTime(delta.value);\n                this.lastFrameTime = timestamp;\n                if (delta.value > 1000) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.getAnimationStatus()) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator ?? defaultPathGenerator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            drawer.destroy && drawer.destroy(this);\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = requestAnimationFrame(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        });\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode && plugin.handleClickMode(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this._lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            drawer.init && (await drawer.init(this));\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.init && (await plugin.init());\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup && plugin.particlesSetup();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause && plugin.pause();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = { ...defaultPathGenerator };\n        if (isFunction(pathOrGenerator)) {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    plugin.start && (await plugin.start());\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop && plugin.stop();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners && listeners.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        !this.getPathGenerator(type) && this.pathGenerators.set(type, pathGenerator);\n    }\n    addPlugin(plugin) {\n        !this.getPlugin(plugin.id) && this.plugins.push(plugin);\n    }\n    addPreset(presetKey, options, override = false) {\n        (override || !this.getPreset(presetKey)) && this.presets.set(presetKey, options);\n    }\n    addShapeDrawer(types, drawer) {\n        executeOnSingleOrMultiple(types, (type) => {\n            !this.getShapeDrawer(type) && this.drawers.set(type, drawer);\n        });\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            plugin.needsPlugin(container.actualOptions) && res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            updater.loadOptions && updater.loadOptions(options, ...sourceOptions);\n        }\n    }\n}\n","import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\nimport { getLogger, isBoolean, isFunction, isNumber, isString, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { Container } from \"./Container\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher\";\nimport { Plugins } from \"./Utils/Plugins\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nfunction isParamsEmpty(params) {\n    return !params.id && !params.element && !params.url && !params.options;\n}\nfunction isParams(obj) {\n    return !isParamsEmpty(obj);\n}\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = new Plugins(this);\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get version() {\n        return \"2.12.0\";\n    }\n    addConfig(nameOrConfig, config) {\n        if (isString(nameOrConfig)) {\n            if (config) {\n                config.name = nameOrConfig;\n                this._configs.set(nameOrConfig, config);\n            }\n        }\n        else {\n            this._configs.set(nameOrConfig.name ?? \"default\", nameOrConfig);\n        }\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh(refresh);\n    }\n    async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh, refresh = true) {\n        let customDrawer;\n        let realRefresh = refresh, realInit, realAfterEffect, realDestroy;\n        if (isBoolean(initOrRefresh)) {\n            realRefresh = initOrRefresh;\n            realInit = undefined;\n        }\n        else {\n            realInit = initOrRefresh;\n        }\n        if (isBoolean(afterEffectOrRefresh)) {\n            realRefresh = afterEffectOrRefresh;\n            realAfterEffect = undefined;\n        }\n        else {\n            realAfterEffect = afterEffectOrRefresh;\n        }\n        if (isBoolean(destroyOrRefresh)) {\n            realRefresh = destroyOrRefresh;\n            realDestroy = undefined;\n        }\n        else {\n            realDestroy = destroyOrRefresh;\n        }\n        if (isFunction(drawer)) {\n            customDrawer = {\n                afterEffect: realAfterEffect,\n                destroy: realDestroy,\n                draw: drawer,\n                init: realInit,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh(realRefresh);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (!item || item.destroyed) {\n            dom.splice(index, 1);\n            return;\n        }\n        return item;\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    async load(tagIdOrOptionsOrParams, options) {\n        return this.loadFromArray(tagIdOrOptionsOrParams, options);\n    }\n    async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {\n        let params;\n        if (!isParams(tagIdOrOptionsOrParams)) {\n            params = {};\n            if (isString(tagIdOrOptionsOrParams)) {\n                params.id = tagIdOrOptionsOrParams;\n            }\n            else {\n                params.options = tagIdOrOptionsOrParams;\n            }\n            if (isNumber(optionsOrIndex)) {\n                params.index = optionsOrIndex;\n            }\n            else {\n                params.options = optionsOrIndex ?? params.options;\n            }\n            params.index = index ?? params.index;\n        }\n        else {\n            params = tagIdOrOptionsOrParams;\n        }\n        return this._loadParams(params);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        let url, id;\n        if (isNumber(pathConfigJson) || pathConfigJson === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = pathConfigJson;\n        }\n        return this._loadParams({ id: id, url, index });\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        this.dom().forEach((t) => t.refresh());\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options, index) {\n        const params = { index };\n        if (isString(id)) {\n            params.id = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (element instanceof HTMLElement) {\n            params.element = element;\n        }\n        else {\n            params.options = element;\n        }\n        if (isNumber(options)) {\n            params.index = options;\n        }\n        else {\n            params.options = options ?? params.options;\n        }\n        return this._loadParams(params);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        const params = {};\n        if (id instanceof HTMLElement) {\n            params.element = id;\n            params.url = element;\n            params.index = pathConfigJson;\n        }\n        else {\n            params.id = id;\n            params.element = element;\n            params.url = pathConfigJson;\n            params.index = index;\n        }\n        return this._loadParams(params);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n    async _loadParams(params) {\n        const id = params.id ?? `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        let domContainer = params.element ?? document.getElementById(id);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = id;\n            document.body.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this.dom(), oldIndex = dom.findIndex((v) => v.id === id);\n        if (oldIndex >= 0) {\n            const old = this.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n","import { init } from \"./init\";\nimport { isSsr } from \"./Utils/Utils\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports\";\nexport * from \"./export-types\";\nexport { tsParticles };\n","import { Engine } from \"./Core/Engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nexport function init() {\n    const rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\n    addColorManager(rgbColorManager);\n    addColorManager(hslColorManager);\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n","import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = \"auto\";\n        this.startValue = \"random\";\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { isArray, isString, itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    return stringToRgba(input)?.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.r = result.g = result.b = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = \"increasing\";\n        colorValue.loops = 0;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = 0;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * 1000;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n","import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * (transform.a ?? 1),\n        b: rotateData.sin * (transform.b ?? 1),\n        c: -rotateData.sin * (transform.c ?? 1),\n        d: rotateData.cos * (transform.d ?? 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? 0;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (strokeWidth > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer || !drawer.afterEffect) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (data?.value === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n","export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions\";\nimport { Random } from \"./Random\";\nimport { isBoolean } from \"../../Utils/Utils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (isBoolean(data.random)) {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { errorPrefix } from \"./Constants\";\nimport { isNumber } from \"../../Utils/Utils\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? 0;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != 0) {\n            this.multTo(1.0 / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\n","import { invariant } from 'motion-utils';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\n\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            invariant(hasMounted, \"controls.start() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            const animations = [];\n            subscribers.forEach((visualElement) => {\n                animations.push(animateVisualElement(visualElement, definition, {\n                    transitionOverride,\n                }));\n            });\n            return Promise.all(animations);\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls, setValues };\n","import { animationControls } from './animation-controls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    useIsomorphicLayoutEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\nexport { useAnimation, useAnimationControls };\n"],"names":["isObject","val","deepCompare","obj1","obj2","excludeKeyFn","arguments","length","undefined","keys1","Object","keys","filter","key","keys2","value1","value2","Array","isArray","deepCompareArrays","arr1","arr2","i","val1","val2","defaultId","Particles","Component","constructor","props","super","this","state","init","library","destroy","setState","shouldComponentUpdate","nextProps","nextOptions","options","params","currentOptions","url","id","canvasClassName","className","height","width","style","loaded","startsWith","componentDidUpdate","refresh","forceUpdate","then","componentDidMount","tsParticles","async","loadParticles","componentWillUnmount","render","React","defaultProps","container","load","current","particles","selector","Error","el","document","querySelector","set","replace","fullScreen","enable","color","value","links","distance","minDistance","connectParticles","move","speed","number","maxParticles","size","min","max","sizeVariations","responsive","map","maxWidth","breakpoint","_container","pauseAnimation","pause","resumeAnimation","play","initPjs","engine","particlesJS","pJSDom","tagId","pathConfigJson","callback","loadJSON","catch","setOnClickHandler","dom","initParticlesJS","window","particle","moveOptions","moveSpeed","maxSpeed","moveDrift","delta","particlesOptions","pathOptions","path","lastPathTime","pathDelay","pathGenerator","generate","velocity","addTo","clamp","x","y","applyPath","gravityOptions","gravity","gravityFactor","inverse","factor","acceleration","decay","moveDecay","multTo","mult","zIndexOptions","zIndex","zVelocityFactor","zIndexFactor","velocityRate","position","vibrate","Math","sin","cos","BaseMover","_initSpin","spinOptions","spin","spinPos","spinCenter","canvas","pos","getPosition","getDistance","spinAcceleration","getRangeValue","retina","pixelRatio","center","direction","angle","radius","isEnabled","destroyed","particleOptions","pxRatio","slowFactor","slow","inRange","getProximitySpeedFactor","baseSpeed","reduceFactor","drift","maxSize","getRangeMax","getRadius","updateFunc","maxCanvasSize","initialPosition","dx","dy","getDistances","dxFixed","abs","dyFixed","maxDistance","hDistance","horizontal","vDistance","vertical","misplaced","vel","getRandom","applyDistance","CircleDrawer","draw","context","circleRange","PI","arc","getSidesCount","particleInit","shapeData","updateColorValue","colorValue","valueAnimation","decrease","maxLoops","loops","time","delayTime","offset","randomInRange","status","ColorUpdater","hslColor","rangeColorToHsl","reduceDuplicates","getHslAnimationFromHsl","animation","h","hAnimation","s","sAnimation","l","lAnimation","spawning","update","updateColor","OpacityUpdater","opacityOptions","opacity","initParticleNumericAnimationValue","opacityAnimation","sync","reset","data","minValue","maxValue","checkDestroy","updateOpacity","BounceOutMode","modes","outMode","includes","handled","plugin","plugins","particleBounce","bounds","calculateBounds","canvasSize","right","left","bounced","newVelocity","getValue","bounce","minPos","bounceHorizontal","bottom","top","bounceVertical","DestroyOutMode","_delta","outType","isPointInside","Vector","origin","moveCenter","vx","vy","remove","NoneOutMode","pRadius","OutOutMode","circVec","create","floor","newDx","newDy","atan2","wrap","warp","newPos","sizeValue","nextBounds","OutOfCanvasUpdater","_updateOutMode","updater","updaters","outModes","default","SizeUpdater","sizeAnimation","sizeAnimationSpeed","sizeVelocity","updateSize","loadBasic","addMover","loadBaseMover","addShape","loadCircleShape","addParticleUpdater","loadColorUpdater","loadOpacityUpdater","loadOutModesUpdater","loadSizeUpdater","ExternalInteractorBase","type","Attract","duration","easing","Attractor","_clickAttract","attract","finish","count","clicking","mousePos","interactivity","mouse","clickPosition","attractRadius","attractModeDistance","_processAttract","Circle","_hoverAttract","area","attractOptions","actualOptions","query","quadTree","p","attractFactor","getEasing","normVec","subFrom","_engine","handleClickMode","mode","setTo","initialVelocity","setTimeout","clear","interact","mouseMoveStatus","mouseMoveEvent","events","hoverEnabled","onHover","hoverMode","clickEnabled","onClick","clickMode","isInArray","loadModeOptions","_len","sources","_key","source","Bounce","Bouncer","_processBounce","circleBounce","circleBounceDataFromParticle","mass","Rectangle","rectBounce","_processMouseBounce","tolerance","bounceModeDistance","_singleSelectorBounce","div","querySelectorAll","forEach","item","elem","offsetLeft","offsetWidth","offsetTop","offsetHeight","divs","onDiv","divModeExecute","isDivModeEnabled","BubbleBase","mix","sourceColor","executeOnSingleOrMultiple","OptionsColor","BubbleDiv","selectors","ids","t","Bubble","tmp","calculateBubbleValue","particleValue","modeValue","optionsValue","ratio","Bubbler","_clickBubble","mouseClickPos","bubbleOptions","bubble","bubbleModeDistance","queryCircle","durationEnd","distMouse","timeSpent","Date","getTime","clickTime","sizeData","bubbleObj","optValue","bubbleModeSize","particlesObj","_process","opacityData","_hoverBubbleColor","_hoverBubble","pointDistance","_hoverBubbleSize","_hoverBubbleOpacity","mouseLeaveEvent","divBubble","finalColor","modeColor","bubbleColor","itemFromSingleOrMultiple","pColor","getFillColor","rgbToHsl","colorMix","modeOpacity","optOpacity","modeSize","optSize","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","_singleSelectorHover","repulseRadius","contains","divMode","force","ConnectLinks","Connect","lineLinked","line_linked","lineStyle","ctx","p1","p2","connectOptions","connect","gradStop","color1","color2","sourcePos","destPos","midRgb","grad","createLinearGradient","addColorStop","getStyleFromHsl","getStyleFromRgb","gradient","drawConnection","ls","pos1","pos2","begin","end","drawLine","lineWidth","strokeStyle","stroke","drawConnectLine","linksWidth","Connector","connectModeDistance","connectModeRadius","slice","distMax","xDiff","yDiff","GrabLinks","blink","consent","Grab","drawGrab","lineColor","beginPos","colorLine","drawGrabLine","Grabber","grab","grabModeDistance","grabLineOptions","lineOpacity","opacityLine","optColor","grabLineColor","linksOptions","getLinkRandomColor","getLinkColor","Pauser","getAnimationStatus","Push","groups","quantity","particles_nb","setRangeValue","Pusher","pushOptions","push","group","itemFromArray","groupOptions","Remove","Remover","removeNb","removeQuantity","RepulseBase","RepulseDiv","Repulse","Repulser","_clickRepulse","repulseOptions","repulse","repulseDistance","repulseModeDistance","pow","range","d","vect","_hoverRepulse","_processRepulse","divRepulse","repulseFactor","_singleSelectorRepulse","repulseOpts","hover","click","Slow","Slower","slowModeRadius","slowOptions","particlePos","dist","proximityFactor","InterlaceOffsets","InterlaceSteps","ByteStream","bytes","Uint8ClampedArray","getString","reduce","acc","curr","String","fromCharCode","nextByte","nextTwoBytes","readSubBlocks","blockString","readSubBlocksBin","len","blockData","Uint8Array","skipSubBlocks","parseColorTable","byteStream","colors","r","g","b","parseBlock","gif","avgAlpha","getFrameIndex","getTransparencyIndex","progressCallback","frame","frames","packedByte","localColorTableFlag","interlacedFlag","sortFlag","reserved","localColorCount","localColorTable","getColor","index","globalColorTable","a","image","ImageData","colorSpace","error","DOMException","name","EvalError","minCodeSize","imageData","clearCode","readBits","bytePos","bitPos","code","dic","pass","pixelPos","lineIndex","last","concat","bitmap","createImageBitmap","parseImageBlock","GCreserved","disposalMethod","userInputDelayFlag","transparencyFlag","transparencyIndex","applicationExtension","identifier","authenticationCode","applicationExtensions","comments","plainTextData","charSize","foregroundColor","backgroundColor","text","parseExtensionBlock","currentColorRegex","loadImage","Promise","resolve","loading","img","Image","element","addEventListener","getLogger","errorPrefix","src","loadGifImage","gifData","gifURL","res","fetch","ok","buffer","arrayBuffer","totalTime","colorRes","pixelAspectRatio","backgroundImage","globalColorTableFlag","globalColorCount","backgroundColorIndex","copyWithin","frameIndex","incrementFrameIndex","getframeIndex","increment","newValue","Infinity","message","decodeGIF","gifLoopCount","extension","NaN","getGIFLoopAmount","downloadSvgImage","response","svgData","replaceImageColor","svgColoredData","imageShape","colorStyle","preFillIndex","indexOf","substring","replaceColorSvg","imageRes","replaceColor","replace_color","svg","Blob","domUrl","URL","webkitURL","createObjectURL","revokeObjectURL","img2","ImageDrawer","loadImageShape","addImage","images","globalAlpha","offscreenCanvas","OffscreenCanvas","offscreenContext","getContext","imageSmoothingQuality","imageSmoothingEnabled","clearRect","gifFrame","gifTime","scale","drawImage","putImageData","previousImageData","getImageData","preload","loadShape","shape","find","fill","close","Preload","ImagePreloaderPlugin","getPlugin","loadOptions","preloadOptions","existing","needsPlugin","imageFunc","addLoadImageToEngine","preloader","addPlugin","LifeDelay","ValueWithRandom","LifeDuration","random","minimumValue","Life","delay","LifeUpdater","lifeOptions","life","justSpawned","widthRange","heightRange","LineDrawer","moveTo","lineTo","lineCap","cap","ParallaxMover","isSsr","parallax","parallaxOptions","parallaxForce","canvasCenter","parallaxSmooth","smooth","centerDistance","ParticlesInteractorBase","attractDistance","rotate","ax","ay","p1Factor","p2Factor","updateAbsorb","r1","r2","collisions","absorb","fixBounceSpeed","collisionMaxSpeed","resolveCollision","unbreakable","Collider","radius1","radius2","round","z","CircleWarp","point","intersects","rect","circle","biggerCircle","rectSW","LinksShadow","blur","LinksTriangle","frequency","Links","shadow","triangles","getLinkDistance","optDistance","absDiffs","warpDistances","sqrt","Linker","_setColor","linkContainer","linkColor","linksColor","linksColors","get","Map","linkOpt1","linksDistance","linkOpt2","some","destination","loadParticlesOptions","setLinkFrequency","dictionary","sort","join","LinkInstance","_drawLinkLine","link","p1LinksOptions","twinkle","lines","twinkleFreq","twinkleRgb","rangeColorToRgb","backgroundMask","drawn","pi1","pi2","endNE","d1","yi","endSW","d2","xi","endSE","d3","globalCompositeOperation","composite","shadowColor","shadowBlur","drawLinkLine","_drawLinkTriangle","link1","link2","triangleOptions","p3","opacityTriangle","pos3","colorTriangle","drawTriangle","fillStyle","drawLinkTriangle","_drawTriangles","p1Links","vertices","linkFreq","_getLinkFrequency","findIndex","vertex","_getTriangleFrequency","_freqs","drawParticle","particleCreated","particleDestroyed","LinksPlugin","loadParticlesLinksInteraction","addInteractor","loadLinksInteraction","loadLinksPlugin","PolygonDrawerBase","start","getCenter","side","getSidesData","sideCount","numerator","denominator","decimalSides","interiorAngleDegrees","interiorAngle","beginPath","translate","polygon","sides","nb_sides","PolygonDrawer","TriangleDrawer","loadPolygonShape","loadGenericPolygonShape","loadTriangleShape","RotateAnimation","Rotate","RotateUpdater","rotateOptions","pathRotation","rotateDirection","rotateAnimation","rotation","updateRotate","fixFactor","SquareDrawer","fixedRadius","fixedDiameter","StarDrawer","inset","starInset","star","StrokeColorUpdater","strokeWidth","strokeOpacity","strokeAnimation","strokeHslColor","strokeColor","updateStrokeColor","validTypes","TextDrawer","character","textData","randomIndexData","weight","font","offsetX","fillText","strokeText","shapeOptions","promises","loadFont","all","loadSlim","loadParallaxMover","loadExternalAttractInteraction","loadExternalBounceInteraction","loadExternalBubbleInteraction","loadExternalConnectInteraction","loadExternalGrabInteraction","loadExternalPauseInteraction","loadExternalPushInteraction","loadExternalRemoveInteraction","loadExternalRepulseInteraction","loadExternalSlowInteraction","loadParticlesAttractInteraction","loadParticlesCollisionsInteraction","addEasing","loadEasingQuadPlugin","loadLineShape","loadSquareShape","loadStarShape","loadTextShape","loadLifeUpdater","loadRotateUpdater","loadStrokeColorUpdater","Range","distPos","_random","easings","num","comp1","comp2","weight1","weight2","getRangeMin","isNumber","isBoolean","pointA","pointB","getParticleDirectionAngle","getParticleBaseVelocity","baseVelocity","collisionVelocity","v1","v2","m1","m2","calcExactPositionOrRandomFromSize","parseAlpha","input","endsWith","parseFloat","w","size2","w2","h2","generatedAttribute","mouseDownEvent","mouseUpEvent","mouseOutEvent","touchStartEvent","touchEndEvent","touchMoveEvent","touchCancelEvent","resizeEvent","visibilityChangeEvent","_logger","debug","console","info","log","verbose","warning","warn","rectSideBounce","pSide","pOtherSide","rectSide","rectOtherSide","safeMatchMedia","matchMedia","safeMutationObserver","MutationObserver","array","fonts","arrayRandomIndex","inside","areBoundsInside","deepExtend","sourceIsArray","destDict","v","findItemFromSingleOrMultiple","singleDivModeExecute","matches","checkSelector","getMass","xVelocityDiff","yVelocityDiff","sub","xDist","yDist","u1","u2","vFinal1","vFinal2","divBounds","resH","resV","obj","useIndex","valueRange","animationOptions","autoStatus","startValue","initialValue","getPositionOrSize","positionOrSize","_","rest","arg","isString","isFunction","setTransformValue","newFactor","Canvas","_applyPostDrawUpdaters","_postDrawUpdaters","afterDraw","_applyPreDrawUpdaters","zOpacity","colorStyles","transform","_preDrawUpdaters","getColorStyles","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","_resizePlugins","resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","particleStrokeColor","_initCover","cover","coverRgb","coverColor","_coverColorStyle","_initStyle","_fullScreen","_originalStyle","_setFullScreenStyle","_resetOriginalStyle","setProperty","_initTrail","trail","trailFill","fillColor","_trailFill","reject","createElement","evt","_paintBase","baseColor","paintBase","_paintImage","paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","observe","attributes","originalStyle","_mutationObserver","priority","toString","_context","_generated","paint","stop","cb","pfColor","psColor","getStrokeColor","zOpacityFactor","opacityRate","zStrokeOpacity","sizeRate","drawParticlePlugin","drawPlugin","obs","records","record","attributeName","e","initUpdaters","initPlugins","background","elementStyle","backgroundPosition","backgroundRepeat","repeat","backgroundSize","loadCanvas","dataset","ariaHidden","newSize","oldSize","started","resizeFactor","windowResize","needsRefresh","updateActualOptions","setDensity","manageListener","event","handler","add","addOptions","passive","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","dark","light","theme","themes","auto","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","_handleWindowResize","_resizeTimeout","clearTimeout","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","mouseMove","touchStart","touchMove","touchEndClick","mouseUp","mouseDown","touchEnd","mouseLeave","touchCancel","_manageListeners","detectType","detectsOn","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChange","mediaMatch","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","_resizeObserver","unobserve","entries","target","_mouseDown","downPosition","_mouseTouchClick","mousePosition","clickPositionValid","_mouseTouchMove","mouseEvent","clientRect","getBoundingClientRect","clientX","clientY","currentTarget","sourceRect","targetRect","canvasRect","offsetY","touchEvent","lastTouch","touches","_touchEnd","from","changedTouches","touch","_touches","delete","_touchEndClick","_touchStart","performance","now","addListeners","removeListeners","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","elementId","Parallax","HoverEvent","ResizeEvent","Events","onclick","ondiv","onhover","Modes","interactors","interactor","Interactivity","detect_on","ManualParticle","Responsive","ThemeDefault","Theme","ColorAnimation","HslAnimation","AnimatableColor","colorAnimation","CollisionsAbsorb","CollisionsOverlap","retries","ParticlesBounceFactor","ParticlesBounce","Collisions","overlap","MoveAngle","MoveAttract","rotateX","rotateY","MoveCenter","MoveGravity","MovePath","generator","MoveTrailFill","MoveTrail","OutModes","Spin","Move","straight","noise","out_mode","OpacityAnimation","RangedAnimationOptions","opacity_min","Opacity","anim","ParticlesDensity","value_area","ParticlesNumber","density","limit","Shadow","charKey","charAltKey","imageKey","imageAltKey","polygonKey","polygonAltKey","Shape","mainKey","altKey","altOverride","itemIsArray","emptyValue","mainDifferentValues","altDifferentValues","custom","_value","SizeAnimation","size_min","Size","Stroke","ZIndex","ParticlesOptions","strokeToLoad","sourceOptionsArr","sourceOptions","_len2","_key2","Options","_findDefaultTheme","_importPreset","preset","getPreset","autoPlay","detectRetina","fpsLimit","manualParticles","pauseOnOutsideViewport","zLayers","backgroundMode","fps_limit","retina_detect","optResponsive","existingTheme","optTheme","setResponsive","defaultOptions","responsiveOptions","screen","availWidth","setTheme","chosenTheme","clientDarkMode","defaultTheme","InteractionManager","_interactors","getInteractors","_externalInteractors","_particleInteractors","externalInteract","particlesInteract","fixOutMode","checkModes","diameter","coord","maxCoord","setCb","Particle","overrideOptions","_this","_calcPosition","tryCount","pluginPos","particlePosition","Vector3d","exactPosition","fixHorizontal","fixVertical","_checkOverlap","_calculateVelocity","copy","rad","radOffset","collisionsOptions","overlapOptions","_getRollColor","roll","backColor","alter","backFactor","backSum","alterHsl","_initPosition","zIndexValue","_loadShapeData","override","getHslFromAnimation","ignoresResizeRatio","mainOptions","shapeType","overrideShapeType","getPathGenerator","addPath","initParticle","needsSort","lastZIndex","drawer","drawers","getShapeDrawer","sideCountFunc","mover","movers","isInsideCanvas","isVisible","Point","QuadTree","rectangle","capacity","_subdivide","_subs","_divided","_points","insert","check","found","queryRectangle","qTreeRectangle","_applyDensity","manualCount","numberOptions","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","densityOptions","_pushParticle","initializer","pool","pop","_nextId","canAdd","_array","_zArray","dispatchEvent","_removeParticle","zIdx","splice","_interactionManager","getMovers","getUpdaters","addManualParticles","addParticle","countToRemove","condition","particlesInitialization","pathGenerators","j","nb","pushing","redraw","removeAt","deleted","particlesToDelete","Set","particleUpdate","checkDelete","has","zArray","Retina","devicePixelRatio","moveDistance","guardCheck","loadContainerOptions","defaultPathGenerator","Container","_intersectionManager","entry","isIntersecting","_nextFrame","lastFrameTime","timestamp","initDelta","addLifeTime","alive","_delay","_duration","_lifeTime","_firstStart","_paused","_sourceOptions","_initialSourceOptions","_options","_eventListeners","IntersectionObserver","_intersectionObserver","addClickHandler","clickOrTouchHandler","posRetina","touched","touchMoved","touchStartHandler","touchMoveHandler","radiusX","radiusY","touchCancelHandler","mainArr","idx","refreshTime","_drawAnimationFrame","requestAnimationFrame","export","supported","blob","shapes","getSupportedShapes","availablePlugins","getAvailablePlugins","particlesSetup","_currentTheme","cancelAnimationFrame","needsUpdate","setNoise","noiseOrGenerator","setPath","pathOrGenerator","oldGenerator","_delayTimeout","HTMLElement","newMaxWidth","responsiveMaxWidth","EventDispatcher","_listeners","listener","arr","args","listeners","hasEventListener","removeAllEventListeners","getItemsFromInitializer","initializers","values","Plugins","_initializers","presets","initInteractor","addParticleMover","initMover","initUpdater","addPathGenerator","addPreset","presetKey","addShapeDrawer","types","Engine","_configs","_domArray","_eventDispatcher","_initialized","configs","config","version","addConfig","nameOrConfig","interactorInitializer","moverInitializer","updaterInitializer","initOrRefresh","afterEffectOrRefresh","destroyOrRefresh","customDrawer","realInit","realAfterEffect","realDestroy","realRefresh","afterEffect","domItem","tagIdOrOptionsOrParams","loadFromArray","optionsOrIndex","isParams","_loadParams","setJSON","fallback","json","getDataFromUrl","domContainer","getElementById","body","append","oldIndex","old","tagName","toLowerCase","existingCanvases","getElementsByTagName","appendChild","newItem","HslColorManager","stringPrefix","handleColor","hsl","hslToRgb","handleRangeColor","parseString","result","exec","hslaToRgba","parseInt","RgbColorManager","rgbColor","rgb","rgbColorManager","hslColorManager","addColorManager","xOrCoords","clone","AnimationOptions","randomColorValue","midColorValue","colorManagers","manager","hue2rgb","q","stringToRgba","hexFixed","colorToRgb","getRandomRgbColor","stringToRgb","g1","b1","hslPercent","hsla","rgbResult","fixedMin","size1","rgb1","rgb2","destColor","resColor","setColorAnimation","closePath","dimension","fillRect","rotateData","transformData","c","setTransform","shadowOffsetX","shadowOffsetY","drawShape","drawShapeAfterEffect","Random","_updateFromAngle","coords3d","getLengthSq","distanceTo","distanceToSq","n","divTo","normalize","v3d","setVariants","visualElement","variantLabels","reverse","variant","getVariant","setTarget","variantChildren","child","animationControls","hasMounted","subscribers","controls","subscribe","definition","transitionOverride","invariant","animations","animateVisualElement","setValues","stopAnimation","mount","useAnimation","useConstant","useIsomorphicLayoutEffect"],"sourceRoot":""}